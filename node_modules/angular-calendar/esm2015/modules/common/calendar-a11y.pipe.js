import * as tslib_1 from "tslib";
import { Pipe, LOCALE_ID, Inject } from '@angular/core';
import { CalendarA11y } from './calendar-a11y.provider';
/**
 * This pipe is primarily for rendering aria labels. Example usage:
 * ```typescript
 * // where `myEvent` is a `CalendarEvent` and myLocale is a locale identifier
 * {{ { event: myEvent, locale: myLocale } | calendarA11y: 'eventDescription' }}
 * ```
 */
import * as ɵngcc0 from '@angular/core';
let CalendarA11yPipe = class CalendarA11yPipe {
    constructor(calendarA11y, locale) {
        this.calendarA11y = calendarA11y;
        this.locale = locale;
    }
    transform(a11yParams, method) {
        a11yParams.locale = a11yParams.locale || this.locale;
        if (typeof this.calendarA11y[method] === 'undefined') {
            const allowedMethods = Object.getOwnPropertyNames(Object.getPrototypeOf(CalendarA11y.prototype)).filter(iMethod => iMethod !== 'constructor');
            throw new Error(`${method} is not a valid a11y method. Can only be one of ${allowedMethods.join(', ')}`);
        }
        return this.calendarA11y[method](a11yParams);
    }
};
CalendarA11yPipe.ɵfac = function CalendarA11yPipe_Factory(t) { return new (t || CalendarA11yPipe)(ɵngcc0.ɵɵdirectiveInject(CalendarA11y), ɵngcc0.ɵɵdirectiveInject(LOCALE_ID)); };
CalendarA11yPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "calendarA11y", type: CalendarA11yPipe, pure: true });
CalendarA11yPipe.ctorParameters = () => [
    { type: CalendarA11y },
    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }
];
CalendarA11yPipe = tslib_1.__decorate([ tslib_1.__param(1, Inject(LOCALE_ID)),
    tslib_1.__metadata("design:paramtypes", [CalendarA11y, String])
], CalendarA11yPipe);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CalendarA11yPipe, [{
        type: Pipe,
        args: [{
                name: 'calendarA11y'
            }]
    }], function () { return [{ type: CalendarA11y }, { type: String, decorators: [{
                type: Inject,
                args: [LOCALE_ID]
            }] }]; }, null); })();
export { CalendarA11yPipe };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvYW5ndWxhci1jYWxlbmRhci9lc20yMDE1L21vZHVsZXMvY29tbW9uL2NhbGVuZGFyLWExMXkucGlwZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7QUFVQTs7Ozs7Ozs7Ozs7Ozs7OzJHQWFFOzs7Ozt1Q0FLcUMsQUFJcEM7Ozs7Ozs7Ozs7O2tDQUVrQiIsImZpbGUiOiJjYWxlbmRhci1hMTF5LnBpcGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB0c2xpYl8xIGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgUGlwZSwgTE9DQUxFX0lELCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENhbGVuZGFyQTExeSB9IGZyb20gJy4vY2FsZW5kYXItYTExeS5wcm92aWRlcic7XG4vKipcbiAqIFRoaXMgcGlwZSBpcyBwcmltYXJpbHkgZm9yIHJlbmRlcmluZyBhcmlhIGxhYmVscy4gRXhhbXBsZSB1c2FnZTpcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIC8vIHdoZXJlIGBteUV2ZW50YCBpcyBhIGBDYWxlbmRhckV2ZW50YCBhbmQgbXlMb2NhbGUgaXMgYSBsb2NhbGUgaWRlbnRpZmllclxuICoge3sgeyBldmVudDogbXlFdmVudCwgbG9jYWxlOiBteUxvY2FsZSB9IHwgY2FsZW5kYXJBMTF5OiAnZXZlbnREZXNjcmlwdGlvbicgfX1cbiAqIGBgYFxuICovXG5sZXQgQ2FsZW5kYXJBMTF5UGlwZSA9IGNsYXNzIENhbGVuZGFyQTExeVBpcGUge1xuICAgIGNvbnN0cnVjdG9yKGNhbGVuZGFyQTExeSwgbG9jYWxlKSB7XG4gICAgICAgIHRoaXMuY2FsZW5kYXJBMTF5ID0gY2FsZW5kYXJBMTF5O1xuICAgICAgICB0aGlzLmxvY2FsZSA9IGxvY2FsZTtcbiAgICB9XG4gICAgdHJhbnNmb3JtKGExMXlQYXJhbXMsIG1ldGhvZCkge1xuICAgICAgICBhMTF5UGFyYW1zLmxvY2FsZSA9IGExMXlQYXJhbXMubG9jYWxlIHx8IHRoaXMubG9jYWxlO1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMuY2FsZW5kYXJBMTF5W21ldGhvZF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBjb25zdCBhbGxvd2VkTWV0aG9kcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE9iamVjdC5nZXRQcm90b3R5cGVPZihDYWxlbmRhckExMXkucHJvdG90eXBlKSkuZmlsdGVyKGlNZXRob2QgPT4gaU1ldGhvZCAhPT0gJ2NvbnN0cnVjdG9yJyk7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7bWV0aG9kfSBpcyBub3QgYSB2YWxpZCBhMTF5IG1ldGhvZC4gQ2FuIG9ubHkgYmUgb25lIG9mICR7YWxsb3dlZE1ldGhvZHMuam9pbignLCAnKX1gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5jYWxlbmRhckExMXlbbWV0aG9kXShhMTF5UGFyYW1zKTtcbiAgICB9XG59O1xuQ2FsZW5kYXJBMTF5UGlwZS5jdG9yUGFyYW1ldGVycyA9ICgpID0+IFtcbiAgICB7IHR5cGU6IENhbGVuZGFyQTExeSB9LFxuICAgIHsgdHlwZTogU3RyaW5nLCBkZWNvcmF0b3JzOiBbeyB0eXBlOiBJbmplY3QsIGFyZ3M6IFtMT0NBTEVfSUQsXSB9XSB9XG5dO1xuQ2FsZW5kYXJBMTF5UGlwZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgUGlwZSh7XG4gICAgICAgIG5hbWU6ICdjYWxlbmRhckExMXknXG4gICAgfSksXG4gICAgdHNsaWJfMS5fX3BhcmFtKDEsIEluamVjdChMT0NBTEVfSUQpKSxcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbQ2FsZW5kYXJBMTF5LCBTdHJpbmddKVxuXSwgQ2FsZW5kYXJBMTF5UGlwZSk7XG5leHBvcnQgeyBDYWxlbmRhckExMXlQaXBlIH07XG4iXX0=