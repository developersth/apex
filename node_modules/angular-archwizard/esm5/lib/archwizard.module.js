/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { WizardCompletionStepComponent } from './components/wizard-completion-step.component';
import { WizardNavigationBarComponent } from './components/wizard-navigation-bar.component';
import { WizardStepComponent } from './components/wizard-step.component';
import { WizardComponent } from './components/wizard.component';
import { EnableBackLinksDirective } from './directives/enable-back-links.directive';
import { GoToStepDirective } from './directives/go-to-step.directive';
import { NextStepDirective } from './directives/next-step.directive';
import { OptionalStepDirective } from './directives/optional-step.directive';
import { PreviousStepDirective } from './directives/previous-step.directive';
import { ResetWizardDirective } from './directives/reset-wizard.directive';
import { SelectedStepDirective } from './directives/selected-step.directive';
import { WizardCompletionStepDirective } from './directives/wizard-completion-step.directive';
import { WizardStepSymbolDirective } from './directives/wizard-step-symbol.directive';
import { WizardStepTitleDirective } from './directives/wizard-step-title.directive';
import { WizardStepDirective } from './directives/wizard-step.directive';
import { NavigationModeDirective } from './directives/navigation-mode.directive';
import { CompletedStepDirective } from './directives/completed-step.directive';
/**
 * The module defining all the content inside `angular-archwizard`
 *
 * @author Marc Arndt
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
var ArchwizardModule = /** @class */ (function () {
    function ArchwizardModule() {
    }
    /* istanbul ignore next */
    /* istanbul ignore next */
    /**
     * @return {?}
     */
    ArchwizardModule.forRoot = /* istanbul ignore next */
    /**
     * @return {?}
     */
    function () {
        return {
            ngModule: ArchwizardModule,
            providers: [
            // Nothing here yet
            ]
        };
    };
ArchwizardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ArchwizardModule });
ArchwizardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ArchwizardModule_Factory(t) { return new (t || ArchwizardModule)(); }, imports: [[
            CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ArchwizardModule, { declarations: function () { return [WizardComponent,
        WizardStepComponent,
        WizardNavigationBarComponent,
        WizardCompletionStepComponent,
        GoToStepDirective,
        NextStepDirective,
        PreviousStepDirective,
        OptionalStepDirective,
        WizardStepSymbolDirective,
        WizardStepTitleDirective,
        EnableBackLinksDirective,
        WizardStepDirective,
        WizardCompletionStepDirective,
        SelectedStepDirective,
        ResetWizardDirective,
        NavigationModeDirective,
        CompletedStepDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [WizardComponent,
        WizardStepComponent,
        WizardNavigationBarComponent,
        WizardCompletionStepComponent,
        GoToStepDirective,
        NextStepDirective,
        PreviousStepDirective,
        OptionalStepDirective,
        WizardStepSymbolDirective,
        WizardStepTitleDirective,
        EnableBackLinksDirective,
        WizardStepDirective,
        WizardCompletionStepDirective,
        SelectedStepDirective,
        ResetWizardDirective,
        NavigationModeDirective,
        CompletedStepDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ArchwizardModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    WizardComponent,
                    WizardStepComponent,
                    WizardNavigationBarComponent,
                    WizardCompletionStepComponent,
                    GoToStepDirective,
                    NextStepDirective,
                    PreviousStepDirective,
                    OptionalStepDirective,
                    WizardStepSymbolDirective,
                    WizardStepTitleDirective,
                    EnableBackLinksDirective,
                    WizardStepDirective,
                    WizardCompletionStepDirective,
                    SelectedStepDirective,
                    ResetWizardDirective,
                    NavigationModeDirective,
                    CompletedStepDirective,
                ],
                imports: [
                    CommonModule
                ],
                exports: [
                    WizardComponent,
                    WizardStepComponent,
                    WizardNavigationBarComponent,
                    WizardCompletionStepComponent,
                    GoToStepDirective,
                    NextStepDirective,
                    PreviousStepDirective,
                    OptionalStepDirective,
                    WizardStepSymbolDirective,
                    WizardStepTitleDirective,
                    EnableBackLinksDirective,
                    WizardStepDirective,
                    WizardCompletionStepDirective,
                    SelectedStepDirective,
                    ResetWizardDirective,
                    NavigationModeDirective,
                    CompletedStepDirective,
                ]
            }]
    }], function () { return []; }, null); })();
ɵngcc0.ɵɵsetComponentScope(WizardComponent, [WizardComponent,
    WizardStepComponent,
    WizardNavigationBarComponent,
    WizardCompletionStepComponent,
    GoToStepDirective,
    NextStepDirective,
    PreviousStepDirective,
    OptionalStepDirective,
    WizardStepSymbolDirective,
    WizardStepTitleDirective,
    EnableBackLinksDirective,
    WizardStepDirective,
    WizardCompletionStepDirective,
    SelectedStepDirective,
    ResetWizardDirective,
    NavigationModeDirective,
    CompletedStepDirective, ɵngcc1.NgClass, ɵngcc1.NgComponentOutlet, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgStyle, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault, ɵngcc1.NgPlural, ɵngcc1.NgPluralCase], [ɵngcc1.AsyncPipe, ɵngcc1.UpperCasePipe, ɵngcc1.LowerCasePipe, ɵngcc1.JsonPipe, ɵngcc1.SlicePipe, ɵngcc1.DecimalPipe, ɵngcc1.PercentPipe, ɵngcc1.TitleCasePipe, ɵngcc1.CurrencyPipe, ɵngcc1.DatePipe, ɵngcc1.I18nPluralPipe, ɵngcc1.I18nSelectPipe, ɵngcc1.KeyValuePipe]);
    return ArchwizardModule;
}());
export { ArchwizardModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvYW5ndWxhci1hcmNod2l6YXJkL2VzbTUvbGliL2FyY2h3aXphcmQubW9kdWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE0QkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUFtQk07Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MmZBNkNBIiwiZmlsZSI6ImFyY2h3aXphcmQubW9kdWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxjb25zdGFudFByb3BlcnR5LGV4dHJhUmVxdWlyZSxtaXNzaW5nT3ZlcnJpZGUsbWlzc2luZ1JldHVybix1bnVzZWRQcml2YXRlTWVtYmVycyx1c2VsZXNzQ29kZX0gY2hlY2tlZCBieSB0c2NcbiAqL1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBXaXphcmRDb21wbGV0aW9uU3RlcENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy93aXphcmQtY29tcGxldGlvbi1zdGVwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBXaXphcmROYXZpZ2F0aW9uQmFyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3dpemFyZC1uYXZpZ2F0aW9uLWJhci5jb21wb25lbnQnO1xuaW1wb3J0IHsgV2l6YXJkU3RlcENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy93aXphcmQtc3RlcC5jb21wb25lbnQnO1xuaW1wb3J0IHsgV2l6YXJkQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3dpemFyZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgRW5hYmxlQmFja0xpbmtzRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2VuYWJsZS1iYWNrLWxpbmtzLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBHb1RvU3RlcERpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9nby10by1zdGVwLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBOZXh0U3RlcERpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9uZXh0LXN0ZXAuZGlyZWN0aXZlJztcbmltcG9ydCB7IE9wdGlvbmFsU3RlcERpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9vcHRpb25hbC1zdGVwLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBQcmV2aW91c1N0ZXBEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvcHJldmlvdXMtc3RlcC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgUmVzZXRXaXphcmREaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvcmVzZXQtd2l6YXJkLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTZWxlY3RlZFN0ZXBEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvc2VsZWN0ZWQtc3RlcC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgV2l6YXJkQ29tcGxldGlvblN0ZXBEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvd2l6YXJkLWNvbXBsZXRpb24tc3RlcC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgV2l6YXJkU3RlcFN5bWJvbERpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy93aXphcmQtc3RlcC1zeW1ib2wuZGlyZWN0aXZlJztcbmltcG9ydCB7IFdpemFyZFN0ZXBUaXRsZURpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy93aXphcmQtc3RlcC10aXRsZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgV2l6YXJkU3RlcERpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy93aXphcmQtc3RlcC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTmF2aWdhdGlvbk1vZGVEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvbmF2aWdhdGlvbi1tb2RlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBDb21wbGV0ZWRTdGVwRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2NvbXBsZXRlZC1zdGVwLmRpcmVjdGl2ZSc7XG4vKipcbiAqIFRoZSBtb2R1bGUgZGVmaW5pbmcgYWxsIHRoZSBjb250ZW50IGluc2lkZSBgYW5ndWxhci1hcmNod2l6YXJkYFxuICpcbiAqIEBhdXRob3IgTWFyYyBBcm5kdFxuICovXG52YXIgQXJjaHdpemFyZE1vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBBcmNod2l6YXJkTW9kdWxlKCkge1xuICAgIH1cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgLyoqXG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBBcmNod2l6YXJkTW9kdWxlLmZvclJvb3QgPSAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIC8qKlxuICAgICAqIEByZXR1cm4gez99XG4gICAgICovXG4gICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmdNb2R1bGU6IEFyY2h3aXphcmRNb2R1bGUsXG4gICAgICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgIC8vIE5vdGhpbmcgaGVyZSB5ZXRcbiAgICAgICAgICAgIF1cbiAgICAgICAgfTtcbiAgICB9O1xuICAgIEFyY2h3aXphcmRNb2R1bGUuZGVjb3JhdG9ycyA9IFtcbiAgICAgICAgeyB0eXBlOiBOZ01vZHVsZSwgYXJnczogW3tcbiAgICAgICAgICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICBXaXphcmRDb21wb25lbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICBXaXphcmRTdGVwQ29tcG9uZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgV2l6YXJkTmF2aWdhdGlvbkJhckNvbXBvbmVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgIFdpemFyZENvbXBsZXRpb25TdGVwQ29tcG9uZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgR29Ub1N0ZXBEaXJlY3RpdmUsXG4gICAgICAgICAgICAgICAgICAgICAgICBOZXh0U3RlcERpcmVjdGl2ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFByZXZpb3VzU3RlcERpcmVjdGl2ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIE9wdGlvbmFsU3RlcERpcmVjdGl2ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFdpemFyZFN0ZXBTeW1ib2xEaXJlY3RpdmUsXG4gICAgICAgICAgICAgICAgICAgICAgICBXaXphcmRTdGVwVGl0bGVEaXJlY3RpdmUsXG4gICAgICAgICAgICAgICAgICAgICAgICBFbmFibGVCYWNrTGlua3NEaXJlY3RpdmUsXG4gICAgICAgICAgICAgICAgICAgICAgICBXaXphcmRTdGVwRGlyZWN0aXZlLFxuICAgICAgICAgICAgICAgICAgICAgICAgV2l6YXJkQ29tcGxldGlvblN0ZXBEaXJlY3RpdmUsXG4gICAgICAgICAgICAgICAgICAgICAgICBTZWxlY3RlZFN0ZXBEaXJlY3RpdmUsXG4gICAgICAgICAgICAgICAgICAgICAgICBSZXNldFdpemFyZERpcmVjdGl2ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIE5hdmlnYXRpb25Nb2RlRGlyZWN0aXZlLFxuICAgICAgICAgICAgICAgICAgICAgICAgQ29tcGxldGVkU3RlcERpcmVjdGl2ZSxcbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgaW1wb3J0czogW1xuICAgICAgICAgICAgICAgICAgICAgICAgQ29tbW9uTW9kdWxlXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIGV4cG9ydHM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIFdpemFyZENvbXBvbmVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgIFdpemFyZFN0ZXBDb21wb25lbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICBXaXphcmROYXZpZ2F0aW9uQmFyQ29tcG9uZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgV2l6YXJkQ29tcGxldGlvblN0ZXBDb21wb25lbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICBHb1RvU3RlcERpcmVjdGl2ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIE5leHRTdGVwRGlyZWN0aXZlLFxuICAgICAgICAgICAgICAgICAgICAgICAgUHJldmlvdXNTdGVwRGlyZWN0aXZlLFxuICAgICAgICAgICAgICAgICAgICAgICAgT3B0aW9uYWxTdGVwRGlyZWN0aXZlLFxuICAgICAgICAgICAgICAgICAgICAgICAgV2l6YXJkU3RlcFN5bWJvbERpcmVjdGl2ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFdpemFyZFN0ZXBUaXRsZURpcmVjdGl2ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIEVuYWJsZUJhY2tMaW5rc0RpcmVjdGl2ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFdpemFyZFN0ZXBEaXJlY3RpdmUsXG4gICAgICAgICAgICAgICAgICAgICAgICBXaXphcmRDb21wbGV0aW9uU3RlcERpcmVjdGl2ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFNlbGVjdGVkU3RlcERpcmVjdGl2ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlc2V0V2l6YXJkRGlyZWN0aXZlLFxuICAgICAgICAgICAgICAgICAgICAgICAgTmF2aWdhdGlvbk1vZGVEaXJlY3RpdmUsXG4gICAgICAgICAgICAgICAgICAgICAgICBDb21wbGV0ZWRTdGVwRGlyZWN0aXZlLFxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfSxdIH1cbiAgICBdO1xuICAgIHJldHVybiBBcmNod2l6YXJkTW9kdWxlO1xufSgpKTtcbmV4cG9ydCB7IEFyY2h3aXphcmRNb2R1bGUgfTtcbiJdfQ==