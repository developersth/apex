import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { arrayLength } from './array-length/validator';
import { base64 } from './base64/validator';
import { creditCard } from './credit-card/validator';
import { date } from './date/validator';
import { dateISO } from './date-iso/validator';
import { digits } from './digits/validator';
import { email } from './email/validator';
import { equal } from './equal/validator';
import { equalTo } from './equal-to/validator';
import { gt } from './greater-than/validator';
import { gte } from './greater-than-equal/validator';
import { json } from './json/validator';
import { lt } from './less-than/validator';
import { lte } from './less-than-equal/validator';
import { max } from './max/validator';
import { maxDate } from './max-date/validator';
import { min } from './min/validator';
import { minDate } from './min-date/validator';
import { notEqual } from './not-equal/validator';
import { notEqualTo } from './not-equal-to/validator';
import { number } from './number/validator';
import { property } from './property/validator';
import { range } from './range/validator';
import { rangeLength } from './range-length/validator';
import { uuid } from './uuid/validator';
import { url } from './url/validator';
import { ArrayLengthValidator } from './array-length/directive';
import { Base64Validator } from './base64/directive';
import { CreditCardValidator } from './credit-card/directive';
import { DateValidator } from './date/directive';
import { DateISOValidator } from './date-iso/directive';
import { DigitsValidator } from './digits/directive';
import { EmailValidator } from './email/directive';
import { EqualValidator } from './equal/directive';
import { EqualToValidator } from './equal-to/directive';
import { GreaterThanValidator } from './greater-than/directive';
import { GreaterThanEqualValidator } from './greater-than-equal/directive';
import { JSONValidator } from './json/directive';
import { LessThanValidator } from './less-than/directive';
import { LessThanEqualValidator } from './less-than-equal/directive';
import { MaxValidator } from './max/directive';
import { MaxDateValidator } from './max-date/directive';
import { MinValidator } from './min/directive';
import { MinDateValidator } from './min-date/directive';
import { NotEqualValidator } from './not-equal/directive';
import { NotEqualToValidator } from './not-equal-to/directive';
import { NumberValidator } from './number/directive';
import { PropertyValidator } from './property/directive';
import { RangeValidator } from './range/directive';
import { RangeLengthValidator } from './range-length/directive';
import { UrlValidator } from './url/directive';
import { UUIDValidator } from './uuid/directive';
import * as ɵngcc0 from '@angular/core';
export var CustomValidators = {
    arrayLength: arrayLength,
    base64: base64,
    creditCard: creditCard,
    date: date,
    dateISO: dateISO,
    digits: digits,
    email: email,
    equal: equal,
    equalTo: equalTo,
    gt: gt,
    gte: gte,
    json: json,
    lt: lt,
    lte: lte,
    max: max,
    maxDate: maxDate,
    min: min,
    minDate: minDate,
    notEqual: notEqual,
    notEqualTo: notEqualTo,
    number: number,
    property: property,
    range: range,
    rangeLength: rangeLength,
    url: url,
    uuid: uuid
};
var CustomDirectives = [
    ArrayLengthValidator,
    Base64Validator,
    CreditCardValidator,
    DateValidator,
    DateISOValidator,
    DigitsValidator,
    EmailValidator,
    EqualValidator,
    EqualToValidator,
    GreaterThanValidator,
    GreaterThanEqualValidator,
    JSONValidator,
    LessThanValidator,
    LessThanEqualValidator,
    MaxValidator,
    MaxDateValidator,
    MinValidator,
    MinDateValidator,
    NotEqualValidator,
    NotEqualToValidator,
    NumberValidator,
    PropertyValidator,
    RangeValidator,
    RangeLengthValidator,
    UrlValidator,
    UUIDValidator
];
var CustomFormsModule = /** @class */ (function () {
    function CustomFormsModule() {
    }
CustomFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CustomFormsModule });
CustomFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CustomFormsModule_Factory(t) { return new (t || CustomFormsModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CustomFormsModule, { declarations: [ArrayLengthValidator,
        Base64Validator,
        CreditCardValidator,
        DateValidator,
        DateISOValidator,
        DigitsValidator,
        EmailValidator,
        EqualValidator,
        EqualToValidator,
        GreaterThanValidator,
        GreaterThanEqualValidator,
        JSONValidator,
        LessThanValidator,
        LessThanEqualValidator,
        MaxValidator,
        MaxDateValidator,
        MinValidator,
        MinDateValidator,
        NotEqualValidator,
        NotEqualToValidator,
        NumberValidator,
        PropertyValidator,
        RangeValidator,
        RangeLengthValidator,
        UrlValidator,
        UUIDValidator], exports: [ArrayLengthValidator,
        Base64Validator,
        CreditCardValidator,
        DateValidator,
        DateISOValidator,
        DigitsValidator,
        EmailValidator,
        EqualValidator,
        EqualToValidator,
        GreaterThanValidator,
        GreaterThanEqualValidator,
        JSONValidator,
        LessThanValidator,
        LessThanEqualValidator,
        MaxValidator,
        MaxDateValidator,
        MinValidator,
        MinDateValidator,
        NotEqualValidator,
        NotEqualToValidator,
        NumberValidator,
        PropertyValidator,
        RangeValidator,
        RangeLengthValidator,
        UrlValidator,
        UUIDValidator] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CustomFormsModule, [{
        type: NgModule,
        args: [{
                declarations: [CustomDirectives],
                exports: [CustomDirectives]
            }]
    }], function () { return []; }, null); })();
    return CustomFormsModule;
}());
export { CustomFormsModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvbmd4LWN1c3RvbS12YWxpZGF0b3JzL2VzbTUvc3JjL2FwcC9jdXN0b20tZm9ybXMubW9kdWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0RBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBMERLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0RBTXFCIiwiZmlsZSI6ImN1c3RvbS1mb3Jtcy5tb2R1bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB0c2xpYl8xIGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGFycmF5TGVuZ3RoIH0gZnJvbSAnLi9hcnJheS1sZW5ndGgvdmFsaWRhdG9yJztcbmltcG9ydCB7IGJhc2U2NCB9IGZyb20gJy4vYmFzZTY0L3ZhbGlkYXRvcic7XG5pbXBvcnQgeyBjcmVkaXRDYXJkIH0gZnJvbSAnLi9jcmVkaXQtY2FyZC92YWxpZGF0b3InO1xuaW1wb3J0IHsgZGF0ZSB9IGZyb20gJy4vZGF0ZS92YWxpZGF0b3InO1xuaW1wb3J0IHsgZGF0ZUlTTyB9IGZyb20gJy4vZGF0ZS1pc28vdmFsaWRhdG9yJztcbmltcG9ydCB7IGRpZ2l0cyB9IGZyb20gJy4vZGlnaXRzL3ZhbGlkYXRvcic7XG5pbXBvcnQgeyBlbWFpbCB9IGZyb20gJy4vZW1haWwvdmFsaWRhdG9yJztcbmltcG9ydCB7IGVxdWFsIH0gZnJvbSAnLi9lcXVhbC92YWxpZGF0b3InO1xuaW1wb3J0IHsgZXF1YWxUbyB9IGZyb20gJy4vZXF1YWwtdG8vdmFsaWRhdG9yJztcbmltcG9ydCB7IGd0IH0gZnJvbSAnLi9ncmVhdGVyLXRoYW4vdmFsaWRhdG9yJztcbmltcG9ydCB7IGd0ZSB9IGZyb20gJy4vZ3JlYXRlci10aGFuLWVxdWFsL3ZhbGlkYXRvcic7XG5pbXBvcnQgeyBqc29uIH0gZnJvbSAnLi9qc29uL3ZhbGlkYXRvcic7XG5pbXBvcnQgeyBsdCB9IGZyb20gJy4vbGVzcy10aGFuL3ZhbGlkYXRvcic7XG5pbXBvcnQgeyBsdGUgfSBmcm9tICcuL2xlc3MtdGhhbi1lcXVhbC92YWxpZGF0b3InO1xuaW1wb3J0IHsgbWF4IH0gZnJvbSAnLi9tYXgvdmFsaWRhdG9yJztcbmltcG9ydCB7IG1heERhdGUgfSBmcm9tICcuL21heC1kYXRlL3ZhbGlkYXRvcic7XG5pbXBvcnQgeyBtaW4gfSBmcm9tICcuL21pbi92YWxpZGF0b3InO1xuaW1wb3J0IHsgbWluRGF0ZSB9IGZyb20gJy4vbWluLWRhdGUvdmFsaWRhdG9yJztcbmltcG9ydCB7IG5vdEVxdWFsIH0gZnJvbSAnLi9ub3QtZXF1YWwvdmFsaWRhdG9yJztcbmltcG9ydCB7IG5vdEVxdWFsVG8gfSBmcm9tICcuL25vdC1lcXVhbC10by92YWxpZGF0b3InO1xuaW1wb3J0IHsgbnVtYmVyIH0gZnJvbSAnLi9udW1iZXIvdmFsaWRhdG9yJztcbmltcG9ydCB7IHByb3BlcnR5IH0gZnJvbSAnLi9wcm9wZXJ0eS92YWxpZGF0b3InO1xuaW1wb3J0IHsgcmFuZ2UgfSBmcm9tICcuL3JhbmdlL3ZhbGlkYXRvcic7XG5pbXBvcnQgeyByYW5nZUxlbmd0aCB9IGZyb20gJy4vcmFuZ2UtbGVuZ3RoL3ZhbGlkYXRvcic7XG5pbXBvcnQgeyB1dWlkIH0gZnJvbSAnLi91dWlkL3ZhbGlkYXRvcic7XG5pbXBvcnQgeyB1cmwgfSBmcm9tICcuL3VybC92YWxpZGF0b3InO1xuaW1wb3J0IHsgQXJyYXlMZW5ndGhWYWxpZGF0b3IgfSBmcm9tICcuL2FycmF5LWxlbmd0aC9kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQmFzZTY0VmFsaWRhdG9yIH0gZnJvbSAnLi9iYXNlNjQvZGlyZWN0aXZlJztcbmltcG9ydCB7IENyZWRpdENhcmRWYWxpZGF0b3IgfSBmcm9tICcuL2NyZWRpdC1jYXJkL2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBEYXRlVmFsaWRhdG9yIH0gZnJvbSAnLi9kYXRlL2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBEYXRlSVNPVmFsaWRhdG9yIH0gZnJvbSAnLi9kYXRlLWlzby9kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRGlnaXRzVmFsaWRhdG9yIH0gZnJvbSAnLi9kaWdpdHMvZGlyZWN0aXZlJztcbmltcG9ydCB7IEVtYWlsVmFsaWRhdG9yIH0gZnJvbSAnLi9lbWFpbC9kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRXF1YWxWYWxpZGF0b3IgfSBmcm9tICcuL2VxdWFsL2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBFcXVhbFRvVmFsaWRhdG9yIH0gZnJvbSAnLi9lcXVhbC10by9kaXJlY3RpdmUnO1xuaW1wb3J0IHsgR3JlYXRlclRoYW5WYWxpZGF0b3IgfSBmcm9tICcuL2dyZWF0ZXItdGhhbi9kaXJlY3RpdmUnO1xuaW1wb3J0IHsgR3JlYXRlclRoYW5FcXVhbFZhbGlkYXRvciB9IGZyb20gJy4vZ3JlYXRlci10aGFuLWVxdWFsL2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBKU09OVmFsaWRhdG9yIH0gZnJvbSAnLi9qc29uL2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBMZXNzVGhhblZhbGlkYXRvciB9IGZyb20gJy4vbGVzcy10aGFuL2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBMZXNzVGhhbkVxdWFsVmFsaWRhdG9yIH0gZnJvbSAnLi9sZXNzLXRoYW4tZXF1YWwvZGlyZWN0aXZlJztcbmltcG9ydCB7IE1heFZhbGlkYXRvciB9IGZyb20gJy4vbWF4L2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBNYXhEYXRlVmFsaWRhdG9yIH0gZnJvbSAnLi9tYXgtZGF0ZS9kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTWluVmFsaWRhdG9yIH0gZnJvbSAnLi9taW4vZGlyZWN0aXZlJztcbmltcG9ydCB7IE1pbkRhdGVWYWxpZGF0b3IgfSBmcm9tICcuL21pbi1kYXRlL2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBOb3RFcXVhbFZhbGlkYXRvciB9IGZyb20gJy4vbm90LWVxdWFsL2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBOb3RFcXVhbFRvVmFsaWRhdG9yIH0gZnJvbSAnLi9ub3QtZXF1YWwtdG8vZGlyZWN0aXZlJztcbmltcG9ydCB7IE51bWJlclZhbGlkYXRvciB9IGZyb20gJy4vbnVtYmVyL2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBQcm9wZXJ0eVZhbGlkYXRvciB9IGZyb20gJy4vcHJvcGVydHkvZGlyZWN0aXZlJztcbmltcG9ydCB7IFJhbmdlVmFsaWRhdG9yIH0gZnJvbSAnLi9yYW5nZS9kaXJlY3RpdmUnO1xuaW1wb3J0IHsgUmFuZ2VMZW5ndGhWYWxpZGF0b3IgfSBmcm9tICcuL3JhbmdlLWxlbmd0aC9kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVXJsVmFsaWRhdG9yIH0gZnJvbSAnLi91cmwvZGlyZWN0aXZlJztcbmltcG9ydCB7IFVVSURWYWxpZGF0b3IgfSBmcm9tICcuL3V1aWQvZGlyZWN0aXZlJztcbmV4cG9ydCB2YXIgQ3VzdG9tVmFsaWRhdG9ycyA9IHtcbiAgICBhcnJheUxlbmd0aDogYXJyYXlMZW5ndGgsXG4gICAgYmFzZTY0OiBiYXNlNjQsXG4gICAgY3JlZGl0Q2FyZDogY3JlZGl0Q2FyZCxcbiAgICBkYXRlOiBkYXRlLFxuICAgIGRhdGVJU086IGRhdGVJU08sXG4gICAgZGlnaXRzOiBkaWdpdHMsXG4gICAgZW1haWw6IGVtYWlsLFxuICAgIGVxdWFsOiBlcXVhbCxcbiAgICBlcXVhbFRvOiBlcXVhbFRvLFxuICAgIGd0OiBndCxcbiAgICBndGU6IGd0ZSxcbiAgICBqc29uOiBqc29uLFxuICAgIGx0OiBsdCxcbiAgICBsdGU6IGx0ZSxcbiAgICBtYXg6IG1heCxcbiAgICBtYXhEYXRlOiBtYXhEYXRlLFxuICAgIG1pbjogbWluLFxuICAgIG1pbkRhdGU6IG1pbkRhdGUsXG4gICAgbm90RXF1YWw6IG5vdEVxdWFsLFxuICAgIG5vdEVxdWFsVG86IG5vdEVxdWFsVG8sXG4gICAgbnVtYmVyOiBudW1iZXIsXG4gICAgcHJvcGVydHk6IHByb3BlcnR5LFxuICAgIHJhbmdlOiByYW5nZSxcbiAgICByYW5nZUxlbmd0aDogcmFuZ2VMZW5ndGgsXG4gICAgdXJsOiB1cmwsXG4gICAgdXVpZDogdXVpZFxufTtcbnZhciBDdXN0b21EaXJlY3RpdmVzID0gW1xuICAgIEFycmF5TGVuZ3RoVmFsaWRhdG9yLFxuICAgIEJhc2U2NFZhbGlkYXRvcixcbiAgICBDcmVkaXRDYXJkVmFsaWRhdG9yLFxuICAgIERhdGVWYWxpZGF0b3IsXG4gICAgRGF0ZUlTT1ZhbGlkYXRvcixcbiAgICBEaWdpdHNWYWxpZGF0b3IsXG4gICAgRW1haWxWYWxpZGF0b3IsXG4gICAgRXF1YWxWYWxpZGF0b3IsXG4gICAgRXF1YWxUb1ZhbGlkYXRvcixcbiAgICBHcmVhdGVyVGhhblZhbGlkYXRvcixcbiAgICBHcmVhdGVyVGhhbkVxdWFsVmFsaWRhdG9yLFxuICAgIEpTT05WYWxpZGF0b3IsXG4gICAgTGVzc1RoYW5WYWxpZGF0b3IsXG4gICAgTGVzc1RoYW5FcXVhbFZhbGlkYXRvcixcbiAgICBNYXhWYWxpZGF0b3IsXG4gICAgTWF4RGF0ZVZhbGlkYXRvcixcbiAgICBNaW5WYWxpZGF0b3IsXG4gICAgTWluRGF0ZVZhbGlkYXRvcixcbiAgICBOb3RFcXVhbFZhbGlkYXRvcixcbiAgICBOb3RFcXVhbFRvVmFsaWRhdG9yLFxuICAgIE51bWJlclZhbGlkYXRvcixcbiAgICBQcm9wZXJ0eVZhbGlkYXRvcixcbiAgICBSYW5nZVZhbGlkYXRvcixcbiAgICBSYW5nZUxlbmd0aFZhbGlkYXRvcixcbiAgICBVcmxWYWxpZGF0b3IsXG4gICAgVVVJRFZhbGlkYXRvclxuXTtcbnZhciBDdXN0b21Gb3Jtc01vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBDdXN0b21Gb3Jtc01vZHVsZSgpIHtcbiAgICB9XG4gICAgQ3VzdG9tRm9ybXNNb2R1bGUgPSB0c2xpYl8xLl9fZGVjb3JhdGUoW1xuICAgICAgICBOZ01vZHVsZSh7XG4gICAgICAgICAgICBkZWNsYXJhdGlvbnM6IFtDdXN0b21EaXJlY3RpdmVzXSxcbiAgICAgICAgICAgIGV4cG9ydHM6IFtDdXN0b21EaXJlY3RpdmVzXVxuICAgICAgICB9KVxuICAgIF0sIEN1c3RvbUZvcm1zTW9kdWxlKTtcbiAgICByZXR1cm4gQ3VzdG9tRm9ybXNNb2R1bGU7XG59KCkpO1xuZXhwb3J0IHsgQ3VzdG9tRm9ybXNNb2R1bGUgfTtcbiJdfQ==