import * as tslib_1 from "tslib";
import { Directive, Input, forwardRef } from '@angular/core';
import { NG_VALIDATORS, FormControl } from '@angular/forms';
import { equalTo } from './validator';
import * as ɵngcc0 from '@angular/core';
const EQUAL_TO_VALIDATOR = {
    provide: NG_VALIDATORS,
    useExisting: forwardRef(() => EqualToValidator),
    multi: true
};
let EqualToValidator = class EqualToValidator {
    ngOnInit() {
        this.validator = equalTo(this.equalTo);
    }
    validate(c) {
        return this.validator(c);
    }
};
EqualToValidator.ɵfac = function EqualToValidator_Factory(t) { return new (t || EqualToValidator)(); };
EqualToValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: EqualToValidator, selectors: [["", "equalTo", "", "formControlName", ""], ["", "equalTo", "", "formControl", ""], ["", "equalTo", "", "ngModel", ""]], inputs: { equalTo: "equalTo" }, features: [ɵngcc0.ɵɵProvidersFeature([EQUAL_TO_VALIDATOR])] });
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", FormControl)
], EqualToValidator.prototype, "equalTo", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EqualToValidator, [{
        type: Directive,
        args: [{
                selector: '[equalTo][formControlName],[equalTo][formControl],[equalTo][ngModel]',
                providers: [EQUAL_TO_VALIDATOR]
            }]
    }], null, { equalTo: [{
            type: Input
        }] }); })();
export { EqualToValidator };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvbmd4LWN1c3RvbS12YWxpZGF0b3JzL2VzbTIwMTUvc3JjL2FwcC9lcXVhbC10by9kaXJlY3RpdmUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7OytTQVlFOzs7O2tEQUlnRDs7Ozs7Ozs7O29CQU03QiIsImZpbGUiOiJkaXJlY3RpdmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB0c2xpYl8xIGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgZm9yd2FyZFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTkdfVkFMSURBVE9SUywgRm9ybUNvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBlcXVhbFRvIH0gZnJvbSAnLi92YWxpZGF0b3InO1xuY29uc3QgRVFVQUxfVE9fVkFMSURBVE9SID0ge1xuICAgIHByb3ZpZGU6IE5HX1ZBTElEQVRPUlMsXG4gICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gRXF1YWxUb1ZhbGlkYXRvciksXG4gICAgbXVsdGk6IHRydWVcbn07XG5sZXQgRXF1YWxUb1ZhbGlkYXRvciA9IGNsYXNzIEVxdWFsVG9WYWxpZGF0b3Ige1xuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLnZhbGlkYXRvciA9IGVxdWFsVG8odGhpcy5lcXVhbFRvKTtcbiAgICB9XG4gICAgdmFsaWRhdGUoYykge1xuICAgICAgICByZXR1cm4gdGhpcy52YWxpZGF0b3IoYyk7XG4gICAgfVxufTtcbnRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKSxcbiAgICB0c2xpYl8xLl9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBGb3JtQ29udHJvbClcbl0sIEVxdWFsVG9WYWxpZGF0b3IucHJvdG90eXBlLCBcImVxdWFsVG9cIiwgdm9pZCAwKTtcbkVxdWFsVG9WYWxpZGF0b3IgPSB0c2xpYl8xLl9fZGVjb3JhdGUoW1xuICAgIERpcmVjdGl2ZSh7XG4gICAgICAgIHNlbGVjdG9yOiAnW2VxdWFsVG9dW2Zvcm1Db250cm9sTmFtZV0sW2VxdWFsVG9dW2Zvcm1Db250cm9sXSxbZXF1YWxUb11bbmdNb2RlbF0nLFxuICAgICAgICBwcm92aWRlcnM6IFtFUVVBTF9UT19WQUxJREFUT1JdXG4gICAgfSlcbl0sIEVxdWFsVG9WYWxpZGF0b3IpO1xuZXhwb3J0IHsgRXF1YWxUb1ZhbGlkYXRvciB9O1xuIl19