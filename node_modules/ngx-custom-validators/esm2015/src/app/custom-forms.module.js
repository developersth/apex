import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { arrayLength } from './array-length/validator';
import { base64 } from './base64/validator';
import { creditCard } from './credit-card/validator';
import { date } from './date/validator';
import { dateISO } from './date-iso/validator';
import { digits } from './digits/validator';
import { email } from './email/validator';
import { equal } from './equal/validator';
import { equalTo } from './equal-to/validator';
import { gt } from './greater-than/validator';
import { gte } from './greater-than-equal/validator';
import { json } from './json/validator';
import { lt } from './less-than/validator';
import { lte } from './less-than-equal/validator';
import { max } from './max/validator';
import { maxDate } from './max-date/validator';
import { min } from './min/validator';
import { minDate } from './min-date/validator';
import { notEqual } from './not-equal/validator';
import { notEqualTo } from './not-equal-to/validator';
import { number } from './number/validator';
import { property } from './property/validator';
import { range } from './range/validator';
import { rangeLength } from './range-length/validator';
import { uuid } from './uuid/validator';
import { url } from './url/validator';
import { ArrayLengthValidator } from './array-length/directive';
import { Base64Validator } from './base64/directive';
import { CreditCardValidator } from './credit-card/directive';
import { DateValidator } from './date/directive';
import { DateISOValidator } from './date-iso/directive';
import { DigitsValidator } from './digits/directive';
import { EmailValidator } from './email/directive';
import { EqualValidator } from './equal/directive';
import { EqualToValidator } from './equal-to/directive';
import { GreaterThanValidator } from './greater-than/directive';
import { GreaterThanEqualValidator } from './greater-than-equal/directive';
import { JSONValidator } from './json/directive';
import { LessThanValidator } from './less-than/directive';
import { LessThanEqualValidator } from './less-than-equal/directive';
import { MaxValidator } from './max/directive';
import { MaxDateValidator } from './max-date/directive';
import { MinValidator } from './min/directive';
import { MinDateValidator } from './min-date/directive';
import { NotEqualValidator } from './not-equal/directive';
import { NotEqualToValidator } from './not-equal-to/directive';
import { NumberValidator } from './number/directive';
import { PropertyValidator } from './property/directive';
import { RangeValidator } from './range/directive';
import { RangeLengthValidator } from './range-length/directive';
import { UrlValidator } from './url/directive';
import { UUIDValidator } from './uuid/directive';
import * as ɵngcc0 from '@angular/core';
export const CustomValidators = {
    arrayLength,
    base64,
    creditCard,
    date,
    dateISO,
    digits,
    email,
    equal,
    equalTo,
    gt,
    gte,
    json,
    lt,
    lte,
    max,
    maxDate,
    min,
    minDate,
    notEqual,
    notEqualTo,
    number,
    property,
    range,
    rangeLength,
    url,
    uuid
};
const CustomDirectives = [
    ArrayLengthValidator,
    Base64Validator,
    CreditCardValidator,
    DateValidator,
    DateISOValidator,
    DigitsValidator,
    EmailValidator,
    EqualValidator,
    EqualToValidator,
    GreaterThanValidator,
    GreaterThanEqualValidator,
    JSONValidator,
    LessThanValidator,
    LessThanEqualValidator,
    MaxValidator,
    MaxDateValidator,
    MinValidator,
    MinDateValidator,
    NotEqualValidator,
    NotEqualToValidator,
    NumberValidator,
    PropertyValidator,
    RangeValidator,
    RangeLengthValidator,
    UrlValidator,
    UUIDValidator
];
let CustomFormsModule = class CustomFormsModule {
};
CustomFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CustomFormsModule });
CustomFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CustomFormsModule_Factory(t) { return new (t || CustomFormsModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CustomFormsModule, { declarations: [ArrayLengthValidator,
        Base64Validator,
        CreditCardValidator,
        DateValidator,
        DateISOValidator,
        DigitsValidator,
        EmailValidator,
        EqualValidator,
        EqualToValidator,
        GreaterThanValidator,
        GreaterThanEqualValidator,
        JSONValidator,
        LessThanValidator,
        LessThanEqualValidator,
        MaxValidator,
        MaxDateValidator,
        MinValidator,
        MinDateValidator,
        NotEqualValidator,
        NotEqualToValidator,
        NumberValidator,
        PropertyValidator,
        RangeValidator,
        RangeLengthValidator,
        UrlValidator,
        UUIDValidator], exports: [ArrayLengthValidator,
        Base64Validator,
        CreditCardValidator,
        DateValidator,
        DateISOValidator,
        DigitsValidator,
        EmailValidator,
        EqualValidator,
        EqualToValidator,
        GreaterThanValidator,
        GreaterThanEqualValidator,
        JSONValidator,
        LessThanValidator,
        LessThanEqualValidator,
        MaxValidator,
        MaxDateValidator,
        MinValidator,
        MinDateValidator,
        NotEqualValidator,
        NotEqualToValidator,
        NumberValidator,
        PropertyValidator,
        RangeValidator,
        RangeLengthValidator,
        UrlValidator,
        UUIDValidator] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CustomFormsModule, [{
        type: NgModule,
        args: [{
                declarations: [CustomDirectives],
                exports: [CustomDirectives]
            }]
    }], null, null); })();
export { CustomFormsModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvbmd4LWN1c3RvbS12YWxpZGF0b3JzL2VzbTIwMTUvc3JjL2FwcC9jdXN0b20tZm9ybXMubW9kdWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0RBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQXlERTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFNb0IiLCJmaWxlIjoiY3VzdG9tLWZvcm1zLm1vZHVsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHRzbGliXzEgZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgYXJyYXlMZW5ndGggfSBmcm9tICcuL2FycmF5LWxlbmd0aC92YWxpZGF0b3InO1xuaW1wb3J0IHsgYmFzZTY0IH0gZnJvbSAnLi9iYXNlNjQvdmFsaWRhdG9yJztcbmltcG9ydCB7IGNyZWRpdENhcmQgfSBmcm9tICcuL2NyZWRpdC1jYXJkL3ZhbGlkYXRvcic7XG5pbXBvcnQgeyBkYXRlIH0gZnJvbSAnLi9kYXRlL3ZhbGlkYXRvcic7XG5pbXBvcnQgeyBkYXRlSVNPIH0gZnJvbSAnLi9kYXRlLWlzby92YWxpZGF0b3InO1xuaW1wb3J0IHsgZGlnaXRzIH0gZnJvbSAnLi9kaWdpdHMvdmFsaWRhdG9yJztcbmltcG9ydCB7IGVtYWlsIH0gZnJvbSAnLi9lbWFpbC92YWxpZGF0b3InO1xuaW1wb3J0IHsgZXF1YWwgfSBmcm9tICcuL2VxdWFsL3ZhbGlkYXRvcic7XG5pbXBvcnQgeyBlcXVhbFRvIH0gZnJvbSAnLi9lcXVhbC10by92YWxpZGF0b3InO1xuaW1wb3J0IHsgZ3QgfSBmcm9tICcuL2dyZWF0ZXItdGhhbi92YWxpZGF0b3InO1xuaW1wb3J0IHsgZ3RlIH0gZnJvbSAnLi9ncmVhdGVyLXRoYW4tZXF1YWwvdmFsaWRhdG9yJztcbmltcG9ydCB7IGpzb24gfSBmcm9tICcuL2pzb24vdmFsaWRhdG9yJztcbmltcG9ydCB7IGx0IH0gZnJvbSAnLi9sZXNzLXRoYW4vdmFsaWRhdG9yJztcbmltcG9ydCB7IGx0ZSB9IGZyb20gJy4vbGVzcy10aGFuLWVxdWFsL3ZhbGlkYXRvcic7XG5pbXBvcnQgeyBtYXggfSBmcm9tICcuL21heC92YWxpZGF0b3InO1xuaW1wb3J0IHsgbWF4RGF0ZSB9IGZyb20gJy4vbWF4LWRhdGUvdmFsaWRhdG9yJztcbmltcG9ydCB7IG1pbiB9IGZyb20gJy4vbWluL3ZhbGlkYXRvcic7XG5pbXBvcnQgeyBtaW5EYXRlIH0gZnJvbSAnLi9taW4tZGF0ZS92YWxpZGF0b3InO1xuaW1wb3J0IHsgbm90RXF1YWwgfSBmcm9tICcuL25vdC1lcXVhbC92YWxpZGF0b3InO1xuaW1wb3J0IHsgbm90RXF1YWxUbyB9IGZyb20gJy4vbm90LWVxdWFsLXRvL3ZhbGlkYXRvcic7XG5pbXBvcnQgeyBudW1iZXIgfSBmcm9tICcuL251bWJlci92YWxpZGF0b3InO1xuaW1wb3J0IHsgcHJvcGVydHkgfSBmcm9tICcuL3Byb3BlcnR5L3ZhbGlkYXRvcic7XG5pbXBvcnQgeyByYW5nZSB9IGZyb20gJy4vcmFuZ2UvdmFsaWRhdG9yJztcbmltcG9ydCB7IHJhbmdlTGVuZ3RoIH0gZnJvbSAnLi9yYW5nZS1sZW5ndGgvdmFsaWRhdG9yJztcbmltcG9ydCB7IHV1aWQgfSBmcm9tICcuL3V1aWQvdmFsaWRhdG9yJztcbmltcG9ydCB7IHVybCB9IGZyb20gJy4vdXJsL3ZhbGlkYXRvcic7XG5pbXBvcnQgeyBBcnJheUxlbmd0aFZhbGlkYXRvciB9IGZyb20gJy4vYXJyYXktbGVuZ3RoL2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBCYXNlNjRWYWxpZGF0b3IgfSBmcm9tICcuL2Jhc2U2NC9kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQ3JlZGl0Q2FyZFZhbGlkYXRvciB9IGZyb20gJy4vY3JlZGl0LWNhcmQvZGlyZWN0aXZlJztcbmltcG9ydCB7IERhdGVWYWxpZGF0b3IgfSBmcm9tICcuL2RhdGUvZGlyZWN0aXZlJztcbmltcG9ydCB7IERhdGVJU09WYWxpZGF0b3IgfSBmcm9tICcuL2RhdGUtaXNvL2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBEaWdpdHNWYWxpZGF0b3IgfSBmcm9tICcuL2RpZ2l0cy9kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRW1haWxWYWxpZGF0b3IgfSBmcm9tICcuL2VtYWlsL2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBFcXVhbFZhbGlkYXRvciB9IGZyb20gJy4vZXF1YWwvZGlyZWN0aXZlJztcbmltcG9ydCB7IEVxdWFsVG9WYWxpZGF0b3IgfSBmcm9tICcuL2VxdWFsLXRvL2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBHcmVhdGVyVGhhblZhbGlkYXRvciB9IGZyb20gJy4vZ3JlYXRlci10aGFuL2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBHcmVhdGVyVGhhbkVxdWFsVmFsaWRhdG9yIH0gZnJvbSAnLi9ncmVhdGVyLXRoYW4tZXF1YWwvZGlyZWN0aXZlJztcbmltcG9ydCB7IEpTT05WYWxpZGF0b3IgfSBmcm9tICcuL2pzb24vZGlyZWN0aXZlJztcbmltcG9ydCB7IExlc3NUaGFuVmFsaWRhdG9yIH0gZnJvbSAnLi9sZXNzLXRoYW4vZGlyZWN0aXZlJztcbmltcG9ydCB7IExlc3NUaGFuRXF1YWxWYWxpZGF0b3IgfSBmcm9tICcuL2xlc3MtdGhhbi1lcXVhbC9kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTWF4VmFsaWRhdG9yIH0gZnJvbSAnLi9tYXgvZGlyZWN0aXZlJztcbmltcG9ydCB7IE1heERhdGVWYWxpZGF0b3IgfSBmcm9tICcuL21heC1kYXRlL2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBNaW5WYWxpZGF0b3IgfSBmcm9tICcuL21pbi9kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTWluRGF0ZVZhbGlkYXRvciB9IGZyb20gJy4vbWluLWRhdGUvZGlyZWN0aXZlJztcbmltcG9ydCB7IE5vdEVxdWFsVmFsaWRhdG9yIH0gZnJvbSAnLi9ub3QtZXF1YWwvZGlyZWN0aXZlJztcbmltcG9ydCB7IE5vdEVxdWFsVG9WYWxpZGF0b3IgfSBmcm9tICcuL25vdC1lcXVhbC10by9kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTnVtYmVyVmFsaWRhdG9yIH0gZnJvbSAnLi9udW1iZXIvZGlyZWN0aXZlJztcbmltcG9ydCB7IFByb3BlcnR5VmFsaWRhdG9yIH0gZnJvbSAnLi9wcm9wZXJ0eS9kaXJlY3RpdmUnO1xuaW1wb3J0IHsgUmFuZ2VWYWxpZGF0b3IgfSBmcm9tICcuL3JhbmdlL2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBSYW5nZUxlbmd0aFZhbGlkYXRvciB9IGZyb20gJy4vcmFuZ2UtbGVuZ3RoL2RpcmVjdGl2ZSc7XG5pbXBvcnQgeyBVcmxWYWxpZGF0b3IgfSBmcm9tICcuL3VybC9kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVVVJRFZhbGlkYXRvciB9IGZyb20gJy4vdXVpZC9kaXJlY3RpdmUnO1xuZXhwb3J0IGNvbnN0IEN1c3RvbVZhbGlkYXRvcnMgPSB7XG4gICAgYXJyYXlMZW5ndGgsXG4gICAgYmFzZTY0LFxuICAgIGNyZWRpdENhcmQsXG4gICAgZGF0ZSxcbiAgICBkYXRlSVNPLFxuICAgIGRpZ2l0cyxcbiAgICBlbWFpbCxcbiAgICBlcXVhbCxcbiAgICBlcXVhbFRvLFxuICAgIGd0LFxuICAgIGd0ZSxcbiAgICBqc29uLFxuICAgIGx0LFxuICAgIGx0ZSxcbiAgICBtYXgsXG4gICAgbWF4RGF0ZSxcbiAgICBtaW4sXG4gICAgbWluRGF0ZSxcbiAgICBub3RFcXVhbCxcbiAgICBub3RFcXVhbFRvLFxuICAgIG51bWJlcixcbiAgICBwcm9wZXJ0eSxcbiAgICByYW5nZSxcbiAgICByYW5nZUxlbmd0aCxcbiAgICB1cmwsXG4gICAgdXVpZFxufTtcbmNvbnN0IEN1c3RvbURpcmVjdGl2ZXMgPSBbXG4gICAgQXJyYXlMZW5ndGhWYWxpZGF0b3IsXG4gICAgQmFzZTY0VmFsaWRhdG9yLFxuICAgIENyZWRpdENhcmRWYWxpZGF0b3IsXG4gICAgRGF0ZVZhbGlkYXRvcixcbiAgICBEYXRlSVNPVmFsaWRhdG9yLFxuICAgIERpZ2l0c1ZhbGlkYXRvcixcbiAgICBFbWFpbFZhbGlkYXRvcixcbiAgICBFcXVhbFZhbGlkYXRvcixcbiAgICBFcXVhbFRvVmFsaWRhdG9yLFxuICAgIEdyZWF0ZXJUaGFuVmFsaWRhdG9yLFxuICAgIEdyZWF0ZXJUaGFuRXF1YWxWYWxpZGF0b3IsXG4gICAgSlNPTlZhbGlkYXRvcixcbiAgICBMZXNzVGhhblZhbGlkYXRvcixcbiAgICBMZXNzVGhhbkVxdWFsVmFsaWRhdG9yLFxuICAgIE1heFZhbGlkYXRvcixcbiAgICBNYXhEYXRlVmFsaWRhdG9yLFxuICAgIE1pblZhbGlkYXRvcixcbiAgICBNaW5EYXRlVmFsaWRhdG9yLFxuICAgIE5vdEVxdWFsVmFsaWRhdG9yLFxuICAgIE5vdEVxdWFsVG9WYWxpZGF0b3IsXG4gICAgTnVtYmVyVmFsaWRhdG9yLFxuICAgIFByb3BlcnR5VmFsaWRhdG9yLFxuICAgIFJhbmdlVmFsaWRhdG9yLFxuICAgIFJhbmdlTGVuZ3RoVmFsaWRhdG9yLFxuICAgIFVybFZhbGlkYXRvcixcbiAgICBVVUlEVmFsaWRhdG9yXG5dO1xubGV0IEN1c3RvbUZvcm1zTW9kdWxlID0gY2xhc3MgQ3VzdG9tRm9ybXNNb2R1bGUge1xufTtcbkN1c3RvbUZvcm1zTW9kdWxlID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcbiAgICBOZ01vZHVsZSh7XG4gICAgICAgIGRlY2xhcmF0aW9uczogW0N1c3RvbURpcmVjdGl2ZXNdLFxuICAgICAgICBleHBvcnRzOiBbQ3VzdG9tRGlyZWN0aXZlc11cbiAgICB9KVxuXSwgQ3VzdG9tRm9ybXNNb2R1bGUpO1xuZXhwb3J0IHsgQ3VzdG9tRm9ybXNNb2R1bGUgfTtcbiJdfQ==