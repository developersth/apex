import { __decorate } from "tslib";
import { Component, Input, Output, EventEmitter, ViewChild, ChangeDetectionStrategy } from '@angular/core';
import { YAxisTicksComponent } from './y-axis-ticks.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from './y-axis-ticks.component';
import * as ɵngcc3 from './axis-label.component';

var _c0 = ["ngx-charts-y-axis", ""];
function YAxisComponent__svg_g_1_Template(rf, ctx) { if (rf & 1) {
    var _r41 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(0, "g", 2);
    ɵngcc0.ɵɵlistener("dimensionsChanged", function YAxisComponent__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r41); var ctx_r40 = ɵngcc0.ɵɵnextContext(); return ctx_r40.emitTicksWidth($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r38 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("trimTicks", ctx_r38.trimTicks)("maxTickLength", ctx_r38.maxTickLength)("tickFormatting", ctx_r38.tickFormatting)("tickArguments", ctx_r38.tickArguments)("tickValues", ctx_r38.ticks)("tickStroke", ctx_r38.tickStroke)("scale", ctx_r38.yScale)("orient", ctx_r38.yOrient)("showGridLines", ctx_r38.showGridLines)("gridLineWidth", ctx_r38.dims.width)("referenceLines", ctx_r38.referenceLines)("showRefLines", ctx_r38.showRefLines)("showRefLabels", ctx_r38.showRefLabels)("height", ctx_r38.dims.height);
} }
function YAxisComponent__svg_g_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelement(0, "g", 3);
} if (rf & 2) {
    var ctx_r39 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("label", ctx_r39.labelText)("offset", ctx_r39.labelOffset)("orient", ctx_r39.yOrient)("height", ctx_r39.dims.height)("width", ctx_r39.dims.width);
} }
var YAxisComponent = /** @class */ (function () {
    function YAxisComponent() {
        this.showGridLines = false;
        this.yOrient = 'left';
        this.yAxisOffset = 0;
        this.dimensionsChanged = new EventEmitter();
        this.yAxisClassName = 'y axis';
        this.labelOffset = 15;
        this.fill = 'none';
        this.stroke = '#CCC';
        this.tickStroke = '#CCC';
        this.strokeWidth = 1;
        this.padding = 5;
    }
    YAxisComponent.prototype.ngOnChanges = function (changes) {
        this.update();
    };
    YAxisComponent.prototype.update = function () {
        this.offset = -(this.yAxisOffset + this.padding);
        if (this.yOrient === 'right') {
            this.labelOffset = 65;
            this.transform = "translate(" + (this.offset + this.dims.width) + " , 0)";
        }
        else {
            this.offset = this.offset;
            this.transform = "translate(" + this.offset + " , 0)";
        }
        if (this.yAxisTickCount !== undefined) {
            this.tickArguments = [this.yAxisTickCount];
        }
    };
    YAxisComponent.prototype.emitTicksWidth = function (_a) {
        var _this = this;
        var width = _a.width;
        if (width !== this.labelOffset && this.yOrient === 'right') {
            this.labelOffset = width + this.labelOffset;
            setTimeout(function () {
                _this.dimensionsChanged.emit({ width: width });
            }, 0);
        }
        else if (width !== this.labelOffset) {
            this.labelOffset = width;
            setTimeout(function () {
                _this.dimensionsChanged.emit({ width: width });
            }, 0);
        }
    };
    __decorate([
        Input()
    ], YAxisComponent.prototype, "yScale", void 0);
    __decorate([
        Input()
    ], YAxisComponent.prototype, "dims", void 0);
    __decorate([
        Input()
    ], YAxisComponent.prototype, "trimTicks", void 0);
    __decorate([
        Input()
    ], YAxisComponent.prototype, "maxTickLength", void 0);
    __decorate([
        Input()
    ], YAxisComponent.prototype, "tickFormatting", void 0);
    __decorate([
        Input()
    ], YAxisComponent.prototype, "ticks", void 0);
    __decorate([
        Input()
    ], YAxisComponent.prototype, "showGridLines", void 0);
    __decorate([
        Input()
    ], YAxisComponent.prototype, "showLabel", void 0);
    __decorate([
        Input()
    ], YAxisComponent.prototype, "labelText", void 0);
    __decorate([
        Input()
    ], YAxisComponent.prototype, "yAxisTickInterval", void 0);
    __decorate([
        Input()
    ], YAxisComponent.prototype, "yAxisTickCount", void 0);
    __decorate([
        Input()
    ], YAxisComponent.prototype, "yOrient", void 0);
    __decorate([
        Input()
    ], YAxisComponent.prototype, "referenceLines", void 0);
    __decorate([
        Input()
    ], YAxisComponent.prototype, "showRefLines", void 0);
    __decorate([
        Input()
    ], YAxisComponent.prototype, "showRefLabels", void 0);
    __decorate([
        Input()
    ], YAxisComponent.prototype, "yAxisOffset", void 0);
    __decorate([
        Output()
    ], YAxisComponent.prototype, "dimensionsChanged", void 0);
    __decorate([
        ViewChild(YAxisTicksComponent)
    ], YAxisComponent.prototype, "ticksComponent", void 0);
YAxisComponent.ɵfac = function YAxisComponent_Factory(t) { return new (t || YAxisComponent)(); };
YAxisComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: YAxisComponent, selectors: [["g", "ngx-charts-y-axis", ""]], viewQuery: function YAxisComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(YAxisTicksComponent, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ticksComponent = _t.first);
    } }, inputs: { showGridLines: "showGridLines", yOrient: "yOrient", yAxisOffset: "yAxisOffset", yScale: "yScale", dims: "dims", trimTicks: "trimTicks", maxTickLength: "maxTickLength", tickFormatting: "tickFormatting", ticks: "ticks", showLabel: "showLabel", labelText: "labelText", yAxisTickInterval: "yAxisTickInterval", yAxisTickCount: "yAxisTickCount", referenceLines: "referenceLines", showRefLines: "showRefLines", showRefLabels: "showRefLabels" }, outputs: { dimensionsChanged: "dimensionsChanged" }, features: [ɵngcc0.ɵɵNgOnChangesFeature()], attrs: _c0, decls: 3, vars: 4, consts: [["ngx-charts-y-axis-ticks", "", 3, "trimTicks", "maxTickLength", "tickFormatting", "tickArguments", "tickValues", "tickStroke", "scale", "orient", "showGridLines", "gridLineWidth", "referenceLines", "showRefLines", "showRefLabels", "height", "dimensionsChanged", 4, "ngIf"], ["ngx-charts-axis-label", "", 3, "label", "offset", "orient", "height", "width", 4, "ngIf"], ["ngx-charts-y-axis-ticks", "", 3, "trimTicks", "maxTickLength", "tickFormatting", "tickArguments", "tickValues", "tickStroke", "scale", "orient", "showGridLines", "gridLineWidth", "referenceLines", "showRefLines", "showRefLabels", "height", "dimensionsChanged"], ["ngx-charts-axis-label", "", 3, "label", "offset", "orient", "height", "width"]], template: function YAxisComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(0, "g");
        ɵngcc0.ɵɵtemplate(1, YAxisComponent__svg_g_1_Template, 1, 14, "g", 0);
        ɵngcc0.ɵɵtemplate(2, YAxisComponent__svg_g_2_Template, 1, 5, "g", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("class", ctx.yAxisClassName)("transform", ctx.transform);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.yScale);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showLabel);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.YAxisTicksComponent, ɵngcc3.AxisLabelComponent], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(YAxisComponent, [{
        type: Component,
        args: [{
                selector: 'g[ngx-charts-y-axis]',
                template: "\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  ",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, { showGridLines: [{
            type: Input
        }], yOrient: [{
            type: Input
        }], yAxisOffset: [{
            type: Input
        }], dimensionsChanged: [{
            type: Output
        }], yScale: [{
            type: Input
        }], dims: [{
            type: Input
        }], trimTicks: [{
            type: Input
        }], maxTickLength: [{
            type: Input
        }], tickFormatting: [{
            type: Input
        }], ticks: [{
            type: Input
        }], showLabel: [{
            type: Input
        }], labelText: [{
            type: Input
        }], yAxisTickInterval: [{
            type: Input
        }], yAxisTickCount: [{
            type: Input
        }], referenceLines: [{
            type: Input
        }], showRefLines: [{
            type: Input
        }], showRefLabels: [{
            type: Input
        }], ticksComponent: [{
            type: ViewChild,
            args: [YAxisTicksComponent]
        }] }); })();
    return YAxisComponent;
}());
export { YAxisComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvQHN3aW1sYW5lL25neC1jaGFydHMvZXNtNS9saWIvY29tbW9uL2F4ZXMveS1heGlzLmNvbXBvbmVudC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyREFvRzJEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQU9wQyIsImZpbGUiOiJ5LWF4aXMuY29tcG9uZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIFZpZXdDaGlsZCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFlBeGlzVGlja3NDb21wb25lbnQgfSBmcm9tICcuL3ktYXhpcy10aWNrcy5jb21wb25lbnQnO1xudmFyIFlBeGlzQ29tcG9uZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFlBeGlzQ29tcG9uZW50KCkge1xuICAgICAgICB0aGlzLnNob3dHcmlkTGluZXMgPSBmYWxzZTtcbiAgICAgICAgdGhpcy55T3JpZW50ID0gJ2xlZnQnO1xuICAgICAgICB0aGlzLnlBeGlzT2Zmc2V0ID0gMDtcbiAgICAgICAgdGhpcy5kaW1lbnNpb25zQ2hhbmdlZCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy55QXhpc0NsYXNzTmFtZSA9ICd5IGF4aXMnO1xuICAgICAgICB0aGlzLmxhYmVsT2Zmc2V0ID0gMTU7XG4gICAgICAgIHRoaXMuZmlsbCA9ICdub25lJztcbiAgICAgICAgdGhpcy5zdHJva2UgPSAnI0NDQyc7XG4gICAgICAgIHRoaXMudGlja1N0cm9rZSA9ICcjQ0NDJztcbiAgICAgICAgdGhpcy5zdHJva2VXaWR0aCA9IDE7XG4gICAgICAgIHRoaXMucGFkZGluZyA9IDU7XG4gICAgfVxuICAgIFlBeGlzQ29tcG9uZW50LnByb3RvdHlwZS5uZ09uQ2hhbmdlcyA9IGZ1bmN0aW9uIChjaGFuZ2VzKSB7XG4gICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgfTtcbiAgICBZQXhpc0NvbXBvbmVudC5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLm9mZnNldCA9IC0odGhpcy55QXhpc09mZnNldCArIHRoaXMucGFkZGluZyk7XG4gICAgICAgIGlmICh0aGlzLnlPcmllbnQgPT09ICdyaWdodCcpIHtcbiAgICAgICAgICAgIHRoaXMubGFiZWxPZmZzZXQgPSA2NTtcbiAgICAgICAgICAgIHRoaXMudHJhbnNmb3JtID0gXCJ0cmFuc2xhdGUoXCIgKyAodGhpcy5vZmZzZXQgKyB0aGlzLmRpbXMud2lkdGgpICsgXCIgLCAwKVwiO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5vZmZzZXQgPSB0aGlzLm9mZnNldDtcbiAgICAgICAgICAgIHRoaXMudHJhbnNmb3JtID0gXCJ0cmFuc2xhdGUoXCIgKyB0aGlzLm9mZnNldCArIFwiICwgMClcIjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy55QXhpc1RpY2tDb3VudCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLnRpY2tBcmd1bWVudHMgPSBbdGhpcy55QXhpc1RpY2tDb3VudF07XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFlBeGlzQ29tcG9uZW50LnByb3RvdHlwZS5lbWl0VGlja3NXaWR0aCA9IGZ1bmN0aW9uIChfYSkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgd2lkdGggPSBfYS53aWR0aDtcbiAgICAgICAgaWYgKHdpZHRoICE9PSB0aGlzLmxhYmVsT2Zmc2V0ICYmIHRoaXMueU9yaWVudCA9PT0gJ3JpZ2h0Jykge1xuICAgICAgICAgICAgdGhpcy5sYWJlbE9mZnNldCA9IHdpZHRoICsgdGhpcy5sYWJlbE9mZnNldDtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIF90aGlzLmRpbWVuc2lvbnNDaGFuZ2VkLmVtaXQoeyB3aWR0aDogd2lkdGggfSk7XG4gICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh3aWR0aCAhPT0gdGhpcy5sYWJlbE9mZnNldCkge1xuICAgICAgICAgICAgdGhpcy5sYWJlbE9mZnNldCA9IHdpZHRoO1xuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuZGltZW5zaW9uc0NoYW5nZWQuZW1pdCh7IHdpZHRoOiB3aWR0aCB9KTtcbiAgICAgICAgICAgIH0sIDApO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKVxuICAgIF0sIFlBeGlzQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ5U2NhbGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKVxuICAgIF0sIFlBeGlzQ29tcG9uZW50LnByb3RvdHlwZSwgXCJkaW1zXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KClcbiAgICBdLCBZQXhpc0NvbXBvbmVudC5wcm90b3R5cGUsIFwidHJpbVRpY2tzXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KClcbiAgICBdLCBZQXhpc0NvbXBvbmVudC5wcm90b3R5cGUsIFwibWF4VGlja0xlbmd0aFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpXG4gICAgXSwgWUF4aXNDb21wb25lbnQucHJvdG90eXBlLCBcInRpY2tGb3JtYXR0aW5nXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KClcbiAgICBdLCBZQXhpc0NvbXBvbmVudC5wcm90b3R5cGUsIFwidGlja3NcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKVxuICAgIF0sIFlBeGlzQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzaG93R3JpZExpbmVzXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KClcbiAgICBdLCBZQXhpc0NvbXBvbmVudC5wcm90b3R5cGUsIFwic2hvd0xhYmVsXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KClcbiAgICBdLCBZQXhpc0NvbXBvbmVudC5wcm90b3R5cGUsIFwibGFiZWxUZXh0XCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KClcbiAgICBdLCBZQXhpc0NvbXBvbmVudC5wcm90b3R5cGUsIFwieUF4aXNUaWNrSW50ZXJ2YWxcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKVxuICAgIF0sIFlBeGlzQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ5QXhpc1RpY2tDb3VudFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpXG4gICAgXSwgWUF4aXNDb21wb25lbnQucHJvdG90eXBlLCBcInlPcmllbnRcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKVxuICAgIF0sIFlBeGlzQ29tcG9uZW50LnByb3RvdHlwZSwgXCJyZWZlcmVuY2VMaW5lc1wiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpXG4gICAgXSwgWUF4aXNDb21wb25lbnQucHJvdG90eXBlLCBcInNob3dSZWZMaW5lc1wiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpXG4gICAgXSwgWUF4aXNDb21wb25lbnQucHJvdG90eXBlLCBcInNob3dSZWZMYWJlbHNcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKVxuICAgIF0sIFlBeGlzQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ5QXhpc09mZnNldFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBPdXRwdXQoKVxuICAgIF0sIFlBeGlzQ29tcG9uZW50LnByb3RvdHlwZSwgXCJkaW1lbnNpb25zQ2hhbmdlZFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBWaWV3Q2hpbGQoWUF4aXNUaWNrc0NvbXBvbmVudClcbiAgICBdLCBZQXhpc0NvbXBvbmVudC5wcm90b3R5cGUsIFwidGlja3NDb21wb25lbnRcIiwgdm9pZCAwKTtcbiAgICBZQXhpc0NvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBDb21wb25lbnQoe1xuICAgICAgICAgICAgc2VsZWN0b3I6ICdnW25neC1jaGFydHMteS1heGlzXScsXG4gICAgICAgICAgICB0ZW1wbGF0ZTogXCJcXG4gICAgPHN2ZzpnIFthdHRyLmNsYXNzXT1cXFwieUF4aXNDbGFzc05hbWVcXFwiIFthdHRyLnRyYW5zZm9ybV09XFxcInRyYW5zZm9ybVxcXCI+XFxuICAgICAgPHN2ZzpnXFxuICAgICAgICBuZ3gtY2hhcnRzLXktYXhpcy10aWNrc1xcbiAgICAgICAgKm5nSWY9XFxcInlTY2FsZVxcXCJcXG4gICAgICAgIFt0cmltVGlja3NdPVxcXCJ0cmltVGlja3NcXFwiXFxuICAgICAgICBbbWF4VGlja0xlbmd0aF09XFxcIm1heFRpY2tMZW5ndGhcXFwiXFxuICAgICAgICBbdGlja0Zvcm1hdHRpbmddPVxcXCJ0aWNrRm9ybWF0dGluZ1xcXCJcXG4gICAgICAgIFt0aWNrQXJndW1lbnRzXT1cXFwidGlja0FyZ3VtZW50c1xcXCJcXG4gICAgICAgIFt0aWNrVmFsdWVzXT1cXFwidGlja3NcXFwiXFxuICAgICAgICBbdGlja1N0cm9rZV09XFxcInRpY2tTdHJva2VcXFwiXFxuICAgICAgICBbc2NhbGVdPVxcXCJ5U2NhbGVcXFwiXFxuICAgICAgICBbb3JpZW50XT1cXFwieU9yaWVudFxcXCJcXG4gICAgICAgIFtzaG93R3JpZExpbmVzXT1cXFwic2hvd0dyaWRMaW5lc1xcXCJcXG4gICAgICAgIFtncmlkTGluZVdpZHRoXT1cXFwiZGltcy53aWR0aFxcXCJcXG4gICAgICAgIFtyZWZlcmVuY2VMaW5lc109XFxcInJlZmVyZW5jZUxpbmVzXFxcIlxcbiAgICAgICAgW3Nob3dSZWZMaW5lc109XFxcInNob3dSZWZMaW5lc1xcXCJcXG4gICAgICAgIFtzaG93UmVmTGFiZWxzXT1cXFwic2hvd1JlZkxhYmVsc1xcXCJcXG4gICAgICAgIFtoZWlnaHRdPVxcXCJkaW1zLmhlaWdodFxcXCJcXG4gICAgICAgIChkaW1lbnNpb25zQ2hhbmdlZCk9XFxcImVtaXRUaWNrc1dpZHRoKCRldmVudClcXFwiXFxuICAgICAgLz5cXG5cXG4gICAgICA8c3ZnOmdcXG4gICAgICAgIG5neC1jaGFydHMtYXhpcy1sYWJlbFxcbiAgICAgICAgKm5nSWY9XFxcInNob3dMYWJlbFxcXCJcXG4gICAgICAgIFtsYWJlbF09XFxcImxhYmVsVGV4dFxcXCJcXG4gICAgICAgIFtvZmZzZXRdPVxcXCJsYWJlbE9mZnNldFxcXCJcXG4gICAgICAgIFtvcmllbnRdPVxcXCJ5T3JpZW50XFxcIlxcbiAgICAgICAgW2hlaWdodF09XFxcImRpbXMuaGVpZ2h0XFxcIlxcbiAgICAgICAgW3dpZHRoXT1cXFwiZGltcy53aWR0aFxcXCJcXG4gICAgICA+PC9zdmc6Zz5cXG4gICAgPC9zdmc6Zz5cXG4gIFwiLFxuICAgICAgICAgICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbiAgICAgICAgfSlcbiAgICBdLCBZQXhpc0NvbXBvbmVudCk7XG4gICAgcmV0dXJuIFlBeGlzQ29tcG9uZW50O1xufSgpKTtcbmV4cG9ydCB7IFlBeGlzQ29tcG9uZW50IH07XG4iXX0=