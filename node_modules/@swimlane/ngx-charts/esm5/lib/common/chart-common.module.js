import { __decorate, __read, __spread } from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ChartComponent } from './charts/chart.component';
import { BaseChartComponent } from './base-chart.component';
import { AxesModule } from './axes/axes.module';
import { TooltipModule } from './tooltip/tooltip.module';
import { CircleSeriesComponent } from './circle-series.component';
import { CircleComponent } from './circle.component';
import { GridPanelComponent } from './grid-panel.component';
import { GridPanelSeriesComponent } from './grid-panel-series.component';
import { SvgLinearGradientComponent } from './svg-linear-gradient.component';
import { SvgRadialGradientComponent } from './svg-radial-gradient.component';
import { AreaComponent } from './area.component';
import { CountUpDirective } from './count/count.directive';
import { TooltipArea } from './tooltip-area.component';
import { Timeline } from './timeline/timeline.component';
import { VisibilityObserver } from '../utils/visibility-observer';
import { LegendComponent } from './legend/legend.component';
import { LegendEntryComponent } from './legend/legend-entry.component';
import { ScaleLegendComponent } from './legend/scale-legend.component';
import { AdvancedLegendComponent } from './legend/advanced-legend.component';
import * as ɵngcc0 from '@angular/core';
var COMPONENTS = [
    AreaComponent,
    BaseChartComponent,
    CountUpDirective,
    TooltipArea,
    ChartComponent,
    LegendComponent,
    LegendEntryComponent,
    ScaleLegendComponent,
    CircleComponent,
    CircleSeriesComponent,
    GridPanelComponent,
    GridPanelSeriesComponent,
    SvgLinearGradientComponent,
    SvgRadialGradientComponent,
    Timeline,
    AdvancedLegendComponent
];
var ChartCommonModule = /** @class */ (function () {
    function ChartCommonModule() {
    }
ChartCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ChartCommonModule });
ChartCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ChartCommonModule_Factory(t) { return new (t || ChartCommonModule)(); }, imports: [[CommonModule, AxesModule, TooltipModule],
        CommonModule, AxesModule, TooltipModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ChartCommonModule, { declarations: function () { return [AreaComponent,
        BaseChartComponent,
        CountUpDirective,
        TooltipArea,
        ChartComponent,
        LegendComponent,
        LegendEntryComponent,
        ScaleLegendComponent,
        CircleComponent,
        CircleSeriesComponent,
        GridPanelComponent,
        GridPanelSeriesComponent,
        SvgLinearGradientComponent,
        SvgRadialGradientComponent,
        Timeline,
        AdvancedLegendComponent,
        VisibilityObserver]; }, imports: function () { return [CommonModule, AxesModule, TooltipModule]; }, exports: function () { return [CommonModule, AxesModule, TooltipModule,
        AreaComponent,
        BaseChartComponent,
        CountUpDirective,
        TooltipArea,
        ChartComponent,
        LegendComponent,
        LegendEntryComponent,
        ScaleLegendComponent,
        CircleComponent,
        CircleSeriesComponent,
        GridPanelComponent,
        GridPanelSeriesComponent,
        SvgLinearGradientComponent,
        SvgRadialGradientComponent,
        Timeline,
        AdvancedLegendComponent,
        VisibilityObserver]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ChartCommonModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, AxesModule, TooltipModule],
                declarations: __spread(COMPONENTS, [VisibilityObserver]),
                exports: __spread([CommonModule, AxesModule, TooltipModule], COMPONENTS, [VisibilityObserver])
            }]
    }], function () { return []; }, null); })();
    return ChartCommonModule;
}());
export { ChartCommonModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvQHN3aW1sYW5lL25neC1jaGFydHMvZXNtNS9saWIvY29tbW9uL2NoYXJ0LWNvbW1vbi5tb2R1bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0JBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQW9CSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dEQU9xQiIsImZpbGUiOiJjaGFydC1jb21tb24ubW9kdWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19kZWNvcmF0ZSwgX19yZWFkLCBfX3NwcmVhZCB9IGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDaGFydENvbXBvbmVudCB9IGZyb20gJy4vY2hhcnRzL2NoYXJ0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBCYXNlQ2hhcnRDb21wb25lbnQgfSBmcm9tICcuL2Jhc2UtY2hhcnQuY29tcG9uZW50JztcbmltcG9ydCB7IEF4ZXNNb2R1bGUgfSBmcm9tICcuL2F4ZXMvYXhlcy5tb2R1bGUnO1xuaW1wb3J0IHsgVG9vbHRpcE1vZHVsZSB9IGZyb20gJy4vdG9vbHRpcC90b29sdGlwLm1vZHVsZSc7XG5pbXBvcnQgeyBDaXJjbGVTZXJpZXNDb21wb25lbnQgfSBmcm9tICcuL2NpcmNsZS1zZXJpZXMuY29tcG9uZW50JztcbmltcG9ydCB7IENpcmNsZUNvbXBvbmVudCB9IGZyb20gJy4vY2lyY2xlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBHcmlkUGFuZWxDb21wb25lbnQgfSBmcm9tICcuL2dyaWQtcGFuZWwuY29tcG9uZW50JztcbmltcG9ydCB7IEdyaWRQYW5lbFNlcmllc0NvbXBvbmVudCB9IGZyb20gJy4vZ3JpZC1wYW5lbC1zZXJpZXMuY29tcG9uZW50JztcbmltcG9ydCB7IFN2Z0xpbmVhckdyYWRpZW50Q29tcG9uZW50IH0gZnJvbSAnLi9zdmctbGluZWFyLWdyYWRpZW50LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdmdSYWRpYWxHcmFkaWVudENvbXBvbmVudCB9IGZyb20gJy4vc3ZnLXJhZGlhbC1ncmFkaWVudC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQXJlYUNvbXBvbmVudCB9IGZyb20gJy4vYXJlYS5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ291bnRVcERpcmVjdGl2ZSB9IGZyb20gJy4vY291bnQvY291bnQuZGlyZWN0aXZlJztcbmltcG9ydCB7IFRvb2x0aXBBcmVhIH0gZnJvbSAnLi90b29sdGlwLWFyZWEuY29tcG9uZW50JztcbmltcG9ydCB7IFRpbWVsaW5lIH0gZnJvbSAnLi90aW1lbGluZS90aW1lbGluZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgVmlzaWJpbGl0eU9ic2VydmVyIH0gZnJvbSAnLi4vdXRpbHMvdmlzaWJpbGl0eS1vYnNlcnZlcic7XG5pbXBvcnQgeyBMZWdlbmRDb21wb25lbnQgfSBmcm9tICcuL2xlZ2VuZC9sZWdlbmQuY29tcG9uZW50JztcbmltcG9ydCB7IExlZ2VuZEVudHJ5Q29tcG9uZW50IH0gZnJvbSAnLi9sZWdlbmQvbGVnZW5kLWVudHJ5LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTY2FsZUxlZ2VuZENvbXBvbmVudCB9IGZyb20gJy4vbGVnZW5kL3NjYWxlLWxlZ2VuZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQWR2YW5jZWRMZWdlbmRDb21wb25lbnQgfSBmcm9tICcuL2xlZ2VuZC9hZHZhbmNlZC1sZWdlbmQuY29tcG9uZW50JztcbnZhciBDT01QT05FTlRTID0gW1xuICAgIEFyZWFDb21wb25lbnQsXG4gICAgQmFzZUNoYXJ0Q29tcG9uZW50LFxuICAgIENvdW50VXBEaXJlY3RpdmUsXG4gICAgVG9vbHRpcEFyZWEsXG4gICAgQ2hhcnRDb21wb25lbnQsXG4gICAgTGVnZW5kQ29tcG9uZW50LFxuICAgIExlZ2VuZEVudHJ5Q29tcG9uZW50LFxuICAgIFNjYWxlTGVnZW5kQ29tcG9uZW50LFxuICAgIENpcmNsZUNvbXBvbmVudCxcbiAgICBDaXJjbGVTZXJpZXNDb21wb25lbnQsXG4gICAgR3JpZFBhbmVsQ29tcG9uZW50LFxuICAgIEdyaWRQYW5lbFNlcmllc0NvbXBvbmVudCxcbiAgICBTdmdMaW5lYXJHcmFkaWVudENvbXBvbmVudCxcbiAgICBTdmdSYWRpYWxHcmFkaWVudENvbXBvbmVudCxcbiAgICBUaW1lbGluZSxcbiAgICBBZHZhbmNlZExlZ2VuZENvbXBvbmVudFxuXTtcbnZhciBDaGFydENvbW1vbk1vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBDaGFydENvbW1vbk1vZHVsZSgpIHtcbiAgICB9XG4gICAgQ2hhcnRDb21tb25Nb2R1bGUgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgTmdNb2R1bGUoe1xuICAgICAgICAgICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgQXhlc01vZHVsZSwgVG9vbHRpcE1vZHVsZV0sXG4gICAgICAgICAgICBkZWNsYXJhdGlvbnM6IF9fc3ByZWFkKENPTVBPTkVOVFMsIFtWaXNpYmlsaXR5T2JzZXJ2ZXJdKSxcbiAgICAgICAgICAgIGV4cG9ydHM6IF9fc3ByZWFkKFtDb21tb25Nb2R1bGUsIEF4ZXNNb2R1bGUsIFRvb2x0aXBNb2R1bGVdLCBDT01QT05FTlRTLCBbVmlzaWJpbGl0eU9ic2VydmVyXSlcbiAgICAgICAgfSlcbiAgICBdLCBDaGFydENvbW1vbk1vZHVsZSk7XG4gICAgcmV0dXJuIENoYXJ0Q29tbW9uTW9kdWxlO1xufSgpKTtcbmV4cG9ydCB7IENoYXJ0Q29tbW9uTW9kdWxlIH07XG4iXX0=