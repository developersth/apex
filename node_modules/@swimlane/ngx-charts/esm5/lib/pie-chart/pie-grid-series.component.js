import { __decorate } from "tslib";
import { Component, Input, Output, EventEmitter, ElementRef, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';
import { pie } from 'd3-shape';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from './pie-arc.component';

var _c0 = ["ngx-charts-pie-grid-series", ""];
function PieGridSeriesComponent__svg_g_1_Template(rf, ctx) { if (rf & 1) {
    var _r369 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(0, "g", 2);
    ɵngcc0.ɵɵlistener("select", function PieGridSeriesComponent__svg_g_1_Template__svg_g_select_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r369); var ctx_r368 = ɵngcc0.ɵɵnextContext(); return ctx_r368.onClick($event); })("activate", function PieGridSeriesComponent__svg_g_1_Template__svg_g_activate_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r369); var ctx_r370 = ɵngcc0.ɵɵnextContext(); return ctx_r370.activate.emit($event); })("deactivate", function PieGridSeriesComponent__svg_g_1_Template__svg_g_deactivate_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r369); var ctx_r371 = ɵngcc0.ɵɵnextContext(); return ctx_r371.deactivate.emit($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var arc_r367 = ctx.$implicit;
    var ctx_r366 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("startAngle", arc_r367.startAngle)("endAngle", arc_r367.endAngle)("innerRadius", ctx_r366.innerRadius)("outerRadius", ctx_r366.outerRadius)("fill", ctx_r366.color(arc_r367))("value", arc_r367.data.value)("data", arc_r367.data)("gradient", false)("pointerEvents", arc_r367.pointerEvents)("animate", arc_r367.animate);
    ɵngcc0.ɵɵattribute("class", arc_r367.class);
} }
var PieGridSeriesComponent = /** @class */ (function () {
    function PieGridSeriesComponent(element) {
        this.innerRadius = 70;
        this.outerRadius = 80;
        this.animations = true;
        this.select = new EventEmitter();
        this.activate = new EventEmitter();
        this.deactivate = new EventEmitter();
        this.element = element.nativeElement;
    }
    PieGridSeriesComponent.prototype.ngOnChanges = function (changes) {
        this.update();
    };
    PieGridSeriesComponent.prototype.update = function () {
        this.layout = pie()
            .value(function (d) { return d.data.value; })
            .sort(null);
        this.arcs = this.getArcs();
    };
    PieGridSeriesComponent.prototype.getArcs = function () {
        var _this = this;
        return this.layout(this.data).map(function (arc, index) {
            var label = arc.data.data.name;
            var other = arc.data.data.other;
            if (index === 0) {
                arc.startAngle = 0;
            }
            var color = _this.colors(label);
            return {
                data: arc.data.data,
                class: 'arc ' + 'arc' + index,
                fill: color,
                startAngle: other ? 0 : arc.startAngle,
                endAngle: arc.endAngle,
                animate: _this.animations && !other,
                pointerEvents: !other
            };
        });
    };
    PieGridSeriesComponent.prototype.onClick = function (data) {
        this.select.emit(this.data[0].data);
    };
    PieGridSeriesComponent.prototype.trackBy = function (index, item) {
        return item.data.name;
    };
    PieGridSeriesComponent.prototype.label = function (arc) {
        return arc.data.name;
    };
    PieGridSeriesComponent.prototype.color = function (arc) {
        return this.colors(this.label(arc));
    };
    PieGridSeriesComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input()
    ], PieGridSeriesComponent.prototype, "colors", void 0);
    __decorate([
        Input()
    ], PieGridSeriesComponent.prototype, "data", void 0);
    __decorate([
        Input()
    ], PieGridSeriesComponent.prototype, "innerRadius", void 0);
    __decorate([
        Input()
    ], PieGridSeriesComponent.prototype, "outerRadius", void 0);
    __decorate([
        Input()
    ], PieGridSeriesComponent.prototype, "animations", void 0);
    __decorate([
        Output()
    ], PieGridSeriesComponent.prototype, "select", void 0);
    __decorate([
        Output()
    ], PieGridSeriesComponent.prototype, "activate", void 0);
    __decorate([
        Output()
    ], PieGridSeriesComponent.prototype, "deactivate", void 0);
PieGridSeriesComponent.ɵfac = function PieGridSeriesComponent_Factory(t) { return new (t || PieGridSeriesComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
PieGridSeriesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PieGridSeriesComponent, selectors: [["g", "ngx-charts-pie-grid-series", ""]], inputs: { innerRadius: "innerRadius", outerRadius: "outerRadius", animations: "animations", colors: "colors", data: "data" }, outputs: { select: "select", activate: "activate", deactivate: "deactivate" }, features: [ɵngcc0.ɵɵNgOnChangesFeature()], attrs: _c0, decls: 2, vars: 2, consts: [[1, "pie-grid-arcs"], ["ngx-charts-pie-arc", "", 3, "startAngle", "endAngle", "innerRadius", "outerRadius", "fill", "value", "data", "gradient", "pointerEvents", "animate", "select", "activate", "deactivate", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["ngx-charts-pie-arc", "", 3, "startAngle", "endAngle", "innerRadius", "outerRadius", "fill", "value", "data", "gradient", "pointerEvents", "animate", "select", "activate", "deactivate"]], template: function PieGridSeriesComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(0, "g", 0);
        ɵngcc0.ɵɵtemplate(1, PieGridSeriesComponent__svg_g_1_Template, 1, 11, "g", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.arcs)("ngForTrackBy", ctx.trackBy);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc2.PieArcComponent], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PieGridSeriesComponent, [{
        type: Component,
        args: [{
                selector: 'g[ngx-charts-pie-grid-series]',
                template: "\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  ",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { innerRadius: [{
            type: Input
        }], outerRadius: [{
            type: Input
        }], animations: [{
            type: Input
        }], select: [{
            type: Output
        }], activate: [{
            type: Output
        }], deactivate: [{
            type: Output
        }], colors: [{
            type: Input
        }], data: [{
            type: Input
        }] }); })();
    return PieGridSeriesComponent;
}());
export { PieGridSeriesComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvQHN3aW1sYW5lL25neC1jaGFydHMvZXNtNS9saWIvcGllLWNoYXJ0L3BpZS1ncmlkLXNlcmllcy5jb21wb25lbnQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytEQTZFK0Q7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBT2hDIiwiZmlsZSI6InBpZS1ncmlkLXNlcmllcy5jb21wb25lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2RlY29yYXRlIH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgRWxlbWVudFJlZiwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzLCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgcGllIH0gZnJvbSAnZDMtc2hhcGUnO1xudmFyIFBpZUdyaWRTZXJpZXNDb21wb25lbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUGllR3JpZFNlcmllc0NvbXBvbmVudChlbGVtZW50KSB7XG4gICAgICAgIHRoaXMuaW5uZXJSYWRpdXMgPSA3MDtcbiAgICAgICAgdGhpcy5vdXRlclJhZGl1cyA9IDgwO1xuICAgICAgICB0aGlzLmFuaW1hdGlvbnMgPSB0cnVlO1xuICAgICAgICB0aGlzLnNlbGVjdCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5hY3RpdmF0ZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5kZWFjdGl2YXRlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50Lm5hdGl2ZUVsZW1lbnQ7XG4gICAgfVxuICAgIFBpZUdyaWRTZXJpZXNDb21wb25lbnQucHJvdG90eXBlLm5nT25DaGFuZ2VzID0gZnVuY3Rpb24gKGNoYW5nZXMpIHtcbiAgICAgICAgdGhpcy51cGRhdGUoKTtcbiAgICB9O1xuICAgIFBpZUdyaWRTZXJpZXNDb21wb25lbnQucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5sYXlvdXQgPSBwaWUoKVxuICAgICAgICAgICAgLnZhbHVlKGZ1bmN0aW9uIChkKSB7IHJldHVybiBkLmRhdGEudmFsdWU7IH0pXG4gICAgICAgICAgICAuc29ydChudWxsKTtcbiAgICAgICAgdGhpcy5hcmNzID0gdGhpcy5nZXRBcmNzKCk7XG4gICAgfTtcbiAgICBQaWVHcmlkU2VyaWVzQ29tcG9uZW50LnByb3RvdHlwZS5nZXRBcmNzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICByZXR1cm4gdGhpcy5sYXlvdXQodGhpcy5kYXRhKS5tYXAoZnVuY3Rpb24gKGFyYywgaW5kZXgpIHtcbiAgICAgICAgICAgIHZhciBsYWJlbCA9IGFyYy5kYXRhLmRhdGEubmFtZTtcbiAgICAgICAgICAgIHZhciBvdGhlciA9IGFyYy5kYXRhLmRhdGEub3RoZXI7XG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IDApIHtcbiAgICAgICAgICAgICAgICBhcmMuc3RhcnRBbmdsZSA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgY29sb3IgPSBfdGhpcy5jb2xvcnMobGFiZWwpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBkYXRhOiBhcmMuZGF0YS5kYXRhLFxuICAgICAgICAgICAgICAgIGNsYXNzOiAnYXJjICcgKyAnYXJjJyArIGluZGV4LFxuICAgICAgICAgICAgICAgIGZpbGw6IGNvbG9yLFxuICAgICAgICAgICAgICAgIHN0YXJ0QW5nbGU6IG90aGVyID8gMCA6IGFyYy5zdGFydEFuZ2xlLFxuICAgICAgICAgICAgICAgIGVuZEFuZ2xlOiBhcmMuZW5kQW5nbGUsXG4gICAgICAgICAgICAgICAgYW5pbWF0ZTogX3RoaXMuYW5pbWF0aW9ucyAmJiAhb3RoZXIsXG4gICAgICAgICAgICAgICAgcG9pbnRlckV2ZW50czogIW90aGVyXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIFBpZUdyaWRTZXJpZXNDb21wb25lbnQucHJvdG90eXBlLm9uQ2xpY2sgPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICB0aGlzLnNlbGVjdC5lbWl0KHRoaXMuZGF0YVswXS5kYXRhKTtcbiAgICB9O1xuICAgIFBpZUdyaWRTZXJpZXNDb21wb25lbnQucHJvdG90eXBlLnRyYWNrQnkgPSBmdW5jdGlvbiAoaW5kZXgsIGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0uZGF0YS5uYW1lO1xuICAgIH07XG4gICAgUGllR3JpZFNlcmllc0NvbXBvbmVudC5wcm90b3R5cGUubGFiZWwgPSBmdW5jdGlvbiAoYXJjKSB7XG4gICAgICAgIHJldHVybiBhcmMuZGF0YS5uYW1lO1xuICAgIH07XG4gICAgUGllR3JpZFNlcmllc0NvbXBvbmVudC5wcm90b3R5cGUuY29sb3IgPSBmdW5jdGlvbiAoYXJjKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbG9ycyh0aGlzLmxhYmVsKGFyYykpO1xuICAgIH07XG4gICAgUGllR3JpZFNlcmllc0NvbXBvbmVudC5jdG9yUGFyYW1ldGVycyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFtcbiAgICAgICAgeyB0eXBlOiBFbGVtZW50UmVmIH1cbiAgICBdOyB9O1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpXG4gICAgXSwgUGllR3JpZFNlcmllc0NvbXBvbmVudC5wcm90b3R5cGUsIFwiY29sb3JzXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KClcbiAgICBdLCBQaWVHcmlkU2VyaWVzQ29tcG9uZW50LnByb3RvdHlwZSwgXCJkYXRhXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KClcbiAgICBdLCBQaWVHcmlkU2VyaWVzQ29tcG9uZW50LnByb3RvdHlwZSwgXCJpbm5lclJhZGl1c1wiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpXG4gICAgXSwgUGllR3JpZFNlcmllc0NvbXBvbmVudC5wcm90b3R5cGUsIFwib3V0ZXJSYWRpdXNcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKVxuICAgIF0sIFBpZUdyaWRTZXJpZXNDb21wb25lbnQucHJvdG90eXBlLCBcImFuaW1hdGlvbnNcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgT3V0cHV0KClcbiAgICBdLCBQaWVHcmlkU2VyaWVzQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzZWxlY3RcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgT3V0cHV0KClcbiAgICBdLCBQaWVHcmlkU2VyaWVzQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhY3RpdmF0ZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBPdXRwdXQoKVxuICAgIF0sIFBpZUdyaWRTZXJpZXNDb21wb25lbnQucHJvdG90eXBlLCBcImRlYWN0aXZhdGVcIiwgdm9pZCAwKTtcbiAgICBQaWVHcmlkU2VyaWVzQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgICAgIENvbXBvbmVudCh7XG4gICAgICAgICAgICBzZWxlY3RvcjogJ2dbbmd4LWNoYXJ0cy1waWUtZ3JpZC1zZXJpZXNdJyxcbiAgICAgICAgICAgIHRlbXBsYXRlOiBcIlxcbiAgICA8c3ZnOmcgY2xhc3M9XFxcInBpZS1ncmlkLWFyY3NcXFwiPlxcbiAgICAgIDxzdmc6Z1xcbiAgICAgICAgbmd4LWNoYXJ0cy1waWUtYXJjXFxuICAgICAgICAqbmdGb3I9XFxcImxldCBhcmMgb2YgYXJjczsgdHJhY2tCeTogdHJhY2tCeVxcXCJcXG4gICAgICAgIFthdHRyLmNsYXNzXT1cXFwiYXJjLmNsYXNzXFxcIlxcbiAgICAgICAgW3N0YXJ0QW5nbGVdPVxcXCJhcmMuc3RhcnRBbmdsZVxcXCJcXG4gICAgICAgIFtlbmRBbmdsZV09XFxcImFyYy5lbmRBbmdsZVxcXCJcXG4gICAgICAgIFtpbm5lclJhZGl1c109XFxcImlubmVyUmFkaXVzXFxcIlxcbiAgICAgICAgW291dGVyUmFkaXVzXT1cXFwib3V0ZXJSYWRpdXNcXFwiXFxuICAgICAgICBbZmlsbF09XFxcImNvbG9yKGFyYylcXFwiXFxuICAgICAgICBbdmFsdWVdPVxcXCJhcmMuZGF0YS52YWx1ZVxcXCJcXG4gICAgICAgIFtkYXRhXT1cXFwiYXJjLmRhdGFcXFwiXFxuICAgICAgICBbZ3JhZGllbnRdPVxcXCJmYWxzZVxcXCJcXG4gICAgICAgIFtwb2ludGVyRXZlbnRzXT1cXFwiYXJjLnBvaW50ZXJFdmVudHNcXFwiXFxuICAgICAgICBbYW5pbWF0ZV09XFxcImFyYy5hbmltYXRlXFxcIlxcbiAgICAgICAgKHNlbGVjdCk9XFxcIm9uQ2xpY2soJGV2ZW50KVxcXCJcXG4gICAgICAgIChhY3RpdmF0ZSk9XFxcImFjdGl2YXRlLmVtaXQoJGV2ZW50KVxcXCJcXG4gICAgICAgIChkZWFjdGl2YXRlKT1cXFwiZGVhY3RpdmF0ZS5lbWl0KCRldmVudClcXFwiXFxuICAgICAgPjwvc3ZnOmc+XFxuICAgIDwvc3ZnOmc+XFxuICBcIixcbiAgICAgICAgICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG4gICAgICAgIH0pXG4gICAgXSwgUGllR3JpZFNlcmllc0NvbXBvbmVudCk7XG4gICAgcmV0dXJuIFBpZUdyaWRTZXJpZXNDb21wb25lbnQ7XG59KCkpO1xuZXhwb3J0IHsgUGllR3JpZFNlcmllc0NvbXBvbmVudCB9O1xuIl19