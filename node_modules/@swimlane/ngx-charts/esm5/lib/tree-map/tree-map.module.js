import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { ChartCommonModule } from '../common/chart-common.module';
import { TreeMapCellComponent } from './tree-map-cell.component';
import { TreeMapCellSeriesComponent } from './tree-map-cell-series.component';
import { TreeMapComponent } from './tree-map.component';
import * as ɵngcc0 from '@angular/core';
var TreeMapModule = /** @class */ (function () {
    function TreeMapModule() {
    }
TreeMapModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TreeMapModule });
TreeMapModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TreeMapModule_Factory(t) { return new (t || TreeMapModule)(); }, imports: [[ChartCommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TreeMapModule, { declarations: function () { return [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]; }, imports: function () { return [ChartCommonModule]; }, exports: function () { return [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TreeMapModule, [{
        type: NgModule,
        args: [{
                imports: [ChartCommonModule],
                declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],
                exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]
            }]
    }], function () { return []; }, null); })();
    return TreeMapModule;
}());
export { TreeMapModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvQHN3aW1sYW5lL25neC1jaGFydHMvZXNtNS9saWIvdHJlZS1tYXAvdHJlZS1tYXAubW9kdWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0FBTUE7O0tBRUs7Ozs7Ozs7Ozs7O2dEQU9pQiIsImZpbGUiOiJ0cmVlLW1hcC5tb2R1bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2RlY29yYXRlIH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2hhcnRDb21tb25Nb2R1bGUgfSBmcm9tICcuLi9jb21tb24vY2hhcnQtY29tbW9uLm1vZHVsZSc7XG5pbXBvcnQgeyBUcmVlTWFwQ2VsbENvbXBvbmVudCB9IGZyb20gJy4vdHJlZS1tYXAtY2VsbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgVHJlZU1hcENlbGxTZXJpZXNDb21wb25lbnQgfSBmcm9tICcuL3RyZWUtbWFwLWNlbGwtc2VyaWVzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUcmVlTWFwQ29tcG9uZW50IH0gZnJvbSAnLi90cmVlLW1hcC5jb21wb25lbnQnO1xudmFyIFRyZWVNYXBNb2R1bGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVHJlZU1hcE1vZHVsZSgpIHtcbiAgICB9XG4gICAgVHJlZU1hcE1vZHVsZSA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBOZ01vZHVsZSh7XG4gICAgICAgICAgICBpbXBvcnRzOiBbQ2hhcnRDb21tb25Nb2R1bGVdLFxuICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbVHJlZU1hcENlbGxDb21wb25lbnQsIFRyZWVNYXBDZWxsU2VyaWVzQ29tcG9uZW50LCBUcmVlTWFwQ29tcG9uZW50XSxcbiAgICAgICAgICAgIGV4cG9ydHM6IFtUcmVlTWFwQ2VsbENvbXBvbmVudCwgVHJlZU1hcENlbGxTZXJpZXNDb21wb25lbnQsIFRyZWVNYXBDb21wb25lbnRdXG4gICAgICAgIH0pXG4gICAgXSwgVHJlZU1hcE1vZHVsZSk7XG4gICAgcmV0dXJuIFRyZWVNYXBNb2R1bGU7XG59KCkpO1xuZXhwb3J0IHsgVHJlZU1hcE1vZHVsZSB9O1xuIl19