import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { ChartCommonModule } from '../common/chart-common.module';
import { AdvancedPieChartComponent } from './advanced-pie-chart.component';
import { PieLabelComponent } from './pie-label.component';
import { PieArcComponent } from './pie-arc.component';
import { PieChartComponent } from './pie-chart.component';
import { PieGridComponent } from './pie-grid.component';
import { PieGridSeriesComponent } from './pie-grid-series.component';
import { PieSeriesComponent } from './pie-series.component';
import * as ɵngcc0 from '@angular/core';
let PieChartModule = class PieChartModule {
};
PieChartModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PieChartModule });
PieChartModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PieChartModule_Factory(t) { return new (t || PieChartModule)(); }, imports: [[ChartCommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PieChartModule, { declarations: function () { return [AdvancedPieChartComponent,
        PieLabelComponent,
        PieArcComponent,
        PieChartComponent,
        PieGridComponent,
        PieGridSeriesComponent,
        PieSeriesComponent]; }, imports: function () { return [ChartCommonModule]; }, exports: function () { return [AdvancedPieChartComponent,
        PieLabelComponent,
        PieArcComponent,
        PieChartComponent,
        PieGridComponent,
        PieGridSeriesComponent,
        PieSeriesComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PieChartModule, [{
        type: NgModule,
        args: [{
                imports: [ChartCommonModule],
                declarations: [
                    AdvancedPieChartComponent,
                    PieLabelComponent,
                    PieArcComponent,
                    PieChartComponent,
                    PieGridComponent,
                    PieGridSeriesComponent,
                    PieSeriesComponent
                ],
                exports: [
                    AdvancedPieChartComponent,
                    PieLabelComponent,
                    PieArcComponent,
                    PieChartComponent,
                    PieGridComponent,
                    PieGridSeriesComponent,
                    PieSeriesComponent
                ]
            }]
    }], null, null); })();
export { PieChartModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvQHN3aW1sYW5lL25neC1jaGFydHMvZXNtMjAxNS9saWIvcGllLWNoYXJ0L3BpZS1jaGFydC5tb2R1bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0FBVUE7OztFQUNFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQXVCaUIiLCJmaWxlIjoicGllLWNoYXJ0Lm1vZHVsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDaGFydENvbW1vbk1vZHVsZSB9IGZyb20gJy4uL2NvbW1vbi9jaGFydC1jb21tb24ubW9kdWxlJztcbmltcG9ydCB7IEFkdmFuY2VkUGllQ2hhcnRDb21wb25lbnQgfSBmcm9tICcuL2FkdmFuY2VkLXBpZS1jaGFydC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGllTGFiZWxDb21wb25lbnQgfSBmcm9tICcuL3BpZS1sYWJlbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGllQXJjQ29tcG9uZW50IH0gZnJvbSAnLi9waWUtYXJjLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQaWVDaGFydENvbXBvbmVudCB9IGZyb20gJy4vcGllLWNoYXJ0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQaWVHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi9waWUtZ3JpZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGllR3JpZFNlcmllc0NvbXBvbmVudCB9IGZyb20gJy4vcGllLWdyaWQtc2VyaWVzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQaWVTZXJpZXNDb21wb25lbnQgfSBmcm9tICcuL3BpZS1zZXJpZXMuY29tcG9uZW50JztcbmxldCBQaWVDaGFydE1vZHVsZSA9IGNsYXNzIFBpZUNoYXJ0TW9kdWxlIHtcbn07XG5QaWVDaGFydE1vZHVsZSA9IF9fZGVjb3JhdGUoW1xuICAgIE5nTW9kdWxlKHtcbiAgICAgICAgaW1wb3J0czogW0NoYXJ0Q29tbW9uTW9kdWxlXSxcbiAgICAgICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgICAgICBBZHZhbmNlZFBpZUNoYXJ0Q29tcG9uZW50LFxuICAgICAgICAgICAgUGllTGFiZWxDb21wb25lbnQsXG4gICAgICAgICAgICBQaWVBcmNDb21wb25lbnQsXG4gICAgICAgICAgICBQaWVDaGFydENvbXBvbmVudCxcbiAgICAgICAgICAgIFBpZUdyaWRDb21wb25lbnQsXG4gICAgICAgICAgICBQaWVHcmlkU2VyaWVzQ29tcG9uZW50LFxuICAgICAgICAgICAgUGllU2VyaWVzQ29tcG9uZW50XG4gICAgICAgIF0sXG4gICAgICAgIGV4cG9ydHM6IFtcbiAgICAgICAgICAgIEFkdmFuY2VkUGllQ2hhcnRDb21wb25lbnQsXG4gICAgICAgICAgICBQaWVMYWJlbENvbXBvbmVudCxcbiAgICAgICAgICAgIFBpZUFyY0NvbXBvbmVudCxcbiAgICAgICAgICAgIFBpZUNoYXJ0Q29tcG9uZW50LFxuICAgICAgICAgICAgUGllR3JpZENvbXBvbmVudCxcbiAgICAgICAgICAgIFBpZUdyaWRTZXJpZXNDb21wb25lbnQsXG4gICAgICAgICAgICBQaWVTZXJpZXNDb21wb25lbnRcbiAgICAgICAgXVxuICAgIH0pXG5dLCBQaWVDaGFydE1vZHVsZSk7XG5leHBvcnQgeyBQaWVDaGFydE1vZHVsZSB9O1xuIl19