/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ElementRef, Output, EventEmitter, Renderer2, NgZone, HostBinding, ChangeDetectionStrategy } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

var _c0 = ["*"];
var ScrollerComponent = /** @class */ (function () {
    function ScrollerComponent(ngZone, element, renderer) {
        this.ngZone = ngZone;
        this.renderer = renderer;
        this.scrollbarV = false;
        this.scrollbarH = false;
        this.scroll = new EventEmitter();
        this.scrollYPos = 0;
        this.scrollXPos = 0;
        this.prevScrollYPos = 0;
        this.prevScrollXPos = 0;
        this._scrollEventListener = null;
        this.element = element.nativeElement;
    }
    /**
     * @return {?}
     */
    ScrollerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        // manual bind so we don't always listen
        if (this.scrollbarV || this.scrollbarH) {
            /** @type {?} */
            var renderer = this.renderer;
            this.parentElement = renderer.parentNode(renderer.parentNode(this.element));
            this._scrollEventListener = this.onScrolled.bind(this);
            this.parentElement.addEventListener('scroll', this._scrollEventListener);
        }
    };
    /**
     * @return {?}
     */
    ScrollerComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this._scrollEventListener) {
            this.parentElement.removeEventListener('scroll', this._scrollEventListener);
            this._scrollEventListener = null;
        }
    };
    /**
     * @param {?} offsetY
     * @return {?}
     */
    ScrollerComponent.prototype.setOffset = /**
     * @param {?} offsetY
     * @return {?}
     */
    function (offsetY) {
        if (this.parentElement) {
            this.parentElement.scrollTop = offsetY;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ScrollerComponent.prototype.onScrolled = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        /** @type {?} */
        var dom = (/** @type {?} */ (event.currentTarget));
        requestAnimationFrame((/**
         * @return {?}
         */
        function () {
            _this.scrollYPos = dom.scrollTop;
            _this.scrollXPos = dom.scrollLeft;
            _this.updateOffset();
        }));
    };
    /**
     * @return {?}
     */
    ScrollerComponent.prototype.updateOffset = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var direction;
        if (this.scrollYPos < this.prevScrollYPos) {
            direction = 'down';
        }
        else if (this.scrollYPos > this.prevScrollYPos) {
            direction = 'up';
        }
        this.scroll.emit({
            direction: direction,
            scrollYPos: this.scrollYPos,
            scrollXPos: this.scrollXPos
        });
        this.prevScrollYPos = this.scrollYPos;
        this.prevScrollXPos = this.scrollXPos;
    };
    /** @nocollapse */
    ScrollerComponent.ctorParameters = function () { return [
        { type: NgZone },
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    ScrollerComponent.propDecorators = {
        scrollbarV: [{ type: Input }],
        scrollbarH: [{ type: Input }],
        scrollHeight: [{ type: HostBinding, args: ['style.height.px',] }, { type: Input }],
        scrollWidth: [{ type: HostBinding, args: ['style.width.px',] }, { type: Input }],
        scroll: [{ type: Output }]
    };
ScrollerComponent.ɵfac = function ScrollerComponent_Factory(t) { return new (t || ScrollerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
ScrollerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ScrollerComponent, selectors: [["datatable-scroller"]], hostAttrs: [1, "datatable-scroll"], hostVars: 4, hostBindings: function ScrollerComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("height", ctx.scrollHeight, "px")("width", ctx.scrollWidth, "px");
    } }, inputs: { scrollbarV: "scrollbarV", scrollbarH: "scrollbarH", scrollHeight: "scrollHeight", scrollWidth: "scrollWidth" }, outputs: { scroll: "scroll" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScrollerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollerComponent, [{
        type: Component,
        args: [{
                selector: 'datatable-scroller',
                template: "\n    <ng-content></ng-content>\n  ",
                host: {
                    class: 'datatable-scroll'
                },
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { scrollbarV: [{
            type: Input
        }], scrollbarH: [{
            type: Input
        }], scroll: [{
            type: Output
        }], scrollHeight: [{
            type: HostBinding,
            args: ['style.height.px']
        }, {
            type: Input
        }], scrollWidth: [{
            type: HostBinding,
            args: ['style.width.px']
        }, {
            type: Input
        }] }); })();
    return ScrollerComponent;
}());
export { ScrollerComponent };
if (false) {
    /** @type {?} */
    ScrollerComponent.prototype.scrollbarV;
    /** @type {?} */
    ScrollerComponent.prototype.scrollbarH;
    /** @type {?} */
    ScrollerComponent.prototype.scrollHeight;
    /** @type {?} */
    ScrollerComponent.prototype.scrollWidth;
    /** @type {?} */
    ScrollerComponent.prototype.scroll;
    /** @type {?} */
    ScrollerComponent.prototype.scrollYPos;
    /** @type {?} */
    ScrollerComponent.prototype.scrollXPos;
    /** @type {?} */
    ScrollerComponent.prototype.prevScrollYPos;
    /** @type {?} */
    ScrollerComponent.prototype.prevScrollXPos;
    /** @type {?} */
    ScrollerComponent.prototype.element;
    /** @type {?} */
    ScrollerComponent.prototype.parentElement;
    /** @type {?} */
    ScrollerComponent.prototype.onScrollListener;
    /**
     * @type {?}
     * @private
     */
    ScrollerComponent.prototype._scrollEventListener;
    /**
     * @type {?}
     * @private
     */
    ScrollerComponent.prototype.ngZone;
    /**
     * @type {?}
     * @private
     */
    ScrollerComponent.prototype.renderer;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvQHN3aW1sYW5lL25neC1kYXRhdGFibGUvZXNtNS9saWIvY29tcG9uZW50cy9ib2R5L3Njcm9sbGVyLmNvbXBvbmVudC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUFrR00sQUFVQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBYUEiLCJmaWxlIjoic2Nyb2xsZXIuY29tcG9uZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxjb25zdGFudFByb3BlcnR5LGV4dHJhUmVxdWlyZSxtaXNzaW5nT3ZlcnJpZGUsbWlzc2luZ1JldHVybix1bnVzZWRQcml2YXRlTWVtYmVycyx1c2VsZXNzQ29kZX0gY2hlY2tlZCBieSB0c2NcbiAqL1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgRWxlbWVudFJlZiwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIFJlbmRlcmVyMiwgTmdab25lLCBIb3N0QmluZGluZywgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbnZhciBTY3JvbGxlckNvbXBvbmVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTY3JvbGxlckNvbXBvbmVudChuZ1pvbmUsIGVsZW1lbnQsIHJlbmRlcmVyKSB7XG4gICAgICAgIHRoaXMubmdab25lID0gbmdab25lO1xuICAgICAgICB0aGlzLnJlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgICAgIHRoaXMuc2Nyb2xsYmFyViA9IGZhbHNlO1xuICAgICAgICB0aGlzLnNjcm9sbGJhckggPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zY3JvbGwgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuc2Nyb2xsWVBvcyA9IDA7XG4gICAgICAgIHRoaXMuc2Nyb2xsWFBvcyA9IDA7XG4gICAgICAgIHRoaXMucHJldlNjcm9sbFlQb3MgPSAwO1xuICAgICAgICB0aGlzLnByZXZTY3JvbGxYUG9zID0gMDtcbiAgICAgICAgdGhpcy5fc2Nyb2xsRXZlbnRMaXN0ZW5lciA9IG51bGw7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQubmF0aXZlRWxlbWVudDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBTY3JvbGxlckNvbXBvbmVudC5wcm90b3R5cGUubmdPbkluaXQgPSAvKipcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gbWFudWFsIGJpbmQgc28gd2UgZG9uJ3QgYWx3YXlzIGxpc3RlblxuICAgICAgICBpZiAodGhpcy5zY3JvbGxiYXJWIHx8IHRoaXMuc2Nyb2xsYmFySCkge1xuICAgICAgICAgICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgICAgICAgICAgdmFyIHJlbmRlcmVyID0gdGhpcy5yZW5kZXJlcjtcbiAgICAgICAgICAgIHRoaXMucGFyZW50RWxlbWVudCA9IHJlbmRlcmVyLnBhcmVudE5vZGUocmVuZGVyZXIucGFyZW50Tm9kZSh0aGlzLmVsZW1lbnQpKTtcbiAgICAgICAgICAgIHRoaXMuX3Njcm9sbEV2ZW50TGlzdGVuZXIgPSB0aGlzLm9uU2Nyb2xsZWQuYmluZCh0aGlzKTtcbiAgICAgICAgICAgIHRoaXMucGFyZW50RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLl9zY3JvbGxFdmVudExpc3RlbmVyKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgLyoqXG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBTY3JvbGxlckNvbXBvbmVudC5wcm90b3R5cGUubmdPbkRlc3Ryb3kgPSAvKipcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuX3Njcm9sbEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgICAgIHRoaXMucGFyZW50RWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLl9zY3JvbGxFdmVudExpc3RlbmVyKTtcbiAgICAgICAgICAgIHRoaXMuX3Njcm9sbEV2ZW50TGlzdGVuZXIgPSBudWxsO1xuICAgICAgICB9XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gez99IG9mZnNldFlcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIFNjcm9sbGVyQ29tcG9uZW50LnByb3RvdHlwZS5zZXRPZmZzZXQgPSAvKipcbiAgICAgKiBAcGFyYW0gez99IG9mZnNldFlcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIChvZmZzZXRZKSB7XG4gICAgICAgIGlmICh0aGlzLnBhcmVudEVsZW1lbnQpIHtcbiAgICAgICAgICAgIHRoaXMucGFyZW50RWxlbWVudC5zY3JvbGxUb3AgPSBvZmZzZXRZO1xuICAgICAgICB9XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gez99IGV2ZW50XG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBTY3JvbGxlckNvbXBvbmVudC5wcm90b3R5cGUub25TY3JvbGxlZCA9IC8qKlxuICAgICAqIEBwYXJhbSB7P30gZXZlbnRcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAvKiogQHR5cGUgez99ICovXG4gICAgICAgIHZhciBkb20gPSAoLyoqIEB0eXBlIHs/fSAqLyAoZXZlbnQuY3VycmVudFRhcmdldCkpO1xuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKC8qKlxuICAgICAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgX3RoaXMuc2Nyb2xsWVBvcyA9IGRvbS5zY3JvbGxUb3A7XG4gICAgICAgICAgICBfdGhpcy5zY3JvbGxYUG9zID0gZG9tLnNjcm9sbExlZnQ7XG4gICAgICAgICAgICBfdGhpcy51cGRhdGVPZmZzZXQoKTtcbiAgICAgICAgfSkpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBTY3JvbGxlckNvbXBvbmVudC5wcm90b3R5cGUudXBkYXRlT2Zmc2V0ID0gLyoqXG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICAgICAgdmFyIGRpcmVjdGlvbjtcbiAgICAgICAgaWYgKHRoaXMuc2Nyb2xsWVBvcyA8IHRoaXMucHJldlNjcm9sbFlQb3MpIHtcbiAgICAgICAgICAgIGRpcmVjdGlvbiA9ICdkb3duJztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLnNjcm9sbFlQb3MgPiB0aGlzLnByZXZTY3JvbGxZUG9zKSB7XG4gICAgICAgICAgICBkaXJlY3Rpb24gPSAndXAnO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2Nyb2xsLmVtaXQoe1xuICAgICAgICAgICAgZGlyZWN0aW9uOiBkaXJlY3Rpb24sXG4gICAgICAgICAgICBzY3JvbGxZUG9zOiB0aGlzLnNjcm9sbFlQb3MsXG4gICAgICAgICAgICBzY3JvbGxYUG9zOiB0aGlzLnNjcm9sbFhQb3NcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucHJldlNjcm9sbFlQb3MgPSB0aGlzLnNjcm9sbFlQb3M7XG4gICAgICAgIHRoaXMucHJldlNjcm9sbFhQb3MgPSB0aGlzLnNjcm9sbFhQb3M7XG4gICAgfTtcbiAgICBTY3JvbGxlckNvbXBvbmVudC5kZWNvcmF0b3JzID0gW1xuICAgICAgICB7IHR5cGU6IENvbXBvbmVudCwgYXJnczogW3tcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdkYXRhdGFibGUtc2Nyb2xsZXInLFxuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZTogXCJcXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxcbiAgXCIsXG4gICAgICAgICAgICAgICAgICAgIGhvc3Q6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiAnZGF0YXRhYmxlLXNjcm9sbCdcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbiAgICAgICAgICAgICAgICB9XSB9XG4gICAgXTtcbiAgICAvKiogQG5vY29sbGFwc2UgKi9cbiAgICBTY3JvbGxlckNvbXBvbmVudC5jdG9yUGFyYW1ldGVycyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFtcbiAgICAgICAgeyB0eXBlOiBOZ1pvbmUgfSxcbiAgICAgICAgeyB0eXBlOiBFbGVtZW50UmVmIH0sXG4gICAgICAgIHsgdHlwZTogUmVuZGVyZXIyIH1cbiAgICBdOyB9O1xuICAgIFNjcm9sbGVyQ29tcG9uZW50LnByb3BEZWNvcmF0b3JzID0ge1xuICAgICAgICBzY3JvbGxiYXJWOiBbeyB0eXBlOiBJbnB1dCB9XSxcbiAgICAgICAgc2Nyb2xsYmFySDogW3sgdHlwZTogSW5wdXQgfV0sXG4gICAgICAgIHNjcm9sbEhlaWdodDogW3sgdHlwZTogSG9zdEJpbmRpbmcsIGFyZ3M6IFsnc3R5bGUuaGVpZ2h0LnB4JyxdIH0sIHsgdHlwZTogSW5wdXQgfV0sXG4gICAgICAgIHNjcm9sbFdpZHRoOiBbeyB0eXBlOiBIb3N0QmluZGluZywgYXJnczogWydzdHlsZS53aWR0aC5weCcsXSB9LCB7IHR5cGU6IElucHV0IH1dLFxuICAgICAgICBzY3JvbGw6IFt7IHR5cGU6IE91dHB1dCB9XVxuICAgIH07XG4gICAgcmV0dXJuIFNjcm9sbGVyQ29tcG9uZW50O1xufSgpKTtcbmV4cG9ydCB7IFNjcm9sbGVyQ29tcG9uZW50IH07XG5pZiAoZmFsc2UpIHtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgU2Nyb2xsZXJDb21wb25lbnQucHJvdG90eXBlLnNjcm9sbGJhclY7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIFNjcm9sbGVyQ29tcG9uZW50LnByb3RvdHlwZS5zY3JvbGxiYXJIO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBTY3JvbGxlckNvbXBvbmVudC5wcm90b3R5cGUuc2Nyb2xsSGVpZ2h0O1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBTY3JvbGxlckNvbXBvbmVudC5wcm90b3R5cGUuc2Nyb2xsV2lkdGg7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIFNjcm9sbGVyQ29tcG9uZW50LnByb3RvdHlwZS5zY3JvbGw7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIFNjcm9sbGVyQ29tcG9uZW50LnByb3RvdHlwZS5zY3JvbGxZUG9zO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBTY3JvbGxlckNvbXBvbmVudC5wcm90b3R5cGUuc2Nyb2xsWFBvcztcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgU2Nyb2xsZXJDb21wb25lbnQucHJvdG90eXBlLnByZXZTY3JvbGxZUG9zO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBTY3JvbGxlckNvbXBvbmVudC5wcm90b3R5cGUucHJldlNjcm9sbFhQb3M7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIFNjcm9sbGVyQ29tcG9uZW50LnByb3RvdHlwZS5lbGVtZW50O1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBTY3JvbGxlckNvbXBvbmVudC5wcm90b3R5cGUucGFyZW50RWxlbWVudDtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgU2Nyb2xsZXJDb21wb25lbnQucHJvdG90eXBlLm9uU2Nyb2xsTGlzdGVuZXI7XG4gICAgLyoqXG4gICAgICogQHR5cGUgez99XG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBTY3JvbGxlckNvbXBvbmVudC5wcm90b3R5cGUuX3Njcm9sbEV2ZW50TGlzdGVuZXI7XG4gICAgLyoqXG4gICAgICogQHR5cGUgez99XG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBTY3JvbGxlckNvbXBvbmVudC5wcm90b3R5cGUubmdab25lO1xuICAgIC8qKlxuICAgICAqIEB0eXBlIHs/fVxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgU2Nyb2xsZXJDb21wb25lbnQucHJvdG90eXBlLnJlbmRlcmVyO1xufVxuIl19