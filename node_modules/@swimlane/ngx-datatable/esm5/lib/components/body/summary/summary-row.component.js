/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
/**
 * @record
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../body-row.component';

function DataTableSummaryRowComponent_datatable_body_row_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "datatable-body-row", 1);
} if (rf & 2) {
    var ctx_r163 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerWidth", ctx_r163.innerWidth)("offsetX", ctx_r163.offsetX)("columns", ctx_r163._internalColumns)("rowHeight", ctx_r163.rowHeight)("row", ctx_r163.summaryRow)("rowIndex", 0 - 1);
} }
export function ISummaryColumn() { }
if (false) {
    /** @type {?|undefined} */
    ISummaryColumn.prototype.summaryFunc;
    /** @type {?|undefined} */
    ISummaryColumn.prototype.summaryTemplate;
    /** @type {?} */
    ISummaryColumn.prototype.prop;
    /** @type {?|undefined} */
    ISummaryColumn.prototype.pipe;
}
/**
 * @param {?} cells
 * @return {?}
 */
function defaultSumFunc(cells) {
    /** @type {?} */
    var cellsWithValues = cells.filter((/**
     * @param {?} cell
     * @return {?}
     */
    function (cell) { return !!cell; }));
    if (!cellsWithValues.length) {
        return null;
    }
    if (cellsWithValues.some((/**
     * @param {?} cell
     * @return {?}
     */
    function (cell) { return typeof cell !== 'number'; }))) {
        return null;
    }
    return cellsWithValues.reduce((/**
     * @param {?} res
     * @param {?} cell
     * @return {?}
     */
    function (res, cell) { return res + cell; }));
}
/**
 * @param {?} cells
 * @return {?}
 */
function noopSumFunc(cells) {
    return null;
}
var DataTableSummaryRowComponent = /** @class */ (function () {
    function DataTableSummaryRowComponent() {
        this.summaryRow = {};
    }
    /**
     * @return {?}
     */
    DataTableSummaryRowComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        if (!this.columns || !this.rows) {
            return;
        }
        this.updateInternalColumns();
        this.updateValues();
    };
    /**
     * @private
     * @return {?}
     */
    DataTableSummaryRowComponent.prototype.updateInternalColumns = /**
     * @private
     * @return {?}
     */
    function () {
        this._internalColumns = this.columns.map((/**
         * @param {?} col
         * @return {?}
         */
        function (col) { return (tslib_1.__assign({}, col, { cellTemplate: col.summaryTemplate })); }));
    };
    /**
     * @private
     * @return {?}
     */
    DataTableSummaryRowComponent.prototype.updateValues = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.summaryRow = {};
        this.columns
            .filter((/**
         * @param {?} col
         * @return {?}
         */
        function (col) { return !col.summaryTemplate; }))
            .forEach((/**
         * @param {?} col
         * @return {?}
         */
        function (col) {
            /** @type {?} */
            var cellsFromSingleColumn = _this.rows.map((/**
             * @param {?} row
             * @return {?}
             */
            function (row) { return row[col.prop]; }));
            /** @type {?} */
            var sumFunc = _this.getSummaryFunction(col);
            _this.summaryRow[col.prop] = col.pipe
                ? col.pipe.transform(sumFunc(cellsFromSingleColumn))
                : sumFunc(cellsFromSingleColumn);
        }));
    };
    /**
     * @private
     * @param {?} column
     * @return {?}
     */
    DataTableSummaryRowComponent.prototype.getSummaryFunction = /**
     * @private
     * @param {?} column
     * @return {?}
     */
    function (column) {
        if (column.summaryFunc === undefined) {
            return defaultSumFunc;
        }
        else if (column.summaryFunc === null) {
            return noopSumFunc;
        }
        else {
            return column.summaryFunc;
        }
    };
    DataTableSummaryRowComponent.propDecorators = {
        rows: [{ type: Input }],
        columns: [{ type: Input }],
        rowHeight: [{ type: Input }],
        offsetX: [{ type: Input }],
        innerWidth: [{ type: Input }]
    };
DataTableSummaryRowComponent.ɵfac = function DataTableSummaryRowComponent_Factory(t) { return new (t || DataTableSummaryRowComponent)(); };
DataTableSummaryRowComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataTableSummaryRowComponent, selectors: [["datatable-summary-row"]], hostAttrs: [1, "datatable-summary-row"], inputs: { rows: "rows", columns: "columns", rowHeight: "rowHeight", offsetX: "offsetX", innerWidth: "innerWidth" }, features: [ɵngcc0.ɵɵNgOnChangesFeature()], decls: 1, vars: 1, consts: [["tabindex", "-1", 3, "innerWidth", "offsetX", "columns", "rowHeight", "row", "rowIndex", 4, "ngIf"], ["tabindex", "-1", 3, "innerWidth", "offsetX", "columns", "rowHeight", "row", "rowIndex"]], template: function DataTableSummaryRowComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, DataTableSummaryRowComponent_datatable_body_row_0_Template, 1, 6, "datatable-body-row", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.summaryRow && ctx._internalColumns);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.DataTableBodyRowComponent], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableSummaryRowComponent, [{
        type: Component,
        args: [{
                selector: 'datatable-summary-row',
                template: "\n    <datatable-body-row\n      *ngIf=\"summaryRow && _internalColumns\"\n      tabindex=\"-1\"\n      [innerWidth]=\"innerWidth\"\n      [offsetX]=\"offsetX\"\n      [columns]=\"_internalColumns\"\n      [rowHeight]=\"rowHeight\"\n      [row]=\"summaryRow\"\n      [rowIndex]=\"-1\"\n    >\n    </datatable-body-row>\n  ",
                host: {
                    class: 'datatable-summary-row'
                }
            }]
    }], function () { return []; }, { rows: [{
            type: Input
        }], columns: [{
            type: Input
        }], rowHeight: [{
            type: Input
        }], offsetX: [{
            type: Input
        }], innerWidth: [{
            type: Input
        }] }); })();
    return DataTableSummaryRowComponent;
}());
export { DataTableSummaryRowComponent };
if (false) {
    /** @type {?} */
    DataTableSummaryRowComponent.prototype.rows;
    /** @type {?} */
    DataTableSummaryRowComponent.prototype.columns;
    /** @type {?} */
    DataTableSummaryRowComponent.prototype.rowHeight;
    /** @type {?} */
    DataTableSummaryRowComponent.prototype.offsetX;
    /** @type {?} */
    DataTableSummaryRowComponent.prototype.innerWidth;
    /** @type {?} */
    DataTableSummaryRowComponent.prototype._internalColumns;
    /** @type {?} */
    DataTableSummaryRowComponent.prototype.summaryRow;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvQHN3aW1sYW5lL25neC1kYXRhdGFibGUvZXNtNS9saWIvY29tcG9uZW50cy9ib2R5L3N1bW1hcnkvc3VtbWFyeS1yb3cuY29tcG9uZW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBU0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUFxSU0sQUFTQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQU9BIiwiZmlsZSI6InN1bW1hcnktcm93LmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXMsY29uc3RhbnRQcm9wZXJ0eSxleHRyYVJlcXVpcmUsbWlzc2luZ092ZXJyaWRlLG1pc3NpbmdSZXR1cm4sdW51c2VkUHJpdmF0ZU1lbWJlcnMsdXNlbGVzc0NvZGV9IGNoZWNrZWQgYnkgdHNjXG4gKi9cbmltcG9ydCAqIGFzIHRzbGliXzEgZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4vKipcbiAqIEByZWNvcmRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIElTdW1tYXJ5Q29sdW1uKCkgeyB9XG5pZiAoZmFsc2UpIHtcbiAgICAvKiogQHR5cGUgez98dW5kZWZpbmVkfSAqL1xuICAgIElTdW1tYXJ5Q29sdW1uLnByb3RvdHlwZS5zdW1tYXJ5RnVuYztcbiAgICAvKiogQHR5cGUgez98dW5kZWZpbmVkfSAqL1xuICAgIElTdW1tYXJ5Q29sdW1uLnByb3RvdHlwZS5zdW1tYXJ5VGVtcGxhdGU7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIElTdW1tYXJ5Q29sdW1uLnByb3RvdHlwZS5wcm9wO1xuICAgIC8qKiBAdHlwZSB7P3x1bmRlZmluZWR9ICovXG4gICAgSVN1bW1hcnlDb2x1bW4ucHJvdG90eXBlLnBpcGU7XG59XG4vKipcbiAqIEBwYXJhbSB7P30gY2VsbHNcbiAqIEByZXR1cm4gez99XG4gKi9cbmZ1bmN0aW9uIGRlZmF1bHRTdW1GdW5jKGNlbGxzKSB7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIHZhciBjZWxsc1dpdGhWYWx1ZXMgPSBjZWxscy5maWx0ZXIoKC8qKlxuICAgICAqIEBwYXJhbSB7P30gY2VsbFxuICAgICAqIEByZXR1cm4gez99XG4gICAgICovXG4gICAgZnVuY3Rpb24gKGNlbGwpIHsgcmV0dXJuICEhY2VsbDsgfSkpO1xuICAgIGlmICghY2VsbHNXaXRoVmFsdWVzLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgaWYgKGNlbGxzV2l0aFZhbHVlcy5zb21lKCgvKipcbiAgICAgKiBAcGFyYW0gez99IGNlbGxcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIChjZWxsKSB7IHJldHVybiB0eXBlb2YgY2VsbCAhPT0gJ251bWJlcic7IH0pKSkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGNlbGxzV2l0aFZhbHVlcy5yZWR1Y2UoKC8qKlxuICAgICAqIEBwYXJhbSB7P30gcmVzXG4gICAgICogQHBhcmFtIHs/fSBjZWxsXG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBmdW5jdGlvbiAocmVzLCBjZWxsKSB7IHJldHVybiByZXMgKyBjZWxsOyB9KSk7XG59XG4vKipcbiAqIEBwYXJhbSB7P30gY2VsbHNcbiAqIEByZXR1cm4gez99XG4gKi9cbmZ1bmN0aW9uIG5vb3BTdW1GdW5jKGNlbGxzKSB7XG4gICAgcmV0dXJuIG51bGw7XG59XG52YXIgRGF0YVRhYmxlU3VtbWFyeVJvd0NvbXBvbmVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBEYXRhVGFibGVTdW1tYXJ5Um93Q29tcG9uZW50KCkge1xuICAgICAgICB0aGlzLnN1bW1hcnlSb3cgPSB7fTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBEYXRhVGFibGVTdW1tYXJ5Um93Q29tcG9uZW50LnByb3RvdHlwZS5uZ09uQ2hhbmdlcyA9IC8qKlxuICAgICAqIEByZXR1cm4gez99XG4gICAgICovXG4gICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXRoaXMuY29sdW1ucyB8fCAhdGhpcy5yb3dzKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy51cGRhdGVJbnRlcm5hbENvbHVtbnMoKTtcbiAgICAgICAgdGhpcy51cGRhdGVWYWx1ZXMoKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBEYXRhVGFibGVTdW1tYXJ5Um93Q29tcG9uZW50LnByb3RvdHlwZS51cGRhdGVJbnRlcm5hbENvbHVtbnMgPSAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEByZXR1cm4gez99XG4gICAgICovXG4gICAgZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9pbnRlcm5hbENvbHVtbnMgPSB0aGlzLmNvbHVtbnMubWFwKCgvKipcbiAgICAgICAgICogQHBhcmFtIHs/fSBjb2xcbiAgICAgICAgICogQHJldHVybiB7P31cbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIChjb2wpIHsgcmV0dXJuICh0c2xpYl8xLl9fYXNzaWduKHt9LCBjb2wsIHsgY2VsbFRlbXBsYXRlOiBjb2wuc3VtbWFyeVRlbXBsYXRlIH0pKTsgfSkpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIERhdGFUYWJsZVN1bW1hcnlSb3dDb21wb25lbnQucHJvdG90eXBlLnVwZGF0ZVZhbHVlcyA9IC8qKlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuc3VtbWFyeVJvdyA9IHt9O1xuICAgICAgICB0aGlzLmNvbHVtbnNcbiAgICAgICAgICAgIC5maWx0ZXIoKC8qKlxuICAgICAgICAgKiBAcGFyYW0gez99IGNvbFxuICAgICAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gKGNvbCkgeyByZXR1cm4gIWNvbC5zdW1tYXJ5VGVtcGxhdGU7IH0pKVxuICAgICAgICAgICAgLmZvckVhY2goKC8qKlxuICAgICAgICAgKiBAcGFyYW0gez99IGNvbFxuICAgICAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gKGNvbCkge1xuICAgICAgICAgICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgICAgICAgICAgdmFyIGNlbGxzRnJvbVNpbmdsZUNvbHVtbiA9IF90aGlzLnJvd3MubWFwKCgvKipcbiAgICAgICAgICAgICAqIEBwYXJhbSB7P30gcm93XG4gICAgICAgICAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBmdW5jdGlvbiAocm93KSB7IHJldHVybiByb3dbY29sLnByb3BdOyB9KSk7XG4gICAgICAgICAgICAvKiogQHR5cGUgez99ICovXG4gICAgICAgICAgICB2YXIgc3VtRnVuYyA9IF90aGlzLmdldFN1bW1hcnlGdW5jdGlvbihjb2wpO1xuICAgICAgICAgICAgX3RoaXMuc3VtbWFyeVJvd1tjb2wucHJvcF0gPSBjb2wucGlwZVxuICAgICAgICAgICAgICAgID8gY29sLnBpcGUudHJhbnNmb3JtKHN1bUZ1bmMoY2VsbHNGcm9tU2luZ2xlQ29sdW1uKSlcbiAgICAgICAgICAgICAgICA6IHN1bUZ1bmMoY2VsbHNGcm9tU2luZ2xlQ29sdW1uKTtcbiAgICAgICAgfSkpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0gez99IGNvbHVtblxuICAgICAqIEByZXR1cm4gez99XG4gICAgICovXG4gICAgRGF0YVRhYmxlU3VtbWFyeVJvd0NvbXBvbmVudC5wcm90b3R5cGUuZ2V0U3VtbWFyeUZ1bmN0aW9uID0gLyoqXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0gez99IGNvbHVtblxuICAgICAqIEByZXR1cm4gez99XG4gICAgICovXG4gICAgZnVuY3Rpb24gKGNvbHVtbikge1xuICAgICAgICBpZiAoY29sdW1uLnN1bW1hcnlGdW5jID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBkZWZhdWx0U3VtRnVuYztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjb2x1bW4uc3VtbWFyeUZ1bmMgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBub29wU3VtRnVuYztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBjb2x1bW4uc3VtbWFyeUZ1bmM7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIERhdGFUYWJsZVN1bW1hcnlSb3dDb21wb25lbnQuZGVjb3JhdG9ycyA9IFtcbiAgICAgICAgeyB0eXBlOiBDb21wb25lbnQsIGFyZ3M6IFt7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGF0YXRhYmxlLXN1bW1hcnktcm93JyxcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGU6IFwiXFxuICAgIDxkYXRhdGFibGUtYm9keS1yb3dcXG4gICAgICAqbmdJZj1cXFwic3VtbWFyeVJvdyAmJiBfaW50ZXJuYWxDb2x1bW5zXFxcIlxcbiAgICAgIHRhYmluZGV4PVxcXCItMVxcXCJcXG4gICAgICBbaW5uZXJXaWR0aF09XFxcImlubmVyV2lkdGhcXFwiXFxuICAgICAgW29mZnNldFhdPVxcXCJvZmZzZXRYXFxcIlxcbiAgICAgIFtjb2x1bW5zXT1cXFwiX2ludGVybmFsQ29sdW1uc1xcXCJcXG4gICAgICBbcm93SGVpZ2h0XT1cXFwicm93SGVpZ2h0XFxcIlxcbiAgICAgIFtyb3ddPVxcXCJzdW1tYXJ5Um93XFxcIlxcbiAgICAgIFtyb3dJbmRleF09XFxcIi0xXFxcIlxcbiAgICA+XFxuICAgIDwvZGF0YXRhYmxlLWJvZHktcm93PlxcbiAgXCIsXG4gICAgICAgICAgICAgICAgICAgIGhvc3Q6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiAnZGF0YXRhYmxlLXN1bW1hcnktcm93J1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfV0gfVxuICAgIF07XG4gICAgRGF0YVRhYmxlU3VtbWFyeVJvd0NvbXBvbmVudC5wcm9wRGVjb3JhdG9ycyA9IHtcbiAgICAgICAgcm93czogW3sgdHlwZTogSW5wdXQgfV0sXG4gICAgICAgIGNvbHVtbnM6IFt7IHR5cGU6IElucHV0IH1dLFxuICAgICAgICByb3dIZWlnaHQ6IFt7IHR5cGU6IElucHV0IH1dLFxuICAgICAgICBvZmZzZXRYOiBbeyB0eXBlOiBJbnB1dCB9XSxcbiAgICAgICAgaW5uZXJXaWR0aDogW3sgdHlwZTogSW5wdXQgfV1cbiAgICB9O1xuICAgIHJldHVybiBEYXRhVGFibGVTdW1tYXJ5Um93Q29tcG9uZW50O1xufSgpKTtcbmV4cG9ydCB7IERhdGFUYWJsZVN1bW1hcnlSb3dDb21wb25lbnQgfTtcbmlmIChmYWxzZSkge1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBEYXRhVGFibGVTdW1tYXJ5Um93Q29tcG9uZW50LnByb3RvdHlwZS5yb3dzO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBEYXRhVGFibGVTdW1tYXJ5Um93Q29tcG9uZW50LnByb3RvdHlwZS5jb2x1bW5zO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBEYXRhVGFibGVTdW1tYXJ5Um93Q29tcG9uZW50LnByb3RvdHlwZS5yb3dIZWlnaHQ7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIERhdGFUYWJsZVN1bW1hcnlSb3dDb21wb25lbnQucHJvdG90eXBlLm9mZnNldFg7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIERhdGFUYWJsZVN1bW1hcnlSb3dDb21wb25lbnQucHJvdG90eXBlLmlubmVyV2lkdGg7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIERhdGFUYWJsZVN1bW1hcnlSb3dDb21wb25lbnQucHJvdG90eXBlLl9pbnRlcm5hbENvbHVtbnM7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIERhdGFUYWJsZVN1bW1hcnlSb3dDb21wb25lbnQucHJvdG90eXBlLnN1bW1hcnlSb3c7XG59XG4iXX0=