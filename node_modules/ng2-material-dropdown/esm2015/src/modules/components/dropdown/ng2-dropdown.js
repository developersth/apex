import * as tslib_1 from "tslib";
import { HostListener, Component, ContentChild, Output, EventEmitter, Input } from '@angular/core';
import { Ng2DropdownButton } from '../button/ng2-dropdown-button';
import { Ng2DropdownMenu } from '../menu/ng2-dropdown-menu';
import { DropdownStateService } from '../../services/dropdown-state.service';
import * as ɵngcc0 from '@angular/core';

const _c0 = [[["ng2-dropdown-button"]], [["ng2-dropdown-menu"]]];
const _c1 = ["ng2-dropdown-button", "ng2-dropdown-menu"];
let Ng2Dropdown = class Ng2Dropdown {
    constructor(state) {
        this.state = state;
        this.dynamicUpdate = true;
        // outputs
        this.onItemClicked = new EventEmitter();
        this.onItemSelected = new EventEmitter();
        this.onShow = new EventEmitter();
        this.onHide = new EventEmitter();
    }
    ngOnInit() {
        this.state.dropdownState.onItemClicked.subscribe(item => {
            this.onItemClicked.emit(item);
            if (item.preventClose) {
                return;
            }
            this.hide.call(this);
        });
        if (this.button) {
            this.button.onMenuToggled.subscribe(() => {
                this.toggleMenu();
            });
        }
        this.state.dropdownState.onItemSelected.subscribe(item => {
            this.onItemSelected.emit(item);
        });
        this.state.dropdownState.onItemDestroyed.subscribe((item) => {
            let newSelectedItem;
            const items = this.menu.items.toArray();
            if (item !== this.state.dropdownState.selectedItem) {
                return;
            }
            if (this.menu.focusFirstElement) {
                newSelectedItem =
                    item === items[0] && items.length > 1
                        ? items[1]
                        : items[0];
            }
            this.state.dropdownState.select(newSelectedItem);
        });
    }
    /**
     * @name toggleMenu
     * @desc toggles menu visibility
     */
    toggleMenu(position = this.button.getPosition()) {
        this.state.menuState.isVisible ? this.hide() : this.show(position);
    }
    /**
     * - hides dropdown
     * @name hide
     */
    hide() {
        this.menu.hide();
        this.onHide.emit(this);
    }
    /**
     * - shows dropdown
     * @name show
     * @param position
     */
    show(position = this.button.getPosition()) {
        this.menu.show(position, this.dynamicUpdate);
        this.onShow.emit(this);
    }
    /**
     * @name scrollListener
     */
    scrollListener() {
        if (this.button && this.dynamicUpdate) {
            this.menu.updatePosition(this.button.getPosition(), true);
        }
    }
};
Ng2Dropdown.ɵfac = function Ng2Dropdown_Factory(t) { return new (t || Ng2Dropdown)(ɵngcc0.ɵɵdirectiveInject(DropdownStateService)); };
Ng2Dropdown.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: Ng2Dropdown, selectors: [["ng2-dropdown"]], contentQueries: function Ng2Dropdown_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, Ng2DropdownButton, true);
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, Ng2DropdownMenu, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.button = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.menu = _t.first);
    } }, hostBindings: function Ng2Dropdown_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("scroll", function Ng2Dropdown_scroll_HostBindingHandler($event) { return ctx.scrollListener(); }, false, ɵngcc0.ɵɵresolveWindow);
    } }, inputs: { dynamicUpdate: "dynamicUpdate" }, outputs: { onItemClicked: "onItemClicked", onItemSelected: "onItemSelected", onShow: "onShow", onHide: "onHide" }, features: [ɵngcc0.ɵɵProvidersFeature([DropdownStateService])], ngContentSelectors: _c1, decls: 3, vars: 0, consts: [[1, "ng2-dropdown-container"]], template: function Ng2Dropdown_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵprojection(2, 1);
        ɵngcc0.ɵɵelementEnd();
    } }, encapsulation: 2 });
Ng2Dropdown.ctorParameters = () => [
    { type: DropdownStateService }
];
tslib_1.__decorate([
    ContentChild(Ng2DropdownButton, { static: true })
], Ng2Dropdown.prototype, "button", void 0);
tslib_1.__decorate([
    ContentChild(Ng2DropdownMenu, { static: true })
], Ng2Dropdown.prototype, "menu", void 0);
tslib_1.__decorate([
    Input()
], Ng2Dropdown.prototype, "dynamicUpdate", void 0);
tslib_1.__decorate([
    Output()
], Ng2Dropdown.prototype, "onItemClicked", void 0);
tslib_1.__decorate([
    Output()
], Ng2Dropdown.prototype, "onItemSelected", void 0);
tslib_1.__decorate([
    Output()
], Ng2Dropdown.prototype, "onShow", void 0);
tslib_1.__decorate([
    Output()
], Ng2Dropdown.prototype, "onHide", void 0);
tslib_1.__decorate([
    HostListener('window:scroll')
], Ng2Dropdown.prototype, "scrollListener", null);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Ng2Dropdown, [{
        type: Component,
        args: [{
                selector: 'ng2-dropdown',
                template: `
        <div class="ng2-dropdown-container">
            <ng-content select="ng2-dropdown-button"></ng-content>
            <ng-content select="ng2-dropdown-menu"></ng-content>
        </div>
    `,
                providers: [DropdownStateService]
            }]
    }], function () { return [{ type: DropdownStateService }]; }, { dynamicUpdate: [{
            type: Input
        }], onItemClicked: [{
            type: Output
        }], onItemSelected: [{
            type: Output
        }], onShow: [{
            type: Output
        }], onHide: [{
            type: Output
        }], scrollListener: [{
            type: HostListener,
            args: ['window:scroll']
        }], button: [{
            type: ContentChild,
            args: [Ng2DropdownButton, { static: true }]
        }], menu: [{
            type: ContentChild,
            args: [Ng2DropdownMenu, { static: true }]
        }] }); })();
export { Ng2Dropdown };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvbmcyLW1hdGVyaWFsLWRyb3Bkb3duL2VzbTIwMTUvc3JjL21vZHVsZXMvY29tcG9uZW50cy9kcm9wZG93bi9uZzItZHJvcGRvd24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7NkJBeUVFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0RBMkJnRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBWWxDIiwiZmlsZSI6Im5nMi1kcm9wZG93bi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHRzbGliXzEgZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBIb3N0TGlzdGVuZXIsIENvbXBvbmVudCwgQ29udGVudENoaWxkLCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nMkRyb3Bkb3duQnV0dG9uIH0gZnJvbSAnLi4vYnV0dG9uL25nMi1kcm9wZG93bi1idXR0b24nO1xuaW1wb3J0IHsgTmcyRHJvcGRvd25NZW51IH0gZnJvbSAnLi4vbWVudS9uZzItZHJvcGRvd24tbWVudSc7XG5pbXBvcnQgeyBEcm9wZG93blN0YXRlU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2Ryb3Bkb3duLXN0YXRlLnNlcnZpY2UnO1xubGV0IE5nMkRyb3Bkb3duID0gY2xhc3MgTmcyRHJvcGRvd24ge1xuICAgIGNvbnN0cnVjdG9yKHN0YXRlKSB7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBzdGF0ZTtcbiAgICAgICAgdGhpcy5keW5hbWljVXBkYXRlID0gdHJ1ZTtcbiAgICAgICAgLy8gb3V0cHV0c1xuICAgICAgICB0aGlzLm9uSXRlbUNsaWNrZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMub25JdGVtU2VsZWN0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMub25TaG93ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLm9uSGlkZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICB9XG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuc3RhdGUuZHJvcGRvd25TdGF0ZS5vbkl0ZW1DbGlja2VkLnN1YnNjcmliZShpdGVtID0+IHtcbiAgICAgICAgICAgIHRoaXMub25JdGVtQ2xpY2tlZC5lbWl0KGl0ZW0pO1xuICAgICAgICAgICAgaWYgKGl0ZW0ucHJldmVudENsb3NlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5oaWRlLmNhbGwodGhpcyk7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAodGhpcy5idXR0b24pIHtcbiAgICAgICAgICAgIHRoaXMuYnV0dG9uLm9uTWVudVRvZ2dsZWQuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnRvZ2dsZU1lbnUoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc3RhdGUuZHJvcGRvd25TdGF0ZS5vbkl0ZW1TZWxlY3RlZC5zdWJzY3JpYmUoaXRlbSA9PiB7XG4gICAgICAgICAgICB0aGlzLm9uSXRlbVNlbGVjdGVkLmVtaXQoaXRlbSk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnN0YXRlLmRyb3Bkb3duU3RhdGUub25JdGVtRGVzdHJveWVkLnN1YnNjcmliZSgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgbGV0IG5ld1NlbGVjdGVkSXRlbTtcbiAgICAgICAgICAgIGNvbnN0IGl0ZW1zID0gdGhpcy5tZW51Lml0ZW1zLnRvQXJyYXkoKTtcbiAgICAgICAgICAgIGlmIChpdGVtICE9PSB0aGlzLnN0YXRlLmRyb3Bkb3duU3RhdGUuc2VsZWN0ZWRJdGVtKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMubWVudS5mb2N1c0ZpcnN0RWxlbWVudCkge1xuICAgICAgICAgICAgICAgIG5ld1NlbGVjdGVkSXRlbSA9XG4gICAgICAgICAgICAgICAgICAgIGl0ZW0gPT09IGl0ZW1zWzBdICYmIGl0ZW1zLmxlbmd0aCA+IDFcbiAgICAgICAgICAgICAgICAgICAgICAgID8gaXRlbXNbMV1cbiAgICAgICAgICAgICAgICAgICAgICAgIDogaXRlbXNbMF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnN0YXRlLmRyb3Bkb3duU3RhdGUuc2VsZWN0KG5ld1NlbGVjdGVkSXRlbSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAbmFtZSB0b2dnbGVNZW51XG4gICAgICogQGRlc2MgdG9nZ2xlcyBtZW51IHZpc2liaWxpdHlcbiAgICAgKi9cbiAgICB0b2dnbGVNZW51KHBvc2l0aW9uID0gdGhpcy5idXR0b24uZ2V0UG9zaXRpb24oKSkge1xuICAgICAgICB0aGlzLnN0YXRlLm1lbnVTdGF0ZS5pc1Zpc2libGUgPyB0aGlzLmhpZGUoKSA6IHRoaXMuc2hvdyhwb3NpdGlvbik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIC0gaGlkZXMgZHJvcGRvd25cbiAgICAgKiBAbmFtZSBoaWRlXG4gICAgICovXG4gICAgaGlkZSgpIHtcbiAgICAgICAgdGhpcy5tZW51LmhpZGUoKTtcbiAgICAgICAgdGhpcy5vbkhpZGUuZW1pdCh0aGlzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogLSBzaG93cyBkcm9wZG93blxuICAgICAqIEBuYW1lIHNob3dcbiAgICAgKiBAcGFyYW0gcG9zaXRpb25cbiAgICAgKi9cbiAgICBzaG93KHBvc2l0aW9uID0gdGhpcy5idXR0b24uZ2V0UG9zaXRpb24oKSkge1xuICAgICAgICB0aGlzLm1lbnUuc2hvdyhwb3NpdGlvbiwgdGhpcy5keW5hbWljVXBkYXRlKTtcbiAgICAgICAgdGhpcy5vblNob3cuZW1pdCh0aGlzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQG5hbWUgc2Nyb2xsTGlzdGVuZXJcbiAgICAgKi9cbiAgICBzY3JvbGxMaXN0ZW5lcigpIHtcbiAgICAgICAgaWYgKHRoaXMuYnV0dG9uICYmIHRoaXMuZHluYW1pY1VwZGF0ZSkge1xuICAgICAgICAgICAgdGhpcy5tZW51LnVwZGF0ZVBvc2l0aW9uKHRoaXMuYnV0dG9uLmdldFBvc2l0aW9uKCksIHRydWUpO1xuICAgICAgICB9XG4gICAgfVxufTtcbk5nMkRyb3Bkb3duLmN0b3JQYXJhbWV0ZXJzID0gKCkgPT4gW1xuICAgIHsgdHlwZTogRHJvcGRvd25TdGF0ZVNlcnZpY2UgfVxuXTtcbnRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgQ29udGVudENoaWxkKE5nMkRyb3Bkb3duQnV0dG9uLCB7IHN0YXRpYzogdHJ1ZSB9KVxuXSwgTmcyRHJvcGRvd24ucHJvdG90eXBlLCBcImJ1dHRvblwiLCB2b2lkIDApO1xudHNsaWJfMS5fX2RlY29yYXRlKFtcbiAgICBDb250ZW50Q2hpbGQoTmcyRHJvcGRvd25NZW51LCB7IHN0YXRpYzogdHJ1ZSB9KVxuXSwgTmcyRHJvcGRvd24ucHJvdG90eXBlLCBcIm1lbnVcIiwgdm9pZCAwKTtcbnRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgSW5wdXQoKVxuXSwgTmcyRHJvcGRvd24ucHJvdG90eXBlLCBcImR5bmFtaWNVcGRhdGVcIiwgdm9pZCAwKTtcbnRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KClcbl0sIE5nMkRyb3Bkb3duLnByb3RvdHlwZSwgXCJvbkl0ZW1DbGlja2VkXCIsIHZvaWQgMCk7XG50c2xpYl8xLl9fZGVjb3JhdGUoW1xuICAgIE91dHB1dCgpXG5dLCBOZzJEcm9wZG93bi5wcm90b3R5cGUsIFwib25JdGVtU2VsZWN0ZWRcIiwgdm9pZCAwKTtcbnRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KClcbl0sIE5nMkRyb3Bkb3duLnByb3RvdHlwZSwgXCJvblNob3dcIiwgdm9pZCAwKTtcbnRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgT3V0cHV0KClcbl0sIE5nMkRyb3Bkb3duLnByb3RvdHlwZSwgXCJvbkhpZGVcIiwgdm9pZCAwKTtcbnRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgSG9zdExpc3RlbmVyKCd3aW5kb3c6c2Nyb2xsJylcbl0sIE5nMkRyb3Bkb3duLnByb3RvdHlwZSwgXCJzY3JvbGxMaXN0ZW5lclwiLCBudWxsKTtcbk5nMkRyb3Bkb3duID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcbiAgICBDb21wb25lbnQoe1xuICAgICAgICBzZWxlY3RvcjogJ25nMi1kcm9wZG93bicsXG4gICAgICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxkaXYgY2xhc3M9XCJuZzItZHJvcGRvd24tY29udGFpbmVyXCI+XG4gICAgICAgICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJuZzItZHJvcGRvd24tYnV0dG9uXCI+PC9uZy1jb250ZW50PlxuICAgICAgICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwibmcyLWRyb3Bkb3duLW1lbnVcIj48L25nLWNvbnRlbnQ+XG4gICAgICAgIDwvZGl2PlxuICAgIGAsXG4gICAgICAgIHByb3ZpZGVyczogW0Ryb3Bkb3duU3RhdGVTZXJ2aWNlXVxuICAgIH0pXG5dLCBOZzJEcm9wZG93bik7XG5leHBvcnQgeyBOZzJEcm9wZG93biB9O1xuIl19