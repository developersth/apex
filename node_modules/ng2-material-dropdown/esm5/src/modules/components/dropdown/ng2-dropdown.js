import * as tslib_1 from "tslib";
import { HostListener, Component, ContentChild, Output, EventEmitter, Input } from '@angular/core';
import { Ng2DropdownButton } from '../button/ng2-dropdown-button';
import { Ng2DropdownMenu } from '../menu/ng2-dropdown-menu';
import { DropdownStateService } from '../../services/dropdown-state.service';
import * as ɵngcc0 from '@angular/core';

var _c0 = [[["ng2-dropdown-button"]], [["ng2-dropdown-menu"]]];
var _c1 = ["ng2-dropdown-button", "ng2-dropdown-menu"];
var Ng2Dropdown = /** @class */ (function () {
    function Ng2Dropdown(state) {
        this.state = state;
        this.dynamicUpdate = true;
        // outputs
        this.onItemClicked = new EventEmitter();
        this.onItemSelected = new EventEmitter();
        this.onShow = new EventEmitter();
        this.onHide = new EventEmitter();
    }
    Ng2Dropdown.prototype.ngOnInit = function () {
        var _this = this;
        this.state.dropdownState.onItemClicked.subscribe(function (item) {
            _this.onItemClicked.emit(item);
            if (item.preventClose) {
                return;
            }
            _this.hide.call(_this);
        });
        if (this.button) {
            this.button.onMenuToggled.subscribe(function () {
                _this.toggleMenu();
            });
        }
        this.state.dropdownState.onItemSelected.subscribe(function (item) {
            _this.onItemSelected.emit(item);
        });
        this.state.dropdownState.onItemDestroyed.subscribe(function (item) {
            var newSelectedItem;
            var items = _this.menu.items.toArray();
            if (item !== _this.state.dropdownState.selectedItem) {
                return;
            }
            if (_this.menu.focusFirstElement) {
                newSelectedItem =
                    item === items[0] && items.length > 1
                        ? items[1]
                        : items[0];
            }
            _this.state.dropdownState.select(newSelectedItem);
        });
    };
    /**
     * @name toggleMenu
     * @desc toggles menu visibility
     */
    Ng2Dropdown.prototype.toggleMenu = function (position) {
        if (position === void 0) { position = this.button.getPosition(); }
        this.state.menuState.isVisible ? this.hide() : this.show(position);
    };
    /**
     * - hides dropdown
     * @name hide
     */
    Ng2Dropdown.prototype.hide = function () {
        this.menu.hide();
        this.onHide.emit(this);
    };
    /**
     * - shows dropdown
     * @name show
     * @param position
     */
    Ng2Dropdown.prototype.show = function (position) {
        if (position === void 0) { position = this.button.getPosition(); }
        this.menu.show(position, this.dynamicUpdate);
        this.onShow.emit(this);
    };
    /**
     * @name scrollListener
     */
    Ng2Dropdown.prototype.scrollListener = function () {
        if (this.button && this.dynamicUpdate) {
            this.menu.updatePosition(this.button.getPosition(), true);
        }
    };
    Ng2Dropdown.ctorParameters = function () { return [
        { type: DropdownStateService }
    ]; };
    tslib_1.__decorate([
        ContentChild(Ng2DropdownButton, { static: true })
    ], Ng2Dropdown.prototype, "button", void 0);
    tslib_1.__decorate([
        ContentChild(Ng2DropdownMenu, { static: true })
    ], Ng2Dropdown.prototype, "menu", void 0);
    tslib_1.__decorate([
        Input()
    ], Ng2Dropdown.prototype, "dynamicUpdate", void 0);
    tslib_1.__decorate([
        Output()
    ], Ng2Dropdown.prototype, "onItemClicked", void 0);
    tslib_1.__decorate([
        Output()
    ], Ng2Dropdown.prototype, "onItemSelected", void 0);
    tslib_1.__decorate([
        Output()
    ], Ng2Dropdown.prototype, "onShow", void 0);
    tslib_1.__decorate([
        Output()
    ], Ng2Dropdown.prototype, "onHide", void 0);
    tslib_1.__decorate([
        HostListener('window:scroll')
    ], Ng2Dropdown.prototype, "scrollListener", null);
Ng2Dropdown.ɵfac = function Ng2Dropdown_Factory(t) { return new (t || Ng2Dropdown)(ɵngcc0.ɵɵdirectiveInject(DropdownStateService)); };
Ng2Dropdown.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: Ng2Dropdown, selectors: [["ng2-dropdown"]], contentQueries: function Ng2Dropdown_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, Ng2DropdownButton, true);
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, Ng2DropdownMenu, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.button = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.menu = _t.first);
    } }, hostBindings: function Ng2Dropdown_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("scroll", function Ng2Dropdown_scroll_HostBindingHandler($event) { return ctx.scrollListener(); }, false, ɵngcc0.ɵɵresolveWindow);
    } }, inputs: { dynamicUpdate: "dynamicUpdate" }, outputs: { onItemClicked: "onItemClicked", onItemSelected: "onItemSelected", onShow: "onShow", onHide: "onHide" }, features: [ɵngcc0.ɵɵProvidersFeature([DropdownStateService])], ngContentSelectors: _c1, decls: 3, vars: 0, consts: [[1, "ng2-dropdown-container"]], template: function Ng2Dropdown_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵprojection(2, 1);
        ɵngcc0.ɵɵelementEnd();
    } }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Ng2Dropdown, [{
        type: Component,
        args: [{
                selector: 'ng2-dropdown',
                template: "\n        <div class=\"ng2-dropdown-container\">\n            <ng-content select=\"ng2-dropdown-button\"></ng-content>\n            <ng-content select=\"ng2-dropdown-menu\"></ng-content>\n        </div>\n    ",
                providers: [DropdownStateService]
            }]
    }], function () { return [{ type: DropdownStateService }]; }, { dynamicUpdate: [{
            type: Input
        }], onItemClicked: [{
            type: Output
        }], onItemSelected: [{
            type: Output
        }], onShow: [{
            type: Output
        }], onHide: [{
            type: Output
        }], scrollListener: [{
            type: HostListener,
            args: ['window:scroll']
        }], button: [{
            type: ContentChild,
            args: [Ng2DropdownButton, { static: true }]
        }], menu: [{
            type: ContentChild,
            args: [Ng2DropdownMenu, { static: true }]
        }] }); })();
    return Ng2Dropdown;
}());
export { Ng2Dropdown };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvbmcyLW1hdGVyaWFsLWRyb3Bkb3duL2VzbTUvc3JjL21vZHVsZXMvY29tcG9uZW50cy9kcm9wZG93bi9uZzItZHJvcGRvd24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7c0RBc0dzRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBT2xDIiwiZmlsZSI6Im5nMi1kcm9wZG93bi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHRzbGliXzEgZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBIb3N0TGlzdGVuZXIsIENvbXBvbmVudCwgQ29udGVudENoaWxkLCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nMkRyb3Bkb3duQnV0dG9uIH0gZnJvbSAnLi4vYnV0dG9uL25nMi1kcm9wZG93bi1idXR0b24nO1xuaW1wb3J0IHsgTmcyRHJvcGRvd25NZW51IH0gZnJvbSAnLi4vbWVudS9uZzItZHJvcGRvd24tbWVudSc7XG5pbXBvcnQgeyBEcm9wZG93blN0YXRlU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2Ryb3Bkb3duLXN0YXRlLnNlcnZpY2UnO1xudmFyIE5nMkRyb3Bkb3duID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE5nMkRyb3Bkb3duKHN0YXRlKSB7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBzdGF0ZTtcbiAgICAgICAgdGhpcy5keW5hbWljVXBkYXRlID0gdHJ1ZTtcbiAgICAgICAgLy8gb3V0cHV0c1xuICAgICAgICB0aGlzLm9uSXRlbUNsaWNrZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMub25JdGVtU2VsZWN0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMub25TaG93ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLm9uSGlkZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICB9XG4gICAgTmcyRHJvcGRvd24ucHJvdG90eXBlLm5nT25Jbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB0aGlzLnN0YXRlLmRyb3Bkb3duU3RhdGUub25JdGVtQ2xpY2tlZC5zdWJzY3JpYmUoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgIF90aGlzLm9uSXRlbUNsaWNrZWQuZW1pdChpdGVtKTtcbiAgICAgICAgICAgIGlmIChpdGVtLnByZXZlbnRDbG9zZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF90aGlzLmhpZGUuY2FsbChfdGhpcyk7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAodGhpcy5idXR0b24pIHtcbiAgICAgICAgICAgIHRoaXMuYnV0dG9uLm9uTWVudVRvZ2dsZWQuc3Vic2NyaWJlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy50b2dnbGVNZW51KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnN0YXRlLmRyb3Bkb3duU3RhdGUub25JdGVtU2VsZWN0ZWQuc3Vic2NyaWJlKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICBfdGhpcy5vbkl0ZW1TZWxlY3RlZC5lbWl0KGl0ZW0pO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5zdGF0ZS5kcm9wZG93blN0YXRlLm9uSXRlbURlc3Ryb3llZC5zdWJzY3JpYmUoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgIHZhciBuZXdTZWxlY3RlZEl0ZW07XG4gICAgICAgICAgICB2YXIgaXRlbXMgPSBfdGhpcy5tZW51Lml0ZW1zLnRvQXJyYXkoKTtcbiAgICAgICAgICAgIGlmIChpdGVtICE9PSBfdGhpcy5zdGF0ZS5kcm9wZG93blN0YXRlLnNlbGVjdGVkSXRlbSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChfdGhpcy5tZW51LmZvY3VzRmlyc3RFbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgbmV3U2VsZWN0ZWRJdGVtID1cbiAgICAgICAgICAgICAgICAgICAgaXRlbSA9PT0gaXRlbXNbMF0gJiYgaXRlbXMubGVuZ3RoID4gMVxuICAgICAgICAgICAgICAgICAgICAgICAgPyBpdGVtc1sxXVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBpdGVtc1swXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF90aGlzLnN0YXRlLmRyb3Bkb3duU3RhdGUuc2VsZWN0KG5ld1NlbGVjdGVkSXRlbSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQG5hbWUgdG9nZ2xlTWVudVxuICAgICAqIEBkZXNjIHRvZ2dsZXMgbWVudSB2aXNpYmlsaXR5XG4gICAgICovXG4gICAgTmcyRHJvcGRvd24ucHJvdG90eXBlLnRvZ2dsZU1lbnUgPSBmdW5jdGlvbiAocG9zaXRpb24pIHtcbiAgICAgICAgaWYgKHBvc2l0aW9uID09PSB2b2lkIDApIHsgcG9zaXRpb24gPSB0aGlzLmJ1dHRvbi5nZXRQb3NpdGlvbigpOyB9XG4gICAgICAgIHRoaXMuc3RhdGUubWVudVN0YXRlLmlzVmlzaWJsZSA/IHRoaXMuaGlkZSgpIDogdGhpcy5zaG93KHBvc2l0aW9uKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIC0gaGlkZXMgZHJvcGRvd25cbiAgICAgKiBAbmFtZSBoaWRlXG4gICAgICovXG4gICAgTmcyRHJvcGRvd24ucHJvdG90eXBlLmhpZGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMubWVudS5oaWRlKCk7XG4gICAgICAgIHRoaXMub25IaWRlLmVtaXQodGhpcyk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiAtIHNob3dzIGRyb3Bkb3duXG4gICAgICogQG5hbWUgc2hvd1xuICAgICAqIEBwYXJhbSBwb3NpdGlvblxuICAgICAqL1xuICAgIE5nMkRyb3Bkb3duLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICAgIGlmIChwb3NpdGlvbiA9PT0gdm9pZCAwKSB7IHBvc2l0aW9uID0gdGhpcy5idXR0b24uZ2V0UG9zaXRpb24oKTsgfVxuICAgICAgICB0aGlzLm1lbnUuc2hvdyhwb3NpdGlvbiwgdGhpcy5keW5hbWljVXBkYXRlKTtcbiAgICAgICAgdGhpcy5vblNob3cuZW1pdCh0aGlzKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEBuYW1lIHNjcm9sbExpc3RlbmVyXG4gICAgICovXG4gICAgTmcyRHJvcGRvd24ucHJvdG90eXBlLnNjcm9sbExpc3RlbmVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5idXR0b24gJiYgdGhpcy5keW5hbWljVXBkYXRlKSB7XG4gICAgICAgICAgICB0aGlzLm1lbnUudXBkYXRlUG9zaXRpb24odGhpcy5idXR0b24uZ2V0UG9zaXRpb24oKSwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIE5nMkRyb3Bkb3duLmN0b3JQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gW1xuICAgICAgICB7IHR5cGU6IERyb3Bkb3duU3RhdGVTZXJ2aWNlIH1cbiAgICBdOyB9O1xuICAgIHRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgICAgIENvbnRlbnRDaGlsZChOZzJEcm9wZG93bkJ1dHRvbiwgeyBzdGF0aWM6IHRydWUgfSlcbiAgICBdLCBOZzJEcm9wZG93bi5wcm90b3R5cGUsIFwiYnV0dG9uXCIsIHZvaWQgMCk7XG4gICAgdHNsaWJfMS5fX2RlY29yYXRlKFtcbiAgICAgICAgQ29udGVudENoaWxkKE5nMkRyb3Bkb3duTWVudSwgeyBzdGF0aWM6IHRydWUgfSlcbiAgICBdLCBOZzJEcm9wZG93bi5wcm90b3R5cGUsIFwibWVudVwiLCB2b2lkIDApO1xuICAgIHRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KClcbiAgICBdLCBOZzJEcm9wZG93bi5wcm90b3R5cGUsIFwiZHluYW1pY1VwZGF0ZVwiLCB2b2lkIDApO1xuICAgIHRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgICAgIE91dHB1dCgpXG4gICAgXSwgTmcyRHJvcGRvd24ucHJvdG90eXBlLCBcIm9uSXRlbUNsaWNrZWRcIiwgdm9pZCAwKTtcbiAgICB0c2xpYl8xLl9fZGVjb3JhdGUoW1xuICAgICAgICBPdXRwdXQoKVxuICAgIF0sIE5nMkRyb3Bkb3duLnByb3RvdHlwZSwgXCJvbkl0ZW1TZWxlY3RlZFwiLCB2b2lkIDApO1xuICAgIHRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgICAgIE91dHB1dCgpXG4gICAgXSwgTmcyRHJvcGRvd24ucHJvdG90eXBlLCBcIm9uU2hvd1wiLCB2b2lkIDApO1xuICAgIHRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgICAgIE91dHB1dCgpXG4gICAgXSwgTmcyRHJvcGRvd24ucHJvdG90eXBlLCBcIm9uSGlkZVwiLCB2b2lkIDApO1xuICAgIHRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgICAgIEhvc3RMaXN0ZW5lcignd2luZG93OnNjcm9sbCcpXG4gICAgXSwgTmcyRHJvcGRvd24ucHJvdG90eXBlLCBcInNjcm9sbExpc3RlbmVyXCIsIG51bGwpO1xuICAgIE5nMkRyb3Bkb3duID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcbiAgICAgICAgQ29tcG9uZW50KHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiAnbmcyLWRyb3Bkb3duJyxcbiAgICAgICAgICAgIHRlbXBsYXRlOiBcIlxcbiAgICAgICAgPGRpdiBjbGFzcz1cXFwibmcyLWRyb3Bkb3duLWNvbnRhaW5lclxcXCI+XFxuICAgICAgICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVxcXCJuZzItZHJvcGRvd24tYnV0dG9uXFxcIj48L25nLWNvbnRlbnQ+XFxuICAgICAgICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVxcXCJuZzItZHJvcGRvd24tbWVudVxcXCI+PC9uZy1jb250ZW50PlxcbiAgICAgICAgPC9kaXY+XFxuICAgIFwiLFxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbRHJvcGRvd25TdGF0ZVNlcnZpY2VdXG4gICAgICAgIH0pXG4gICAgXSwgTmcyRHJvcGRvd24pO1xuICAgIHJldHVybiBOZzJEcm9wZG93bjtcbn0oKSk7XG5leHBvcnQgeyBOZzJEcm9wZG93biB9O1xuIl19