import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
let VgUtils = class VgUtils {
    /**
     * Inspired by Paul Irish
     * https://gist.github.com/paulirish/211209
     * @returns z-Index
     */
    static getZIndex() {
        let zIndex = 1;
        let elementZIndex;
        const tags = document.getElementsByTagName('*');
        for (let i = 0, l = tags.length; i < l; i++) {
            elementZIndex = parseInt(window.getComputedStyle(tags[i])['z-index'], 10);
            if (elementZIndex > zIndex) {
                zIndex = elementZIndex + 1;
            }
        }
        return zIndex;
    }
    // Very simple mobile detection, not 100% reliable
    static isMobileDevice() {
        return (typeof window.orientation !== 'undefined') || (navigator.userAgent.indexOf('IEMobile') !== -1);
    }
    static isiOSDevice() {
        return (navigator.userAgent.match(/ip(hone|ad|od)/i) && !navigator.userAgent.match(/(iemobile)[\/\s]?([\w\.]*)/i));
    }
    static isCordova() {
        return document.URL.indexOf('http://') === -1 && document.URL.indexOf('https://') === -1;
    }
};
VgUtils.ɵfac = function VgUtils_Factory(t) { return new (t || VgUtils)(); };
VgUtils.ɵprov = i0.ɵɵdefineInjectable({ factory: function VgUtils_Factory() { return new VgUtils(); }, token: VgUtils, providedIn: "root" });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgUtils, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], null, null); })();
export { VgUtils };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvbmd4LXZpZGVvZ3VsYXIvZXNtMjAxNS9saWIvY29yZS9zZXJ2aWNlcy92Zy11dGlscy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0RUE0QkU7NklBQzJJOzs7Ozs7MEJBS2pJIiwiZmlsZSI6InZnLXV0aWxzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMgaTAgZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmxldCBWZ1V0aWxzID0gY2xhc3MgVmdVdGlscyB7XG4gICAgLyoqXG4gICAgICogSW5zcGlyZWQgYnkgUGF1bCBJcmlzaFxuICAgICAqIGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL3BhdWxpcmlzaC8yMTEyMDlcbiAgICAgKiBAcmV0dXJucyB6LUluZGV4XG4gICAgICovXG4gICAgc3RhdGljIGdldFpJbmRleCgpIHtcbiAgICAgICAgbGV0IHpJbmRleCA9IDE7XG4gICAgICAgIGxldCBlbGVtZW50WkluZGV4O1xuICAgICAgICBjb25zdCB0YWdzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJyonKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDAsIGwgPSB0YWdzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgZWxlbWVudFpJbmRleCA9IHBhcnNlSW50KHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRhZ3NbaV0pWyd6LWluZGV4J10sIDEwKTtcbiAgICAgICAgICAgIGlmIChlbGVtZW50WkluZGV4ID4gekluZGV4KSB7XG4gICAgICAgICAgICAgICAgekluZGV4ID0gZWxlbWVudFpJbmRleCArIDE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHpJbmRleDtcbiAgICB9XG4gICAgLy8gVmVyeSBzaW1wbGUgbW9iaWxlIGRldGVjdGlvbiwgbm90IDEwMCUgcmVsaWFibGVcbiAgICBzdGF0aWMgaXNNb2JpbGVEZXZpY2UoKSB7XG4gICAgICAgIHJldHVybiAodHlwZW9mIHdpbmRvdy5vcmllbnRhdGlvbiAhPT0gJ3VuZGVmaW5lZCcpIHx8IChuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0lFTW9iaWxlJykgIT09IC0xKTtcbiAgICB9XG4gICAgc3RhdGljIGlzaU9TRGV2aWNlKCkge1xuICAgICAgICByZXR1cm4gKG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL2lwKGhvbmV8YWR8b2QpL2kpICYmICFuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC8oaWVtb2JpbGUpW1xcL1xcc10/KFtcXHdcXC5dKikvaSkpO1xuICAgIH1cbiAgICBzdGF0aWMgaXNDb3Jkb3ZhKCkge1xuICAgICAgICByZXR1cm4gZG9jdW1lbnQuVVJMLmluZGV4T2YoJ2h0dHA6Ly8nKSA9PT0gLTEgJiYgZG9jdW1lbnQuVVJMLmluZGV4T2YoJ2h0dHBzOi8vJykgPT09IC0xO1xuICAgIH1cbn07XG5WZ1V0aWxzLsm1cHJvdiA9IGkwLsm1ybVkZWZpbmVJbmplY3RhYmxlKHsgZmFjdG9yeTogZnVuY3Rpb24gVmdVdGlsc19GYWN0b3J5KCkgeyByZXR1cm4gbmV3IFZnVXRpbHMoKTsgfSwgdG9rZW46IFZnVXRpbHMsIHByb3ZpZGVkSW46IFwicm9vdFwiIH0pO1xuVmdVdGlscyA9IF9fZGVjb3JhdGUoW1xuICAgIEluamVjdGFibGUoe1xuICAgICAgICBwcm92aWRlZEluOiAncm9vdCdcbiAgICB9KVxuXSwgVmdVdGlscyk7XG5leHBvcnQgeyBWZ1V0aWxzIH07XG4iXX0=