import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { VgControls } from './vg-controls';
import { VgFullscreen } from './vg-fullscreen/vg-fullscreen';
import { VgMute } from './vg-mute/vg-mute';
import { VgVolume } from './vg-volume/vg-volume';
import { VgPlayPause } from './vg-play-pause/vg-play-pause';
import { VgPlaybackButton } from './vg-playback-button/vg-playback-button';
import { VgScrubBar } from './vg-scrub-bar/vg-scrub-bar';
import { VgScrubBarBufferingTime } from './vg-scrub-bar/vg-scrub-bar-buffering-time/vg-scrub-bar-buffering-time';
import { VgScrubBarCuePoints } from './vg-scrub-bar/vg-scrub-bar-cue-points/vg-scrub-bar-cue-points';
import { VgScrubBarCurrentTime } from './vg-scrub-bar/vg-scrub-bar-current-time/vg-scrub-bar-current-time';
import { VgTimeDisplay, VgUtcPipe } from './vg-time-display/vg-time-display';
import { VgTrackSelector } from './vg-track-selector/vg-track-selector';
import { VgControlsHidden } from '../core/services/vg-controls-hidden';
import { VgQualitySelector } from './vg-quality-selector/vg-quality-selector';
import * as ɵngcc0 from '@angular/core';
let VgControlsModule = class VgControlsModule {
};
VgControlsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: VgControlsModule });
VgControlsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function VgControlsModule_Factory(t) { return new (t || VgControlsModule)(); }, providers: [VgControlsHidden], imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(VgControlsModule, { declarations: function () { return [VgControls,
        VgFullscreen,
        VgMute,
        VgVolume,
        VgPlayPause,
        VgPlaybackButton,
        VgScrubBar,
        VgScrubBarBufferingTime,
        VgScrubBarCuePoints,
        VgScrubBarCurrentTime,
        VgTimeDisplay,
        VgUtcPipe,
        VgTrackSelector,
        VgQualitySelector]; }, imports: function () { return [CommonModule]; }, exports: function () { return [VgControls,
        VgFullscreen,
        VgMute,
        VgVolume,
        VgPlayPause,
        VgPlaybackButton,
        VgScrubBar,
        VgScrubBarBufferingTime,
        VgScrubBarCuePoints,
        VgScrubBarCurrentTime,
        VgTimeDisplay,
        VgUtcPipe,
        VgTrackSelector,
        VgQualitySelector]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgControlsModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [
                    VgControls,
                    VgFullscreen,
                    VgMute,
                    VgVolume,
                    VgPlayPause,
                    VgPlaybackButton,
                    VgScrubBar,
                    VgScrubBarBufferingTime,
                    VgScrubBarCuePoints,
                    VgScrubBarCurrentTime,
                    VgTimeDisplay,
                    VgUtcPipe,
                    VgTrackSelector,
                    VgQualitySelector
                ],
                exports: [
                    VgControls,
                    VgFullscreen,
                    VgMute,
                    VgVolume,
                    VgPlayPause,
                    VgPlaybackButton,
                    VgScrubBar,
                    VgScrubBarBufferingTime,
                    VgScrubBarCuePoints,
                    VgScrubBarCurrentTime,
                    VgTimeDisplay,
                    VgUtcPipe,
                    VgTrackSelector,
                    VgQualitySelector
                ],
                providers: [VgControlsHidden]
            }]
    }], null, null); })();
export { VgControlsModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvbmd4LXZpZGVvZ3VsYXIvZXNtMjAxNS9saWIvY29udHJvbHMvdmctY29udHJvbHMubW9kdWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkE7OztFQUNFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBc0NtQiIsImZpbGUiOiJ2Zy1jb250cm9scy5tb2R1bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2RlY29yYXRlIH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFZnQ29udHJvbHMgfSBmcm9tICcuL3ZnLWNvbnRyb2xzJztcbmltcG9ydCB7IFZnRnVsbHNjcmVlbiB9IGZyb20gJy4vdmctZnVsbHNjcmVlbi92Zy1mdWxsc2NyZWVuJztcbmltcG9ydCB7IFZnTXV0ZSB9IGZyb20gJy4vdmctbXV0ZS92Zy1tdXRlJztcbmltcG9ydCB7IFZnVm9sdW1lIH0gZnJvbSAnLi92Zy12b2x1bWUvdmctdm9sdW1lJztcbmltcG9ydCB7IFZnUGxheVBhdXNlIH0gZnJvbSAnLi92Zy1wbGF5LXBhdXNlL3ZnLXBsYXktcGF1c2UnO1xuaW1wb3J0IHsgVmdQbGF5YmFja0J1dHRvbiB9IGZyb20gJy4vdmctcGxheWJhY2stYnV0dG9uL3ZnLXBsYXliYWNrLWJ1dHRvbic7XG5pbXBvcnQgeyBWZ1NjcnViQmFyIH0gZnJvbSAnLi92Zy1zY3J1Yi1iYXIvdmctc2NydWItYmFyJztcbmltcG9ydCB7IFZnU2NydWJCYXJCdWZmZXJpbmdUaW1lIH0gZnJvbSAnLi92Zy1zY3J1Yi1iYXIvdmctc2NydWItYmFyLWJ1ZmZlcmluZy10aW1lL3ZnLXNjcnViLWJhci1idWZmZXJpbmctdGltZSc7XG5pbXBvcnQgeyBWZ1NjcnViQmFyQ3VlUG9pbnRzIH0gZnJvbSAnLi92Zy1zY3J1Yi1iYXIvdmctc2NydWItYmFyLWN1ZS1wb2ludHMvdmctc2NydWItYmFyLWN1ZS1wb2ludHMnO1xuaW1wb3J0IHsgVmdTY3J1YkJhckN1cnJlbnRUaW1lIH0gZnJvbSAnLi92Zy1zY3J1Yi1iYXIvdmctc2NydWItYmFyLWN1cnJlbnQtdGltZS92Zy1zY3J1Yi1iYXItY3VycmVudC10aW1lJztcbmltcG9ydCB7IFZnVGltZURpc3BsYXksIFZnVXRjUGlwZSB9IGZyb20gJy4vdmctdGltZS1kaXNwbGF5L3ZnLXRpbWUtZGlzcGxheSc7XG5pbXBvcnQgeyBWZ1RyYWNrU2VsZWN0b3IgfSBmcm9tICcuL3ZnLXRyYWNrLXNlbGVjdG9yL3ZnLXRyYWNrLXNlbGVjdG9yJztcbmltcG9ydCB7IFZnQ29udHJvbHNIaWRkZW4gfSBmcm9tICcuLi9jb3JlL3NlcnZpY2VzL3ZnLWNvbnRyb2xzLWhpZGRlbic7XG5pbXBvcnQgeyBWZ1F1YWxpdHlTZWxlY3RvciB9IGZyb20gJy4vdmctcXVhbGl0eS1zZWxlY3Rvci92Zy1xdWFsaXR5LXNlbGVjdG9yJztcbmxldCBWZ0NvbnRyb2xzTW9kdWxlID0gY2xhc3MgVmdDb250cm9sc01vZHVsZSB7XG59O1xuVmdDb250cm9sc01vZHVsZSA9IF9fZGVjb3JhdGUoW1xuICAgIE5nTW9kdWxlKHtcbiAgICAgICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZV0sXG4gICAgICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICAgICAgVmdDb250cm9scyxcbiAgICAgICAgICAgIFZnRnVsbHNjcmVlbixcbiAgICAgICAgICAgIFZnTXV0ZSxcbiAgICAgICAgICAgIFZnVm9sdW1lLFxuICAgICAgICAgICAgVmdQbGF5UGF1c2UsXG4gICAgICAgICAgICBWZ1BsYXliYWNrQnV0dG9uLFxuICAgICAgICAgICAgVmdTY3J1YkJhcixcbiAgICAgICAgICAgIFZnU2NydWJCYXJCdWZmZXJpbmdUaW1lLFxuICAgICAgICAgICAgVmdTY3J1YkJhckN1ZVBvaW50cyxcbiAgICAgICAgICAgIFZnU2NydWJCYXJDdXJyZW50VGltZSxcbiAgICAgICAgICAgIFZnVGltZURpc3BsYXksXG4gICAgICAgICAgICBWZ1V0Y1BpcGUsXG4gICAgICAgICAgICBWZ1RyYWNrU2VsZWN0b3IsXG4gICAgICAgICAgICBWZ1F1YWxpdHlTZWxlY3RvclxuICAgICAgICBdLFxuICAgICAgICBleHBvcnRzOiBbXG4gICAgICAgICAgICBWZ0NvbnRyb2xzLFxuICAgICAgICAgICAgVmdGdWxsc2NyZWVuLFxuICAgICAgICAgICAgVmdNdXRlLFxuICAgICAgICAgICAgVmdWb2x1bWUsXG4gICAgICAgICAgICBWZ1BsYXlQYXVzZSxcbiAgICAgICAgICAgIFZnUGxheWJhY2tCdXR0b24sXG4gICAgICAgICAgICBWZ1NjcnViQmFyLFxuICAgICAgICAgICAgVmdTY3J1YkJhckJ1ZmZlcmluZ1RpbWUsXG4gICAgICAgICAgICBWZ1NjcnViQmFyQ3VlUG9pbnRzLFxuICAgICAgICAgICAgVmdTY3J1YkJhckN1cnJlbnRUaW1lLFxuICAgICAgICAgICAgVmdUaW1lRGlzcGxheSxcbiAgICAgICAgICAgIFZnVXRjUGlwZSxcbiAgICAgICAgICAgIFZnVHJhY2tTZWxlY3RvcixcbiAgICAgICAgICAgIFZnUXVhbGl0eVNlbGVjdG9yXG4gICAgICAgIF0sXG4gICAgICAgIHByb3ZpZGVyczogW1ZnQ29udHJvbHNIaWRkZW5dXG4gICAgfSlcbl0sIFZnQ29udHJvbHNNb2R1bGUpO1xuZXhwb3J0IHsgVmdDb250cm9sc01vZHVsZSB9O1xuIl19