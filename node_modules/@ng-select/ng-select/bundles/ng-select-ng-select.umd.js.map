{"version":3,"sources":["/Users/macpro/kritsadee/SVN/Cybersoft/apex/node_modules/@ng-select/ng-select/bundles/ng-select-ng-select.umd.js"],"names":[],"mappings":"AAAA;+HAC2E;mHACM;sEAC3C;iCACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAiD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAsR1D,AAGA;;;;;;;;;;;;;;;;;;oBAQA;;;;;;;;;;;;;;;;;SAiBD,AAGC;;;;;;;;;;4EAIG;;;;;;;;;;SAUJ,AAGC;;;;;;;;;;4EAIG;;;;;;;;;;SAUJ,AAGC;;;;;;;;;;4EAIG;;;;;;;;;;SAUJ,AAGC;;;;;;;;;;4EAIG;;;;;;;;;;SAUJ,AAGC;;;;;;;;;;4EAIG;;;;;;;;;;SAUJ,AAGC;;;;;;;;;;4EAIG;;;;;;;;;;SAUJ,AAGC;;;;;;;;;;4EAIG;;;;;;;;;;SAUJ,AAGC;;;;;;;;;;4EAIG;;;;;;;;;;SAUJ,AAGC;;;;;;;;;;4EAIG;;;;;;;;;;SAUJ,AAGC;;;;;;;;;;4EAIG;;;;;;;;;;SAUJ,AAGC;;;;;;;;;;4EAIG;;;;;;;;;;;;;;;;;;;;;;;;;UAyBH,AAGA;;;;;;;gDACsu6DtmnBA,AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBA2BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UA4MA,AAOA;;;;;;;;;;;;;;;;;;;;;;;;;oBAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAoCD,AAGC;;;;;;;gDACso4CtM,AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAssfD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gDA0CC","file":"ng-select-ng-select.umd.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('rxjs/operators'), require('rxjs'), require('@angular/common')) :\n    typeof define === 'function' && define.amd ? define('@ng-select/ng-select', ['exports', '@angular/core', '@angular/forms', 'rxjs/operators', 'rxjs', '@angular/common'], factory) :\n    (global = global || self, factory((global['ng-select'] = global['ng-select'] || {}, global['ng-select']['ng-select'] = {}), global.ng.core, global.ng.forms, global.rxjs.operators, global.rxjs, global.ng.common));\n}(this, (function (exports, core, forms, operators, rxjs, common) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n     */\n    /** @type {?} */\n    var unescapedHTMLExp = /[&<>\"']/g;\n    /** @type {?} */\n    var hasUnescapedHTMLExp = RegExp(unescapedHTMLExp.source);\n    /** @type {?} */\n    var htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        '\\'': '&#39;'\n    };\n    /**\n     * @param {?} string\n     * @return {?}\n     */\n    function escapeHTML(string) {\n        return (string && hasUnescapedHTMLExp.test(string)) ?\n            string.replace(unescapedHTMLExp, (/**\n             * @param {?} chr\n             * @return {?}\n             */\n            function (chr) { return htmlEscapes[chr]; })) :\n            string;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function isDefined(value) {\n        return value !== undefined && value !== null;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function isObject(value) {\n        return typeof value === 'object' && isDefined(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function isPromise(value) {\n        return value instanceof Promise;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function isFunction(value) {\n        return value instanceof Function;\n    }\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n     */\n    var NgItemLabelDirective = /** @class */ (function () {\n        function NgItemLabelDirective(element) {\n            this.element = element;\n            this.escape = true;\n        }\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgItemLabelDirective.prototype.ngOnChanges = /**\n         * @param {?} changes\n         * @return {?}\n         */\n        function (changes) {\n            this.element.nativeElement.innerHTML = this.escape ?\n                escapeHTML(this.ngItemLabel) :\n                this.ngItemLabel;\n        };\n        NgItemLabelDirective.decorators = [\n            { type: core.Directive, args: [{ selector: '[ngItemLabel]' },] }\n        ];\n        /** @nocollapse */\n        NgItemLabelDirective.ctorParameters = function () { return [\n            { type: core.ElementRef }\n        ]; };\n        NgItemLabelDirective.propDecorators = {\n            ngItemLabel: [{ type: core.Input }],\n            escape: [{ type: core.Input }]\n        };\n        return NgItemLabelDirective;\n    }());\n    if (false) {\n        /** @type {?} */\n        NgItemLabelDirective.prototype.ngItemLabel;\n        /** @type {?} */\n        NgItemLabelDirective.prototype.escape;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgItemLabelDirective.prototype.element;\n    }\n    var NgOptionTemplateDirective = /** @class */ (function () {\n        function NgOptionTemplateDirective(template) {\n            this.template = template;\n        }\n        NgOptionTemplateDirective.decorators = [\n            { type: core.Directive, args: [{ selector: '[ng-option-tmp]' },] }\n        ];\n        /** @nocollapse */\n        NgOptionTemplateDirective.ctorParameters = function () { return [\n            { type: core.TemplateRef }\n        ]; };\n        return NgOptionTemplateDirective;\n    }());\n    if (false) {\n        /** @type {?} */\n        NgOptionTemplateDirective.prototype.template;\n    }\n    var NgOptgroupTemplateDirective = /** @class */ (function () {\n        function NgOptgroupTemplateDirective(template) {\n            this.template = template;\n        }\n        NgOptgroupTemplateDirective.decorators = [\n            { type: core.Directive, args: [{ selector: '[ng-optgroup-tmp]' },] }\n        ];\n        /** @nocollapse */\n        NgOptgroupTemplateDirective.ctorParameters = function () { return [\n            { type: core.TemplateRef }\n        ]; };\n        return NgOptgroupTemplateDirective;\n    }());\n    if (false) {\n        /** @type {?} */\n        NgOptgroupTemplateDirective.prototype.template;\n    }\n    var NgLabelTemplateDirective = /** @class */ (function () {\n        function NgLabelTemplateDirective(template) {\n            this.template = template;\n        }\n        NgLabelTemplateDirective.decorators = [\n            { type: core.Directive, args: [{ selector: '[ng-label-tmp]' },] }\n        ];\n        /** @nocollapse */\n        NgLabelTemplateDirective.ctorParameters = function () { return [\n            { type: core.TemplateRef }\n        ]; };\n        return NgLabelTemplateDirective;\n    }());\n    if (false) {\n        /** @type {?} */\n        NgLabelTemplateDirective.prototype.template;\n    }\n    var NgMultiLabelTemplateDirective = /** @class */ (function () {\n        function NgMultiLabelTemplateDirective(template) {\n            this.template = template;\n        }\n        NgMultiLabelTemplateDirective.decorators = [\n            { type: core.Directive, args: [{ selector: '[ng-multi-label-tmp]' },] }\n        ];\n        /** @nocollapse */\n        NgMultiLabelTemplateDirective.ctorParameters = function () { return [\n            { type: core.TemplateRef }\n        ]; };\n        return NgMultiLabelTemplateDirective;\n    }());\n    if (false) {\n        /** @type {?} */\n        NgMultiLabelTemplateDirective.prototype.template;\n    }\n    var NgHeaderTemplateDirective = /** @class */ (function () {\n        function NgHeaderTemplateDirective(template) {\n            this.template = template;\n        }\n        NgHeaderTemplateDirective.decorators = [\n            { type: core.Directive, args: [{ selector: '[ng-header-tmp]' },] }\n        ];\n        /** @nocollapse */\n        NgHeaderTemplateDirective.ctorParameters = function () { return [\n            { type: core.TemplateRef }\n        ]; };\n        return NgHeaderTemplateDirective;\n    }());\n    if (false) {\n        /** @type {?} */\n        NgHeaderTemplateDirective.prototype.template;\n    }\n    var NgFooterTemplateDirective = /** @class */ (function () {\n        function NgFooterTemplateDirective(template) {\n            this.template = template;\n        }\n        NgFooterTemplateDirective.decorators = [\n            { type: core.Directive, args: [{ selector: '[ng-footer-tmp]' },] }\n        ];\n        /** @nocollapse */\n        NgFooterTemplateDirective.ctorParameters = function () { return [\n            { type: core.TemplateRef }\n        ]; };\n        return NgFooterTemplateDirective;\n    }());\n    if (false) {\n        /** @type {?} */\n        NgFooterTemplateDirective.prototype.template;\n    }\n    var NgNotFoundTemplateDirective = /** @class */ (function () {\n        function NgNotFoundTemplateDirective(template) {\n            this.template = template;\n        }\n        NgNotFoundTemplateDirective.decorators = [\n            { type: core.Directive, args: [{ selector: '[ng-notfound-tmp]' },] }\n        ];\n        /** @nocollapse */\n        NgNotFoundTemplateDirective.ctorParameters = function () { return [\n            { type: core.TemplateRef }\n        ]; };\n        return NgNotFoundTemplateDirective;\n    }());\n    if (false) {\n        /** @type {?} */\n        NgNotFoundTemplateDirective.prototype.template;\n    }\n    var NgTypeToSearchTemplateDirective = /** @class */ (function () {\n        function NgTypeToSearchTemplateDirective(template) {\n            this.template = template;\n        }\n        NgTypeToSearchTemplateDirective.decorators = [\n            { type: core.Directive, args: [{ selector: '[ng-typetosearch-tmp]' },] }\n        ];\n        /** @nocollapse */\n        NgTypeToSearchTemplateDirective.ctorParameters = function () { return [\n            { type: core.TemplateRef }\n        ]; };\n        return NgTypeToSearchTemplateDirective;\n    }());\n    if (false) {\n        /** @type {?} */\n        NgTypeToSearchTemplateDirective.prototype.template;\n    }\n    var NgLoadingTextTemplateDirective = /** @class */ (function () {\n        function NgLoadingTextTemplateDirective(template) {\n            this.template = template;\n        }\n        NgLoadingTextTemplateDirective.decorators = [\n            { type: core.Directive, args: [{ selector: '[ng-loadingtext-tmp]' },] }\n        ];\n        /** @nocollapse */\n        NgLoadingTextTemplateDirective.ctorParameters = function () { return [\n            { type: core.TemplateRef }\n        ]; };\n        return NgLoadingTextTemplateDirective;\n    }());\n    if (false) {\n        /** @type {?} */\n        NgLoadingTextTemplateDirective.prototype.template;\n    }\n    var NgTagTemplateDirective = /** @class */ (function () {\n        function NgTagTemplateDirective(template) {\n            this.template = template;\n        }\n        NgTagTemplateDirective.decorators = [\n            { type: core.Directive, args: [{ selector: '[ng-tag-tmp]' },] }\n        ];\n        /** @nocollapse */\n        NgTagTemplateDirective.ctorParameters = function () { return [\n            { type: core.TemplateRef }\n        ]; };\n        return NgTagTemplateDirective;\n    }());\n    if (false) {\n        /** @type {?} */\n        NgTagTemplateDirective.prototype.template;\n    }\n    var NgLoadingSpinnerTemplateDirective = /** @class */ (function () {\n        function NgLoadingSpinnerTemplateDirective(template) {\n            this.template = template;\n        }\n        NgLoadingSpinnerTemplateDirective.decorators = [\n            { type: core.Directive, args: [{ selector: '[ng-loadingspinner-tmp]' },] }\n        ];\n        /** @nocollapse */\n        NgLoadingSpinnerTemplateDirective.ctorParameters = function () { return [\n            { type: core.TemplateRef }\n        ]; };\n        return NgLoadingSpinnerTemplateDirective;\n    }());\n    if (false) {\n        /** @type {?} */\n        NgLoadingSpinnerTemplateDirective.prototype.template;\n    }\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n     */\n    var ConsoleService = /** @class */ (function () {\n        function ConsoleService() {\n        }\n        /**\n         * @param {?} message\n         * @return {?}\n         */\n        ConsoleService.prototype.warn = /**\n         * @param {?} message\n         * @return {?}\n         */\n        function (message) {\n            console.warn(message);\n        };\n        ConsoleService.decorators = [\n            { type: core.Injectable, args: [{ providedIn: 'root' },] }\n        ];\n        /** @nocollapse */ ConsoleService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function ConsoleService_Factory() { return new ConsoleService(); }, token: ConsoleService, providedIn: \"root\" });\n        return ConsoleService;\n    }());\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n     */\n    /**\n     * @return {?}\n     */\n    function newId() {\n        // First character is an 'a', it's good practice to tag id to begin with a letter\n        return 'axxxxxxxxxxx'.replace(/[x]/g, (/**\n         * @param {?} _\n         * @return {?}\n         */\n        function (_) {\n            // tslint:disable-next-line:no-bitwise\n            /** @type {?} */\n            var val = Math.random() * 16 | 0;\n            return val.toString(16);\n        }));\n    }\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n     */\n    /** @type {?} */\n    var diacritics = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    function stripSpecialChars(text) {\n        /** @type {?} */\n        var match = (/**\n         * @param {?} a\n         * @return {?}\n         */\n        function (a) {\n            return diacritics[a] || a;\n        });\n        return text.replace(/[^\\u0000-\\u007E]/g, match);\n    }\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n     */\n    var ItemsList = /** @class */ (function () {\n        function ItemsList(_ngSelect, _selectionModel) {\n            this._ngSelect = _ngSelect;\n            this._selectionModel = _selectionModel;\n            this._items = [];\n            this._filteredItems = [];\n            this._markedIndex = -1;\n        }\n        Object.defineProperty(ItemsList.prototype, \"items\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this._items;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ItemsList.prototype, \"filteredItems\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this._filteredItems;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ItemsList.prototype, \"markedIndex\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this._markedIndex;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ItemsList.prototype, \"selectedItems\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this._selectionModel.value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ItemsList.prototype, \"markedItem\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this._filteredItems[this._markedIndex];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ItemsList.prototype, \"noItemsToSelect\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this._ngSelect.hideSelected && this._items.length === this.selectedItems.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ItemsList.prototype, \"maxItemsSelected\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this._ngSelect.multiple && this._ngSelect.maxSelectedItems <= this.selectedItems.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ItemsList.prototype, \"lastSelectedItem\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                /** @type {?} */\n                var i = this.selectedItems.length - 1;\n                for (; i >= 0; i--) {\n                    /** @type {?} */\n                    var item = this.selectedItems[i];\n                    if (!item.disabled) {\n                        return item;\n                    }\n                }\n                return null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} items\n         * @return {?}\n         */\n        ItemsList.prototype.setItems = /**\n         * @param {?} items\n         * @return {?}\n         */\n        function (items) {\n            var _this = this;\n            this._items = items.map((/**\n             * @param {?} item\n             * @param {?} index\n             * @return {?}\n             */\n            function (item, index) { return _this.mapItem(item, index); }));\n            if (this._ngSelect.groupBy) {\n                this._groups = this._groupBy(this._items, this._ngSelect.groupBy);\n                this._items = this._flatten(this._groups);\n            }\n            else {\n                this._groups = new Map();\n                this._groups.set(undefined, this._items);\n            }\n            this._filteredItems = __spread(this._items);\n        };\n        /**\n         * @param {?} item\n         * @return {?}\n         */\n        ItemsList.prototype.select = /**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) {\n            if (item.selected || this.maxItemsSelected) {\n                return;\n            }\n            /** @type {?} */\n            var multiple = this._ngSelect.multiple;\n            if (!multiple) {\n                this.clearSelected();\n            }\n            this._selectionModel.select(item, multiple, this._ngSelect.selectableGroupAsModel);\n            if (this._ngSelect.hideSelected) {\n                this._hideSelected(item);\n            }\n        };\n        /**\n         * @param {?} item\n         * @return {?}\n         */\n        ItemsList.prototype.unselect = /**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) {\n            if (!item.selected) {\n                return;\n            }\n            this._selectionModel.unselect(item, this._ngSelect.multiple);\n            if (this._ngSelect.hideSelected && isDefined(item.index) && this._ngSelect.multiple) {\n                this._showSelected(item);\n            }\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        ItemsList.prototype.findItem = /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var _this = this;\n            /** @type {?} */\n            var findBy;\n            if (this._ngSelect.compareWith) {\n                findBy = (/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) { return _this._ngSelect.compareWith(item.value, value); });\n            }\n            else if (this._ngSelect.bindValue) {\n                findBy = (/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) { return !item.children && _this.resolveNested(item.value, _this._ngSelect.bindValue) === value; });\n            }\n            else {\n                findBy = (/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) { return item.value === value ||\n                    !item.children && item.label && item.label === _this.resolveNested(value, _this._ngSelect.bindLabel); });\n            }\n            return this._items.find((/**\n             * @param {?} item\n             * @return {?}\n             */\n            function (item) { return findBy(item); }));\n        };\n        /**\n         * @param {?} item\n         * @return {?}\n         */\n        ItemsList.prototype.addItem = /**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) {\n            /** @type {?} */\n            var option = this.mapItem(item, this._items.length);\n            this._items.push(option);\n            this._filteredItems.push(option);\n            return option;\n        };\n        /**\n         * @param {?=} keepDisabled\n         * @return {?}\n         */\n        ItemsList.prototype.clearSelected = /**\n         * @param {?=} keepDisabled\n         * @return {?}\n         */\n        function (keepDisabled) {\n            if (keepDisabled === void 0) { keepDisabled = false; }\n            this._selectionModel.clear(keepDisabled);\n            this._items.forEach((/**\n             * @param {?} item\n             * @return {?}\n             */\n            function (item) {\n                item.selected = keepDisabled && item.selected && item.disabled;\n                item.marked = false;\n            }));\n            if (this._ngSelect.hideSelected) {\n                this.resetFilteredItems();\n            }\n        };\n        /**\n         * @param {?} term\n         * @return {?}\n         */\n        ItemsList.prototype.findByLabel = /**\n         * @param {?} term\n         * @return {?}\n         */\n        function (term) {\n            term = stripSpecialChars(term).toLocaleLowerCase();\n            return this.filteredItems.find((/**\n             * @param {?} item\n             * @return {?}\n             */\n            function (item) {\n                /** @type {?} */\n                var label = stripSpecialChars(item.label).toLocaleLowerCase();\n                return label.substr(0, term.length) === term;\n            }));\n        };\n        /**\n         * @param {?} term\n         * @return {?}\n         */\n        ItemsList.prototype.filter = /**\n         * @param {?} term\n         * @return {?}\n         */\n        function (term) {\n            var e_1, _a;\n            if (!term) {\n                this.resetFilteredItems();\n                return;\n            }\n            this._filteredItems = [];\n            term = this._ngSelect.searchFn ? term : stripSpecialChars(term).toLocaleLowerCase();\n            /** @type {?} */\n            var match = this._ngSelect.searchFn || this._defaultSearchFn;\n            /** @type {?} */\n            var hideSelected = this._ngSelect.hideSelected;\n            var _loop_1 = function (key) {\n                var e_2, _a, _b;\n                /** @type {?} */\n                var matchedItems = [];\n                try {\n                    for (var _c = __values(this_1._groups.get(key)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var item = _d.value;\n                        if (hideSelected && (item.parent && item.parent.selected || item.selected)) {\n                            continue;\n                        }\n                        /** @type {?} */\n                        var searchItem = this_1._ngSelect.searchFn ? item.value : item;\n                        if (match(term, searchItem)) {\n                            matchedItems.push(item);\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n                if (matchedItems.length > 0) {\n                    var _e = __read(matchedItems.slice(-1), 1), last_1 = _e[0];\n                    if (last_1.parent) {\n                        /** @type {?} */\n                        var head = this_1._items.find((/**\n                         * @param {?} x\n                         * @return {?}\n                         */\n                        function (x) { return x === last_1.parent; }));\n                        this_1._filteredItems.push(head);\n                    }\n                    (_b = this_1._filteredItems).push.apply(_b, __spread(matchedItems));\n                }\n            };\n            var this_1 = this;\n            try {\n                for (var _b = __values(Array.from(this._groups.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var key = _c.value;\n                    _loop_1(key);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        };\n        /**\n         * @return {?}\n         */\n        ItemsList.prototype.resetFilteredItems = /**\n         * @return {?}\n         */\n        function () {\n            if (this._filteredItems.length === this._items.length) {\n                return;\n            }\n            if (this._ngSelect.hideSelected && this.selectedItems.length > 0) {\n                this._filteredItems = this._items.filter((/**\n                 * @param {?} x\n                 * @return {?}\n                 */\n                function (x) { return !x.selected; }));\n            }\n            else {\n                this._filteredItems = this._items;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        ItemsList.prototype.unmarkItem = /**\n         * @return {?}\n         */\n        function () {\n            this._markedIndex = -1;\n        };\n        /**\n         * @return {?}\n         */\n        ItemsList.prototype.markNextItem = /**\n         * @return {?}\n         */\n        function () {\n            this._stepToItem(+1);\n        };\n        /**\n         * @return {?}\n         */\n        ItemsList.prototype.markPreviousItem = /**\n         * @return {?}\n         */\n        function () {\n            this._stepToItem(-1);\n        };\n        /**\n         * @param {?} item\n         * @return {?}\n         */\n        ItemsList.prototype.markItem = /**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) {\n            this._markedIndex = this._filteredItems.indexOf(item);\n        };\n        /**\n         * @param {?=} markDefault\n         * @return {?}\n         */\n        ItemsList.prototype.markSelectedOrDefault = /**\n         * @param {?=} markDefault\n         * @return {?}\n         */\n        function (markDefault) {\n            if (this._filteredItems.length === 0) {\n                return;\n            }\n            /** @type {?} */\n            var lastMarkedIndex = this._getLastMarkedIndex();\n            if (lastMarkedIndex > -1) {\n                this._markedIndex = lastMarkedIndex;\n            }\n            else {\n                this._markedIndex = markDefault ? this.filteredItems.findIndex((/**\n                 * @param {?} x\n                 * @return {?}\n                 */\n                function (x) { return !x.disabled; })) : -1;\n            }\n        };\n        /**\n         * @param {?} option\n         * @param {?} key\n         * @return {?}\n         */\n        ItemsList.prototype.resolveNested = /**\n         * @param {?} option\n         * @param {?} key\n         * @return {?}\n         */\n        function (option, key) {\n            if (!isObject(option)) {\n                return option;\n            }\n            if (key.indexOf('.') === -1) {\n                return option[key];\n            }\n            else {\n                /** @type {?} */\n                var keys = key.split('.');\n                /** @type {?} */\n                var value = option;\n                for (var i = 0, len = keys.length; i < len; ++i) {\n                    if (value == null) {\n                        return null;\n                    }\n                    value = value[keys[i]];\n                }\n                return value;\n            }\n        };\n        /**\n         * @param {?} item\n         * @param {?} index\n         * @return {?}\n         */\n        ItemsList.prototype.mapItem = /**\n         * @param {?} item\n         * @param {?} index\n         * @return {?}\n         */\n        function (item, index) {\n            /** @type {?} */\n            var label = isDefined(item.$ngOptionLabel) ? item.$ngOptionLabel : this.resolveNested(item, this._ngSelect.bindLabel);\n            /** @type {?} */\n            var value = isDefined(item.$ngOptionValue) ? item.$ngOptionValue : item;\n            return {\n                index: index,\n                label: isDefined(label) ? label.toString() : '',\n                value: value,\n                disabled: item.disabled,\n                htmlId: this._ngSelect.dropdownId + \"-\" + index,\n            };\n        };\n        /**\n         * @return {?}\n         */\n        ItemsList.prototype.mapSelectedItems = /**\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            var e_3, _a;\n            /** @type {?} */\n            var multiple = this._ngSelect.multiple;\n            try {\n                for (var _b = __values(this.selectedItems), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var selected = _c.value;\n                    /** @type {?} */\n                    var value = this._ngSelect.bindValue ? this.resolveNested(selected.value, this._ngSelect.bindValue) : selected.value;\n                    /** @type {?} */\n                    var item = isDefined(value) ? this.findItem(value) : null;\n                    this._selectionModel.unselect(selected, multiple);\n                    this._selectionModel.select(item || selected, multiple, this._ngSelect.selectableGroupAsModel);\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            if (this._ngSelect.hideSelected) {\n                this._filteredItems = this.filteredItems.filter((/**\n                 * @param {?} x\n                 * @return {?}\n                 */\n                function (x) { return _this.selectedItems.indexOf(x) === -1; }));\n            }\n        };\n        /**\n         * @private\n         * @param {?} item\n         * @return {?}\n         */\n        ItemsList.prototype._showSelected = /**\n         * @private\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) {\n            var e_4, _a;\n            this._filteredItems.push(item);\n            if (item.parent) {\n                /** @type {?} */\n                var parent_1 = item.parent;\n                /** @type {?} */\n                var parentExists = this._filteredItems.find((/**\n                 * @param {?} x\n                 * @return {?}\n                 */\n                function (x) { return x === parent_1; }));\n                if (!parentExists) {\n                    this._filteredItems.push(parent_1);\n                }\n            }\n            else if (item.children) {\n                try {\n                    for (var _b = __values(item.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var child = _c.value;\n                        child.selected = false;\n                        this._filteredItems.push(child);\n                    }\n                }\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_4) throw e_4.error; }\n                }\n            }\n            this._filteredItems = __spread(this._filteredItems.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            function (a, b) { return (a.index - b.index); })));\n        };\n        /**\n         * @private\n         * @param {?} item\n         * @return {?}\n         */\n        ItemsList.prototype._hideSelected = /**\n         * @private\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) {\n            this._filteredItems = this._filteredItems.filter((/**\n             * @param {?} x\n             * @return {?}\n             */\n            function (x) { return x !== item; }));\n            if (item.parent) {\n                /** @type {?} */\n                var children = item.parent.children;\n                if (children.every((/**\n                 * @param {?} x\n                 * @return {?}\n                 */\n                function (x) { return x.selected; }))) {\n                    this._filteredItems = this._filteredItems.filter((/**\n                     * @param {?} x\n                     * @return {?}\n                     */\n                    function (x) { return x !== item.parent; }));\n                }\n            }\n            else if (item.children) {\n                this._filteredItems = this.filteredItems.filter((/**\n                 * @param {?} x\n                 * @return {?}\n                 */\n                function (x) { return x.parent !== item; }));\n            }\n        };\n        /**\n         * @private\n         * @param {?} search\n         * @param {?} opt\n         * @return {?}\n         */\n        ItemsList.prototype._defaultSearchFn = /**\n         * @private\n         * @param {?} search\n         * @param {?} opt\n         * @return {?}\n         */\n        function (search, opt) {\n            /** @type {?} */\n            var label = stripSpecialChars(opt.label).toLocaleLowerCase();\n            return label.indexOf(search) > -1;\n        };\n        /**\n         * @private\n         * @param {?} steps\n         * @return {?}\n         */\n        ItemsList.prototype._getNextItemIndex = /**\n         * @private\n         * @param {?} steps\n         * @return {?}\n         */\n        function (steps) {\n            if (steps > 0) {\n                return (this._markedIndex === this._filteredItems.length - 1) ? 0 : (this._markedIndex + 1);\n            }\n            return (this._markedIndex <= 0) ? (this._filteredItems.length - 1) : (this._markedIndex - 1);\n        };\n        /**\n         * @private\n         * @param {?} steps\n         * @return {?}\n         */\n        ItemsList.prototype._stepToItem = /**\n         * @private\n         * @param {?} steps\n         * @return {?}\n         */\n        function (steps) {\n            if (this._filteredItems.length === 0 || this._filteredItems.every((/**\n             * @param {?} x\n             * @return {?}\n             */\n            function (x) { return x.disabled; }))) {\n                return;\n            }\n            this._markedIndex = this._getNextItemIndex(steps);\n            if (this.markedItem.disabled) {\n                this._stepToItem(steps);\n            }\n        };\n        /**\n         * @private\n         * @return {?}\n         */\n        ItemsList.prototype._getLastMarkedIndex = /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            if (this._ngSelect.hideSelected) {\n                return -1;\n            }\n            if (this._markedIndex > -1 && this.markedItem === undefined) {\n                return -1;\n            }\n            /** @type {?} */\n            var selectedIndex = this._filteredItems.indexOf(this.lastSelectedItem);\n            if (this.lastSelectedItem && selectedIndex < 0) {\n                return -1;\n            }\n            return Math.max(this.markedIndex, selectedIndex);\n        };\n        /**\n         * @private\n         * @param {?} items\n         * @param {?} prop\n         * @return {?}\n         */\n        ItemsList.prototype._groupBy = /**\n         * @private\n         * @param {?} items\n         * @param {?} prop\n         * @return {?}\n         */\n        function (items, prop) {\n            var _this = this;\n            var e_5, _a, e_6, _b;\n            /** @type {?} */\n            var groups = new Map();\n            if (items.length === 0) {\n                return groups;\n            }\n            // Check if items are already grouped by given key.\n            if (Array.isArray(items[0].value[(/** @type {?} */ (prop))])) {\n                try {\n                    for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n                        var item = items_1_1.value;\n                        /** @type {?} */\n                        var children = (item.value[(/** @type {?} */ (prop))] || []).map((/**\n                         * @param {?} x\n                         * @param {?} index\n                         * @return {?}\n                         */\n                        function (x, index) { return _this.mapItem(x, index); }));\n                        groups.set(item, children);\n                    }\n                }\n                catch (e_5_1) { e_5 = { error: e_5_1 }; }\n                finally {\n                    try {\n                        if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n                    }\n                    finally { if (e_5) throw e_5.error; }\n                }\n                return groups;\n            }\n            /** @type {?} */\n            var isFnKey = isFunction(this._ngSelect.groupBy);\n            /** @type {?} */\n            var keyFn = (/**\n             * @param {?} item\n             * @return {?}\n             */\n            function (item) {\n                /** @type {?} */\n                var key = isFnKey ? ((/** @type {?} */ (prop)))(item.value) : item.value[(/** @type {?} */ (prop))];\n                return isDefined(key) ? key : undefined;\n            });\n            try {\n                // Group items by key.\n                for (var items_2 = __values(items), items_2_1 = items_2.next(); !items_2_1.done; items_2_1 = items_2.next()) {\n                    var item = items_2_1.value;\n                    /** @type {?} */\n                    var key = keyFn(item);\n                    /** @type {?} */\n                    var group = groups.get(key);\n                    if (group) {\n                        group.push(item);\n                    }\n                    else {\n                        groups.set(key, [item]);\n                    }\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (items_2_1 && !items_2_1.done && (_b = items_2.return)) _b.call(items_2);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n            return groups;\n        };\n        /**\n         * @private\n         * @param {?} groups\n         * @return {?}\n         */\n        ItemsList.prototype._flatten = /**\n         * @private\n         * @param {?} groups\n         * @return {?}\n         */\n        function (groups) {\n            var e_7, _a;\n            /** @type {?} */\n            var isGroupByFn = isFunction(this._ngSelect.groupBy);\n            /** @type {?} */\n            var items = [];\n            var _loop_2 = function (key) {\n                /** @type {?} */\n                var i = items.length;\n                if (key === undefined) {\n                    /** @type {?} */\n                    var withoutGroup = groups.get(undefined) || [];\n                    items.push.apply(items, __spread(withoutGroup.map((/**\n                     * @param {?} x\n                     * @return {?}\n                     */\n                    function (x) { return (__assign({}, x, { index: i++ })); }))));\n                    return \"continue\";\n                }\n                /** @type {?} */\n                var isObjectKey = isObject(key);\n                /** @type {?} */\n                var parent_2 = {\n                    label: isObjectKey ? '' : String(key),\n                    children: undefined,\n                    parent: null,\n                    index: i++,\n                    disabled: !this_2._ngSelect.selectableGroup,\n                    htmlId: newId(),\n                };\n                /** @type {?} */\n                var groupKey = isGroupByFn ? this_2._ngSelect.bindLabel : (/** @type {?} */ (this_2._ngSelect.groupBy));\n                /** @type {?} */\n                var groupValue = this_2._ngSelect.groupValue || ((/**\n                 * @return {?}\n                 */\n                function () {\n                    var _a;\n                    if (isObjectKey) {\n                        return ((/** @type {?} */ (key))).value;\n                    }\n                    return _a = {}, _a[groupKey] = key, _a;\n                }));\n                /** @type {?} */\n                var children = groups.get(key).map((/**\n                 * @param {?} x\n                 * @return {?}\n                 */\n                function (x) {\n                    x.parent = parent_2;\n                    x.children = undefined;\n                    x.index = i++;\n                    return x;\n                }));\n                parent_2.children = children;\n                parent_2.value = groupValue(key, children.map((/**\n                 * @param {?} x\n                 * @return {?}\n                 */\n                function (x) { return x.value; })));\n                items.push(parent_2);\n                items.push.apply(items, __spread(children));\n            };\n            var this_2 = this;\n            try {\n                for (var _b = __values(Array.from(groups.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var key = _c.value;\n                    _loop_2(key);\n                }\n            }\n            catch (e_7_1) { e_7 = { error: e_7_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_7) throw e_7.error; }\n            }\n            return items;\n        };\n        return ItemsList;\n    }());\n    if (false) {\n        /**\n         * @type {?}\n         * @private\n         */\n        ItemsList.prototype._groups;\n        /**\n         * @type {?}\n         * @private\n         */\n        ItemsList.prototype._items;\n        /**\n         * @type {?}\n         * @private\n         */\n        ItemsList.prototype._filteredItems;\n        /**\n         * @type {?}\n         * @private\n         */\n        ItemsList.prototype._markedIndex;\n        /**\n         * @type {?}\n         * @private\n         */\n        ItemsList.prototype._ngSelect;\n        /**\n         * @type {?}\n         * @private\n         */\n        ItemsList.prototype._selectionModel;\n    }\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n     */\n    /**\n     * @record\n     */\n    function NgOption() { }\n    if (false) {\n        /** @type {?|undefined} */\n        NgOption.prototype.index;\n        /** @type {?|undefined} */\n        NgOption.prototype.htmlId;\n        /** @type {?|undefined} */\n        NgOption.prototype.selected;\n        /** @type {?|undefined} */\n        NgOption.prototype.disabled;\n        /** @type {?|undefined} */\n        NgOption.prototype.marked;\n        /** @type {?|undefined} */\n        NgOption.prototype.label;\n        /** @type {?|undefined} */\n        NgOption.prototype.value;\n        /** @type {?|undefined} */\n        NgOption.prototype.parent;\n        /** @type {?|undefined} */\n        NgOption.prototype.children;\n        /* Skipping unhandled member: [name: string]: any;*/\n    }\n    /** @enum {number} */\n    var KeyCode = {\n        Tab: 9,\n        Enter: 13,\n        Esc: 27,\n        Space: 32,\n        ArrowUp: 38,\n        ArrowDown: 40,\n        Backspace: 8,\n    };\n    KeyCode[KeyCode.Tab] = 'Tab';\n    KeyCode[KeyCode.Enter] = 'Enter';\n    KeyCode[KeyCode.Esc] = 'Esc';\n    KeyCode[KeyCode.Space] = 'Space';\n    KeyCode[KeyCode.ArrowUp] = 'ArrowUp';\n    KeyCode[KeyCode.ArrowDown] = 'ArrowDown';\n    KeyCode[KeyCode.Backspace] = 'Backspace';\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n     */\n    /**\n     * @record\n     */\n    function ItemsRangeResult() { }\n    if (false) {\n        /** @type {?} */\n        ItemsRangeResult.prototype.scrollHeight;\n        /** @type {?} */\n        ItemsRangeResult.prototype.topPadding;\n        /** @type {?} */\n        ItemsRangeResult.prototype.start;\n        /** @type {?} */\n        ItemsRangeResult.prototype.end;\n    }\n    /**\n     * @record\n     */\n    function PanelDimensions() { }\n    if (false) {\n        /** @type {?} */\n        PanelDimensions.prototype.itemHeight;\n        /** @type {?} */\n        PanelDimensions.prototype.panelHeight;\n        /** @type {?} */\n        PanelDimensions.prototype.itemsPerViewport;\n    }\n    var NgDropdownPanelService = /** @class */ (function () {\n        function NgDropdownPanelService() {\n            this._dimensions = {\n                itemHeight: 0,\n                panelHeight: 0,\n                itemsPerViewport: 0\n            };\n        }\n        Object.defineProperty(NgDropdownPanelService.prototype, \"dimensions\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this._dimensions;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} scrollPos\n         * @param {?} itemsLength\n         * @param {?} buffer\n         * @return {?}\n         */\n        NgDropdownPanelService.prototype.calculateItems = /**\n         * @param {?} scrollPos\n         * @param {?} itemsLength\n         * @param {?} buffer\n         * @return {?}\n         */\n        function (scrollPos, itemsLength, buffer) {\n            /** @type {?} */\n            var d = this._dimensions;\n            /** @type {?} */\n            var scrollHeight = d.itemHeight * itemsLength;\n            /** @type {?} */\n            var scrollTop = Math.max(0, scrollPos);\n            /** @type {?} */\n            var indexByScrollTop = scrollTop / scrollHeight * itemsLength;\n            /** @type {?} */\n            var end = Math.min(itemsLength, Math.ceil(indexByScrollTop) + (d.itemsPerViewport + 1));\n            /** @type {?} */\n            var maxStartEnd = end;\n            /** @type {?} */\n            var maxStart = Math.max(0, maxStartEnd - d.itemsPerViewport);\n            /** @type {?} */\n            var start = Math.min(maxStart, Math.floor(indexByScrollTop));\n            /** @type {?} */\n            var topPadding = d.itemHeight * Math.ceil(start) - (d.itemHeight * Math.min(start, buffer));\n            topPadding = !isNaN(topPadding) ? topPadding : 0;\n            start = !isNaN(start) ? start : -1;\n            end = !isNaN(end) ? end : -1;\n            start -= buffer;\n            start = Math.max(0, start);\n            end += buffer;\n            end = Math.min(itemsLength, end);\n            return {\n                topPadding: topPadding,\n                scrollHeight: scrollHeight,\n                start: start,\n                end: end\n            };\n        };\n        /**\n         * @param {?} itemHeight\n         * @param {?} panelHeight\n         * @return {?}\n         */\n        NgDropdownPanelService.prototype.setDimensions = /**\n         * @param {?} itemHeight\n         * @param {?} panelHeight\n         * @return {?}\n         */\n        function (itemHeight, panelHeight) {\n            /** @type {?} */\n            var itemsPerViewport = Math.max(1, Math.floor(panelHeight / itemHeight));\n            this._dimensions = {\n                itemHeight: itemHeight,\n                panelHeight: panelHeight,\n                itemsPerViewport: itemsPerViewport\n            };\n        };\n        /**\n         * @param {?} itemTop\n         * @param {?} itemHeight\n         * @param {?} lastScroll\n         * @return {?}\n         */\n        NgDropdownPanelService.prototype.getScrollTo = /**\n         * @param {?} itemTop\n         * @param {?} itemHeight\n         * @param {?} lastScroll\n         * @return {?}\n         */\n        function (itemTop, itemHeight, lastScroll) {\n            var panelHeight = this.dimensions.panelHeight;\n            /** @type {?} */\n            var itemBottom = itemTop + itemHeight;\n            /** @type {?} */\n            var top = lastScroll;\n            /** @type {?} */\n            var bottom = top + panelHeight;\n            if (panelHeight >= itemBottom && lastScroll === itemTop) {\n                return null;\n            }\n            if (itemBottom > bottom) {\n                return top + itemBottom - bottom;\n            }\n            else if (itemTop <= top) {\n                return itemTop;\n            }\n            return null;\n        };\n        return NgDropdownPanelService;\n    }());\n    if (false) {\n        /**\n         * @type {?}\n         * @private\n         */\n        NgDropdownPanelService.prototype._dimensions;\n    }\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n     */\n    /** @type {?} */\n    var TOP_CSS_CLASS = 'ng-select-top';\n    /** @type {?} */\n    var BOTTOM_CSS_CLASS = 'ng-select-bottom';\n    /** @type {?} */\n    var SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? rxjs.animationFrameScheduler : rxjs.asapScheduler;\n    var NgDropdownPanelComponent = /** @class */ (function () {\n        function NgDropdownPanelComponent(_renderer, _zone, _panelService, _elementRef, _document) {\n            this._renderer = _renderer;\n            this._zone = _zone;\n            this._panelService = _panelService;\n            this._document = _document;\n            this.items = [];\n            this.position = 'auto';\n            this.virtualScroll = false;\n            this.filterValue = null;\n            this.update = new core.EventEmitter();\n            this.scroll = new core.EventEmitter();\n            this.scrollToEnd = new core.EventEmitter();\n            this.outsideClick = new core.EventEmitter();\n            this._destroy$ = new rxjs.Subject();\n            this._scrollToEndFired = false;\n            this._updateScrollHeight = false;\n            this._lastScrollPosition = 0;\n            this._dropdown = _elementRef.nativeElement;\n        }\n        Object.defineProperty(NgDropdownPanelComponent.prototype, \"currentPosition\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this._currentPosition;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgDropdownPanelComponent.prototype, \"itemsLength\", {\n            get: /**\n             * @private\n             * @return {?}\n             */\n            function () {\n                return this._itemsLength;\n            },\n            set: /**\n             * @private\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) {\n                if (value !== this._itemsLength) {\n                    this._itemsLength = value;\n                    this._onItemsLengthChanged();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgDropdownPanelComponent.prototype, \"_startOffset\", {\n            get: /**\n             * @private\n             * @return {?}\n             */\n            function () {\n                if (this.markedItem) {\n                    var _a = this._panelService.dimensions, itemHeight = _a.itemHeight, panelHeight = _a.panelHeight;\n                    /** @type {?} */\n                    var offset = this.markedItem.index * itemHeight;\n                    return panelHeight > offset ? 0 : offset;\n                }\n                return 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} $event\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype.handleMousedown = /**\n         * @param {?} $event\n         * @return {?}\n         */\n        function ($event) {\n            /** @type {?} */\n            var target = (/** @type {?} */ ($event.target));\n            if (target.tagName === 'INPUT') {\n                return;\n            }\n            $event.preventDefault();\n        };\n        /**\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype.ngOnInit = /**\n         * @return {?}\n         */\n        function () {\n            this._select = this._dropdown.parentElement;\n            this._virtualPadding = this.paddingElementRef.nativeElement;\n            this._scrollablePanel = this.scrollElementRef.nativeElement;\n            this._contentPanel = this.contentElementRef.nativeElement;\n            this._handleScroll();\n            this._handleOutsideClick();\n            this._appendDropdown();\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype.ngOnChanges = /**\n         * @param {?} changes\n         * @return {?}\n         */\n        function (changes) {\n            if (changes.items) {\n                /** @type {?} */\n                var change = changes.items;\n                this._onItemsChange(change.currentValue, change.firstChange);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype.ngOnDestroy = /**\n         * @return {?}\n         */\n        function () {\n            this._destroy$.next();\n            this._destroy$.complete();\n            this._destroy$.unsubscribe();\n            if (this.appendTo) {\n                this._renderer.removeChild(this._dropdown.parentNode, this._dropdown);\n            }\n        };\n        /**\n         * @param {?} option\n         * @param {?=} startFromOption\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype.scrollTo = /**\n         * @param {?} option\n         * @param {?=} startFromOption\n         * @return {?}\n         */\n        function (option, startFromOption) {\n            if (startFromOption === void 0) { startFromOption = false; }\n            if (!option) {\n                return;\n            }\n            /** @type {?} */\n            var index = this.items.indexOf(option);\n            if (index < 0 || index >= this.itemsLength) {\n                return;\n            }\n            /** @type {?} */\n            var scrollTo;\n            if (this.virtualScroll) {\n                /** @type {?} */\n                var itemHeight = this._panelService.dimensions.itemHeight;\n                scrollTo = this._panelService.getScrollTo(index * itemHeight, itemHeight, this._lastScrollPosition);\n            }\n            else {\n                /** @type {?} */\n                var item = this._dropdown.querySelector(\"#\" + option.htmlId);\n                /** @type {?} */\n                var lastScroll = startFromOption ? item.offsetTop : this._lastScrollPosition;\n                scrollTo = this._panelService.getScrollTo(item.offsetTop, item.clientHeight, lastScroll);\n            }\n            if (isDefined(scrollTo)) {\n                this._scrollablePanel.scrollTop = scrollTo;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype.scrollToTag = /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var panel = this._scrollablePanel;\n            panel.scrollTop = panel.scrollHeight - panel.clientHeight;\n        };\n        /**\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype.adjustPosition = /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var parent = this._parent.getBoundingClientRect();\n            /** @type {?} */\n            var select = this._select.getBoundingClientRect();\n            this._setOffset(parent, select);\n        };\n        /**\n         * @private\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype._handleDropdownPosition = /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            this._currentPosition = this._calculateCurrentPosition(this._dropdown);\n            if (this._currentPosition === 'top') {\n                this._renderer.addClass(this._dropdown, TOP_CSS_CLASS);\n                this._renderer.removeClass(this._dropdown, BOTTOM_CSS_CLASS);\n                this._renderer.addClass(this._select, TOP_CSS_CLASS);\n                this._renderer.removeClass(this._select, BOTTOM_CSS_CLASS);\n            }\n            else {\n                this._renderer.addClass(this._dropdown, BOTTOM_CSS_CLASS);\n                this._renderer.removeClass(this._dropdown, TOP_CSS_CLASS);\n                this._renderer.addClass(this._select, BOTTOM_CSS_CLASS);\n                this._renderer.removeClass(this._select, TOP_CSS_CLASS);\n            }\n            if (this.appendTo) {\n                this._updatePosition();\n            }\n            this._dropdown.style.opacity = '1';\n        };\n        /**\n         * @private\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype._handleScroll = /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            this._zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                rxjs.fromEvent(_this.scrollElementRef.nativeElement, 'scroll')\n                    .pipe(operators.takeUntil(_this._destroy$), operators.auditTime(0, SCROLL_SCHEDULER))\n                    .subscribe((/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                function (e) { return _this._onContentScrolled(e.target.scrollTop); }));\n            }));\n        };\n        /**\n         * @private\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype._handleOutsideClick = /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            if (!this._document) {\n                return;\n            }\n            this._zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                rxjs.merge(rxjs.fromEvent(_this._document, 'touchstart', { capture: true }), rxjs.fromEvent(_this._document, 'mousedown', { capture: true })).pipe(operators.takeUntil(_this._destroy$))\n                    .subscribe((/**\n                 * @param {?} $event\n                 * @return {?}\n                 */\n                function ($event) { return _this._checkToClose($event); }));\n            }));\n        };\n        /**\n         * @private\n         * @param {?} $event\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype._checkToClose = /**\n         * @private\n         * @param {?} $event\n         * @return {?}\n         */\n        function ($event) {\n            var _this = this;\n            if (this._select.contains($event.target) || this._dropdown.contains($event.target)) {\n                return;\n            }\n            /** @type {?} */\n            var path = $event.path || ($event.composedPath && $event.composedPath());\n            if ($event.target && $event.target.shadowRoot && path && path[0] && this._select.contains(path[0])) {\n                return;\n            }\n            this._zone.run((/**\n             * @return {?}\n             */\n            function () { return _this.outsideClick.emit(); }));\n        };\n        /**\n         * @private\n         * @param {?} items\n         * @param {?} firstChange\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype._onItemsChange = /**\n         * @private\n         * @param {?} items\n         * @param {?} firstChange\n         * @return {?}\n         */\n        function (items, firstChange) {\n            this.items = items || [];\n            this._scrollToEndFired = false;\n            this.itemsLength = items.length;\n            if (this.virtualScroll) {\n                this._updateItemsRange(firstChange);\n            }\n            else {\n                this._updateItems(firstChange);\n            }\n        };\n        /**\n         * @private\n         * @param {?} firstChange\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype._updateItems = /**\n         * @private\n         * @param {?} firstChange\n         * @return {?}\n         */\n        function (firstChange) {\n            var _this = this;\n            this.update.emit(this.items);\n            if (firstChange === false) {\n                return;\n            }\n            this._zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                function () {\n                    /** @type {?} */\n                    var panelHeight = _this._scrollablePanel.clientHeight;\n                    _this._panelService.setDimensions(0, panelHeight);\n                    _this._handleDropdownPosition();\n                    _this.scrollTo(_this.markedItem, firstChange);\n                }));\n            }));\n        };\n        /**\n         * @private\n         * @param {?} firstChange\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype._updateItemsRange = /**\n         * @private\n         * @param {?} firstChange\n         * @return {?}\n         */\n        function (firstChange) {\n            var _this = this;\n            this._zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                _this._measureDimensions().then((/**\n                 * @return {?}\n                 */\n                function () {\n                    if (firstChange) {\n                        _this._renderItemsRange(_this._startOffset);\n                        _this._handleDropdownPosition();\n                    }\n                    else {\n                        _this._renderItemsRange();\n                    }\n                }));\n            }));\n        };\n        /**\n         * @private\n         * @param {?} scrollTop\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype._onContentScrolled = /**\n         * @private\n         * @param {?} scrollTop\n         * @return {?}\n         */\n        function (scrollTop) {\n            if (this.virtualScroll) {\n                this._renderItemsRange(scrollTop);\n            }\n            this._lastScrollPosition = scrollTop;\n            this._fireScrollToEnd(scrollTop);\n        };\n        /**\n         * @private\n         * @param {?} height\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype._updateVirtualHeight = /**\n         * @private\n         * @param {?} height\n         * @return {?}\n         */\n        function (height) {\n            if (this._updateScrollHeight) {\n                this._virtualPadding.style.height = height + \"px\";\n                this._updateScrollHeight = false;\n            }\n        };\n        /**\n         * @private\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype._onItemsLengthChanged = /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            this._updateScrollHeight = true;\n        };\n        /**\n         * @private\n         * @param {?=} scrollTop\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype._renderItemsRange = /**\n         * @private\n         * @param {?=} scrollTop\n         * @return {?}\n         */\n        function (scrollTop) {\n            var _this = this;\n            if (scrollTop === void 0) { scrollTop = null; }\n            if (scrollTop && this._lastScrollPosition === scrollTop) {\n                return;\n            }\n            scrollTop = scrollTop || this._scrollablePanel.scrollTop;\n            /** @type {?} */\n            var range = this._panelService.calculateItems(scrollTop, this.itemsLength, this.bufferAmount);\n            this._updateVirtualHeight(range.scrollHeight);\n            this._contentPanel.style.transform = \"translateY(\" + range.topPadding + \"px)\";\n            this._zone.run((/**\n             * @return {?}\n             */\n            function () {\n                _this.update.emit(_this.items.slice(range.start, range.end));\n                _this.scroll.emit({ start: range.start, end: range.end });\n            }));\n            if (isDefined(scrollTop) && this._lastScrollPosition === 0) {\n                this._scrollablePanel.scrollTop = scrollTop;\n                this._lastScrollPosition = scrollTop;\n            }\n        };\n        /**\n         * @private\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype._measureDimensions = /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            if (this._panelService.dimensions.itemHeight > 0 || this.itemsLength === 0) {\n                return Promise.resolve(this._panelService.dimensions);\n            }\n            var _a = __read(this.items, 1), first = _a[0];\n            this.update.emit([first]);\n            return Promise.resolve().then((/**\n             * @return {?}\n             */\n            function () {\n                /** @type {?} */\n                var option = _this._dropdown.querySelector(\"#\" + first.htmlId);\n                /** @type {?} */\n                var optionHeight = option.clientHeight;\n                _this._virtualPadding.style.height = optionHeight * _this.itemsLength + \"px\";\n                /** @type {?} */\n                var panelHeight = _this._scrollablePanel.clientHeight;\n                _this._panelService.setDimensions(optionHeight, panelHeight);\n                return _this._panelService.dimensions;\n            }));\n        };\n        /**\n         * @private\n         * @param {?} scrollTop\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype._fireScrollToEnd = /**\n         * @private\n         * @param {?} scrollTop\n         * @return {?}\n         */\n        function (scrollTop) {\n            var _this = this;\n            if (this._scrollToEndFired || scrollTop === 0) {\n                return;\n            }\n            /** @type {?} */\n            var padding = this.virtualScroll ?\n                this._virtualPadding :\n                this._contentPanel;\n            if (scrollTop + this._dropdown.clientHeight >= padding.clientHeight) {\n                this._zone.run((/**\n                 * @return {?}\n                 */\n                function () { return _this.scrollToEnd.emit(); }));\n                this._scrollToEndFired = true;\n            }\n        };\n        /**\n         * @private\n         * @param {?} dropdownEl\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype._calculateCurrentPosition = /**\n         * @private\n         * @param {?} dropdownEl\n         * @return {?}\n         */\n        function (dropdownEl) {\n            if (this.position !== 'auto') {\n                return this.position;\n            }\n            /** @type {?} */\n            var selectRect = this._select.getBoundingClientRect();\n            /** @type {?} */\n            var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n            /** @type {?} */\n            var offsetTop = selectRect.top + window.pageYOffset;\n            /** @type {?} */\n            var height = selectRect.height;\n            /** @type {?} */\n            var dropdownHeight = dropdownEl.getBoundingClientRect().height;\n            if (offsetTop + height + dropdownHeight > scrollTop + document.documentElement.clientHeight) {\n                return 'top';\n            }\n            else {\n                return 'bottom';\n            }\n        };\n        /**\n         * @private\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype._appendDropdown = /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            if (!this.appendTo) {\n                return;\n            }\n            this._parent = document.querySelector(this.appendTo);\n            if (!parent) {\n                throw new Error(\"appendTo selector \" + this.appendTo + \" did not found any parent element\");\n            }\n            this._parent.appendChild(this._dropdown);\n        };\n        /**\n         * @private\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype._updatePosition = /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var select = this._select.getBoundingClientRect();\n            /** @type {?} */\n            var parent = this._parent.getBoundingClientRect();\n            /** @type {?} */\n            var offsetLeft = select.left - parent.left;\n            this._setOffset(parent, select);\n            this._dropdown.style.left = offsetLeft + 'px';\n            this._dropdown.style.width = select.width + 'px';\n            this._dropdown.style.minWidth = select.width + 'px';\n        };\n        /**\n         * @private\n         * @param {?} parent\n         * @param {?} select\n         * @return {?}\n         */\n        NgDropdownPanelComponent.prototype._setOffset = /**\n         * @private\n         * @param {?} parent\n         * @param {?} select\n         * @return {?}\n         */\n        function (parent, select) {\n            /** @type {?} */\n            var delta = select.height;\n            if (this._currentPosition === 'top') {\n                /** @type {?} */\n                var offsetBottom = parent.bottom - select.bottom;\n                this._dropdown.style.bottom = offsetBottom + delta + 'px';\n                this._dropdown.style.top = 'auto';\n            }\n            else if (this._currentPosition === 'bottom') {\n                /** @type {?} */\n                var offsetTop = select.top - parent.top;\n                this._dropdown.style.top = offsetTop + delta + 'px';\n                this._dropdown.style.bottom = 'auto';\n            }\n        };\n        NgDropdownPanelComponent.decorators = [\n            { type: core.Component, args: [{\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        encapsulation: core.ViewEncapsulation.None,\n                        selector: 'ng-dropdown-panel',\n                        template: \"\\n        <div *ngIf=\\\"headerTemplate\\\" class=\\\"ng-dropdown-header\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"headerTemplate\\\" [ngTemplateOutletContext]=\\\"{ searchTerm: filterValue }\\\"></ng-container>\\n        </div>\\n        <div #scroll class=\\\"ng-dropdown-panel-items scroll-host\\\">\\n            <div #padding [class.total-padding]=\\\"virtualScroll\\\"></div>\\n            <div #content [class.scrollable-content]=\\\"virtualScroll && items.length\\\">\\n                <ng-content></ng-content>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"footerTemplate\\\" class=\\\"ng-dropdown-footer\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"footerTemplate\\\" [ngTemplateOutletContext]=\\\"{ searchTerm: filterValue }\\\"></ng-container>\\n        </div>\\n    \"\n                    }] }\n        ];\n        /** @nocollapse */\n        NgDropdownPanelComponent.ctorParameters = function () { return [\n            { type: core.Renderer2 },\n            { type: core.NgZone },\n            { type: NgDropdownPanelService },\n            { type: core.ElementRef },\n            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [common.DOCUMENT,] }] }\n        ]; };\n        NgDropdownPanelComponent.propDecorators = {\n            items: [{ type: core.Input }],\n            markedItem: [{ type: core.Input }],\n            position: [{ type: core.Input }],\n            appendTo: [{ type: core.Input }],\n            bufferAmount: [{ type: core.Input }],\n            virtualScroll: [{ type: core.Input }],\n            headerTemplate: [{ type: core.Input }],\n            footerTemplate: [{ type: core.Input }],\n            filterValue: [{ type: core.Input }],\n            update: [{ type: core.Output }],\n            scroll: [{ type: core.Output }],\n            scrollToEnd: [{ type: core.Output }],\n            outsideClick: [{ type: core.Output }],\n            contentElementRef: [{ type: core.ViewChild, args: ['content', { read: core.ElementRef, static: true },] }],\n            scrollElementRef: [{ type: core.ViewChild, args: ['scroll', { read: core.ElementRef, static: true },] }],\n            paddingElementRef: [{ type: core.ViewChild, args: ['padding', { read: core.ElementRef, static: true },] }],\n            handleMousedown: [{ type: core.HostListener, args: ['mousedown', ['$event'],] }]\n        };\n        return NgDropdownPanelComponent;\n    }());\n    if (false) {\n        /** @type {?} */\n        NgDropdownPanelComponent.prototype.items;\n        /** @type {?} */\n        NgDropdownPanelComponent.prototype.markedItem;\n        /** @type {?} */\n        NgDropdownPanelComponent.prototype.position;\n        /** @type {?} */\n        NgDropdownPanelComponent.prototype.appendTo;\n        /** @type {?} */\n        NgDropdownPanelComponent.prototype.bufferAmount;\n        /** @type {?} */\n        NgDropdownPanelComponent.prototype.virtualScroll;\n        /** @type {?} */\n        NgDropdownPanelComponent.prototype.headerTemplate;\n        /** @type {?} */\n        NgDropdownPanelComponent.prototype.footerTemplate;\n        /** @type {?} */\n        NgDropdownPanelComponent.prototype.filterValue;\n        /** @type {?} */\n        NgDropdownPanelComponent.prototype.update;\n        /** @type {?} */\n        NgDropdownPanelComponent.prototype.scroll;\n        /** @type {?} */\n        NgDropdownPanelComponent.prototype.scrollToEnd;\n        /** @type {?} */\n        NgDropdownPanelComponent.prototype.outsideClick;\n        /** @type {?} */\n        NgDropdownPanelComponent.prototype.contentElementRef;\n        /** @type {?} */\n        NgDropdownPanelComponent.prototype.scrollElementRef;\n        /** @type {?} */\n        NgDropdownPanelComponent.prototype.paddingElementRef;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgDropdownPanelComponent.prototype._destroy$;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgDropdownPanelComponent.prototype._dropdown;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgDropdownPanelComponent.prototype._virtualPadding;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgDropdownPanelComponent.prototype._scrollablePanel;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgDropdownPanelComponent.prototype._contentPanel;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgDropdownPanelComponent.prototype._select;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgDropdownPanelComponent.prototype._parent;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgDropdownPanelComponent.prototype._scrollToEndFired;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgDropdownPanelComponent.prototype._updateScrollHeight;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgDropdownPanelComponent.prototype._lastScrollPosition;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgDropdownPanelComponent.prototype._currentPosition;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgDropdownPanelComponent.prototype._itemsLength;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgDropdownPanelComponent.prototype._renderer;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgDropdownPanelComponent.prototype._zone;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgDropdownPanelComponent.prototype._panelService;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgDropdownPanelComponent.prototype._document;\n    }\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n     */\n    var NgOptionComponent = /** @class */ (function () {\n        function NgOptionComponent(elementRef) {\n            this.elementRef = elementRef;\n            this.stateChange$ = new rxjs.Subject();\n            this._disabled = false;\n        }\n        Object.defineProperty(NgOptionComponent.prototype, \"disabled\", {\n            get: /**\n             * @return {?}\n             */\n            function () { return this._disabled; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) { this._disabled = this._isDisabled(value); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgOptionComponent.prototype, \"label\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return (this.elementRef.nativeElement.textContent || '').trim();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgOptionComponent.prototype.ngOnChanges = /**\n         * @param {?} changes\n         * @return {?}\n         */\n        function (changes) {\n            if (changes.disabled) {\n                this.stateChange$.next({\n                    value: this.value,\n                    disabled: this._disabled\n                });\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgOptionComponent.prototype.ngAfterViewChecked = /**\n         * @return {?}\n         */\n        function () {\n            if (this.label !== this._previousLabel) {\n                this._previousLabel = this.label;\n                this.stateChange$.next({\n                    value: this.value,\n                    disabled: this._disabled,\n                    label: this.elementRef.nativeElement.innerHTML\n                });\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgOptionComponent.prototype.ngOnDestroy = /**\n         * @return {?}\n         */\n        function () {\n            this.stateChange$.complete();\n        };\n        /**\n         * @private\n         * @param {?} value\n         * @return {?}\n         */\n        NgOptionComponent.prototype._isDisabled = /**\n         * @private\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            return value != null && \"\" + value !== 'false';\n        };\n        NgOptionComponent.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ng-option',\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        template: \"<ng-content></ng-content>\"\n                    }] }\n        ];\n        /** @nocollapse */\n        NgOptionComponent.ctorParameters = function () { return [\n            { type: core.ElementRef }\n        ]; };\n        NgOptionComponent.propDecorators = {\n            value: [{ type: core.Input }],\n            disabled: [{ type: core.Input }]\n        };\n        return NgOptionComponent;\n    }());\n    if (false) {\n        /** @type {?} */\n        NgOptionComponent.prototype.value;\n        /** @type {?} */\n        NgOptionComponent.prototype.stateChange$;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgOptionComponent.prototype._disabled;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgOptionComponent.prototype._previousLabel;\n        /** @type {?} */\n        NgOptionComponent.prototype.elementRef;\n    }\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n     */\n    var NgSelectConfig = /** @class */ (function () {\n        function NgSelectConfig() {\n            this.notFoundText = 'No items found';\n            this.typeToSearchText = 'Type to search';\n            this.addTagText = 'Add item';\n            this.loadingText = 'Loading...';\n            this.clearAllText = 'Clear all';\n            this.disableVirtualScroll = true;\n            this.openOnEnter = true;\n            this.appearance = 'underline';\n        }\n        NgSelectConfig.decorators = [\n            { type: core.Injectable, args: [{ providedIn: 'root' },] }\n        ];\n        /** @nocollapse */ NgSelectConfig.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function NgSelectConfig_Factory() { return new NgSelectConfig(); }, token: NgSelectConfig, providedIn: \"root\" });\n        return NgSelectConfig;\n    }());\n    if (false) {\n        /** @type {?} */\n        NgSelectConfig.prototype.placeholder;\n        /** @type {?} */\n        NgSelectConfig.prototype.notFoundText;\n        /** @type {?} */\n        NgSelectConfig.prototype.typeToSearchText;\n        /** @type {?} */\n        NgSelectConfig.prototype.addTagText;\n        /** @type {?} */\n        NgSelectConfig.prototype.loadingText;\n        /** @type {?} */\n        NgSelectConfig.prototype.clearAllText;\n        /** @type {?} */\n        NgSelectConfig.prototype.disableVirtualScroll;\n        /** @type {?} */\n        NgSelectConfig.prototype.openOnEnter;\n        /** @type {?} */\n        NgSelectConfig.prototype.appendTo;\n        /** @type {?} */\n        NgSelectConfig.prototype.bindValue;\n        /** @type {?} */\n        NgSelectConfig.prototype.appearance;\n    }\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n     */\n    /** @type {?} */\n    var SELECTION_MODEL_FACTORY = new core.InjectionToken('ng-select-selection-model');\n    var NgSelectComponent = /** @class */ (function () {\n        function NgSelectComponent(classes, autoFocus, config, newSelectionModel, _elementRef, _cd, _console) {\n            var _this = this;\n            this.classes = classes;\n            this.autoFocus = autoFocus;\n            this._cd = _cd;\n            this._console = _console;\n            this.markFirst = true;\n            this.dropdownPosition = 'auto';\n            this.loading = false;\n            this.closeOnSelect = true;\n            this.hideSelected = false;\n            this.selectOnTab = false;\n            this.bufferAmount = 4;\n            this.selectableGroup = false;\n            this.selectableGroupAsModel = true;\n            this.searchFn = null;\n            this.trackByFn = null;\n            this.clearOnBackspace = true;\n            this.labelForId = null;\n            this.inputAttrs = {};\n            this.readonly = false;\n            this.searchWhileComposing = true;\n            this.minTermLength = 0;\n            this.keyDownFn = (/**\n             * @param {?} _\n             * @return {?}\n             */\n            function (_) { return true; });\n            this.multiple = false;\n            this.addTag = false;\n            this.searchable = true;\n            this.clearable = true;\n            this.isOpen = false;\n            // output events\n            this.blurEvent = new core.EventEmitter();\n            this.focusEvent = new core.EventEmitter();\n            this.changeEvent = new core.EventEmitter();\n            this.openEvent = new core.EventEmitter();\n            this.closeEvent = new core.EventEmitter();\n            this.searchEvent = new core.EventEmitter();\n            this.clearEvent = new core.EventEmitter();\n            this.addEvent = new core.EventEmitter();\n            this.removeEvent = new core.EventEmitter();\n            this.scroll = new core.EventEmitter();\n            this.scrollToEnd = new core.EventEmitter();\n            this.viewPortItems = [];\n            this.searchTerm = null;\n            this.dropdownId = newId();\n            this.escapeHTML = true;\n            this._items = [];\n            this._defaultLabel = 'label';\n            this._pressedKeys = [];\n            this._isComposing = false;\n            this._destroy$ = new rxjs.Subject();\n            this._keyPress$ = new rxjs.Subject();\n            this._onChange = (/**\n             * @param {?} _\n             * @return {?}\n             */\n            function (_) { });\n            this._onTouched = (/**\n             * @return {?}\n             */\n            function () { });\n            this.clearItem = (/**\n             * @param {?} item\n             * @return {?}\n             */\n            function (item) {\n                /** @type {?} */\n                var option = _this.selectedItems.find((/**\n                 * @param {?} x\n                 * @return {?}\n                 */\n                function (x) { return x.value === item; }));\n                _this.unselect(option);\n            });\n            this.trackByOption = (/**\n             * @param {?} _\n             * @param {?} item\n             * @return {?}\n             */\n            function (_, item) {\n                if (_this.trackByFn) {\n                    return _this.trackByFn(item.value);\n                }\n                return item;\n            });\n            this._mergeGlobalConfig(config);\n            this.itemsList = new ItemsList(this, newSelectionModel());\n            this.element = _elementRef.nativeElement;\n        }\n        Object.defineProperty(NgSelectComponent.prototype, \"items\", {\n            get: /**\n             * @return {?}\n             */\n            function () { return this._items; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) {\n                this._itemsAreUsed = true;\n                this._items = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        ;\n        Object.defineProperty(NgSelectComponent.prototype, \"compareWith\", {\n            get: /**\n             * @return {?}\n             */\n            function () { return this._compareWith; },\n            set: /**\n             * @param {?} fn\n             * @return {?}\n             */\n            function (fn) {\n                if (!isFunction(fn)) {\n                    throw Error('`compareWith` must be a function.');\n                }\n                this._compareWith = fn;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectComponent.prototype, \"clearSearchOnAdd\", {\n            get: /**\n             * @return {?}\n             */\n            function () { return isDefined(this._clearSearchOnAdd) ? this._clearSearchOnAdd : this.closeOnSelect; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) {\n                this._clearSearchOnAdd = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        ;\n        Object.defineProperty(NgSelectComponent.prototype, \"disabled\", {\n            get: /**\n             * @return {?}\n             */\n            function () { return this.readonly || this._disabled; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(NgSelectComponent.prototype, \"filtered\", {\n            get: /**\n             * @return {?}\n             */\n            function () { return (!!this.searchTerm && this.searchable || this._isComposing); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(NgSelectComponent.prototype, \"selectedItems\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this.itemsList.selectedItems;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectComponent.prototype, \"selectedValues\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this.selectedItems.map((/**\n                 * @param {?} x\n                 * @return {?}\n                 */\n                function (x) { return x.value; }));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectComponent.prototype, \"hasValue\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this.selectedItems.length > 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectComponent.prototype, \"currentPanelPosition\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                if (this.dropdownPanel) {\n                    return this.dropdownPanel.currentPosition;\n                }\n                return undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        NgSelectComponent.prototype.ngOnInit = /**\n         * @return {?}\n         */\n        function () {\n            this._handleKeyPresses();\n            this._setInputAttributes();\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgSelectComponent.prototype.ngOnChanges = /**\n         * @param {?} changes\n         * @return {?}\n         */\n        function (changes) {\n            if (changes.multiple) {\n                this.itemsList.clearSelected();\n            }\n            if (changes.items) {\n                this._setItems(changes.items.currentValue || []);\n            }\n            if (changes.isOpen) {\n                this._manualOpen = isDefined(changes.isOpen.currentValue);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectComponent.prototype.ngAfterViewInit = /**\n         * @return {?}\n         */\n        function () {\n            if (!this._itemsAreUsed) {\n                this.escapeHTML = false;\n                this._setItemsFromNgOptions();\n            }\n            if (isDefined(this.autoFocus)) {\n                this.focus();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectComponent.prototype.ngOnDestroy = /**\n         * @return {?}\n         */\n        function () {\n            this._destroy$.next();\n            this._destroy$.complete();\n        };\n        /**\n         * @param {?} $event\n         * @return {?}\n         */\n        NgSelectComponent.prototype.handleKeyDown = /**\n         * @param {?} $event\n         * @return {?}\n         */\n        function ($event) {\n            /** @type {?} */\n            var keyCode = KeyCode[$event.which];\n            if (keyCode) {\n                if (this.keyDownFn($event) === false) {\n                    return;\n                }\n                this.handleKeyCode($event);\n            }\n            else if ($event.key && $event.key.length === 1) {\n                this._keyPress$.next($event.key.toLocaleLowerCase());\n            }\n        };\n        /**\n         * @param {?} $event\n         * @return {?}\n         */\n        NgSelectComponent.prototype.handleKeyCode = /**\n         * @param {?} $event\n         * @return {?}\n         */\n        function ($event) {\n            switch ($event.which) {\n                case KeyCode.ArrowDown:\n                    this._handleArrowDown($event);\n                    break;\n                case KeyCode.ArrowUp:\n                    this._handleArrowUp($event);\n                    break;\n                case KeyCode.Space:\n                    this._handleSpace($event);\n                    break;\n                case KeyCode.Enter:\n                    this._handleEnter($event);\n                    break;\n                case KeyCode.Tab:\n                    this._handleTab($event);\n                    break;\n                case KeyCode.Esc:\n                    this.close();\n                    $event.preventDefault();\n                    break;\n                case KeyCode.Backspace:\n                    this._handleBackspace();\n                    break;\n            }\n        };\n        /**\n         * @param {?} $event\n         * @return {?}\n         */\n        NgSelectComponent.prototype.handleMousedown = /**\n         * @param {?} $event\n         * @return {?}\n         */\n        function ($event) {\n            /** @type {?} */\n            var target = (/** @type {?} */ ($event.target));\n            if (target.tagName !== 'INPUT') {\n                $event.preventDefault();\n            }\n            if (target.classList.contains('ng-clear-wrapper')) {\n                this.handleClearClick();\n                return;\n            }\n            if (target.classList.contains('ng-arrow-wrapper')) {\n                this.handleArrowClick();\n                return;\n            }\n            if (target.classList.contains('ng-value-icon')) {\n                return;\n            }\n            if (!this.focused) {\n                this.focus();\n            }\n            if (this.searchable) {\n                this.open();\n            }\n            else {\n                this.toggle();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectComponent.prototype.handleArrowClick = /**\n         * @return {?}\n         */\n        function () {\n            if (this.isOpen) {\n                this.close();\n            }\n            else {\n                this.open();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectComponent.prototype.handleClearClick = /**\n         * @return {?}\n         */\n        function () {\n            if (this.hasValue) {\n                this.itemsList.clearSelected(true);\n                this._updateNgModel();\n            }\n            this._clearSearch();\n            this.focus();\n            this.clearEvent.emit();\n            this._onSelectionChanged();\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectComponent.prototype.clearModel = /**\n         * @return {?}\n         */\n        function () {\n            if (!this.clearable) {\n                return;\n            }\n            this.itemsList.clearSelected();\n            this._updateNgModel();\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NgSelectComponent.prototype.writeValue = /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.itemsList.clearSelected();\n            this._handleWriteValue(value);\n            this._cd.markForCheck();\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        NgSelectComponent.prototype.registerOnChange = /**\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            this._onChange = fn;\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        NgSelectComponent.prototype.registerOnTouched = /**\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            this._onTouched = fn;\n        };\n        /**\n         * @param {?} state\n         * @return {?}\n         */\n        NgSelectComponent.prototype.setDisabledState = /**\n         * @param {?} state\n         * @return {?}\n         */\n        function (state) {\n            this._disabled = state;\n            this._cd.markForCheck();\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectComponent.prototype.toggle = /**\n         * @return {?}\n         */\n        function () {\n            if (!this.isOpen) {\n                this.open();\n            }\n            else {\n                this.close();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectComponent.prototype.open = /**\n         * @return {?}\n         */\n        function () {\n            if (this.disabled || this.isOpen || this.itemsList.maxItemsSelected || this._manualOpen) {\n                return;\n            }\n            if (!this._isTypeahead && !this.addTag && this.itemsList.noItemsToSelect) {\n                return;\n            }\n            this.isOpen = true;\n            this.itemsList.markSelectedOrDefault(this.markFirst);\n            this.openEvent.emit();\n            if (!this.searchTerm) {\n                this.focus();\n            }\n            this.detectChanges();\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectComponent.prototype.close = /**\n         * @return {?}\n         */\n        function () {\n            if (!this.isOpen || this._manualOpen) {\n                return;\n            }\n            this.isOpen = false;\n            this._clearSearch();\n            this.itemsList.unmarkItem();\n            this._onTouched();\n            this.closeEvent.emit();\n            this._cd.markForCheck();\n        };\n        /**\n         * @param {?} item\n         * @return {?}\n         */\n        NgSelectComponent.prototype.toggleItem = /**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) {\n            if (!item || item.disabled || this.disabled) {\n                return;\n            }\n            if (this.multiple && item.selected) {\n                this.unselect(item);\n            }\n            else {\n                this.select(item);\n            }\n            this._onSelectionChanged();\n        };\n        /**\n         * @param {?} item\n         * @return {?}\n         */\n        NgSelectComponent.prototype.select = /**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) {\n            if (!item.selected) {\n                this.itemsList.select(item);\n                if (this.clearSearchOnAdd) {\n                    this._clearSearch();\n                }\n                this._updateNgModel();\n                if (this.multiple) {\n                    this.addEvent.emit(item.value);\n                }\n            }\n            if (this.closeOnSelect || this.itemsList.noItemsToSelect) {\n                this.close();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectComponent.prototype.focus = /**\n         * @return {?}\n         */\n        function () {\n            this.searchInput.nativeElement.focus();\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectComponent.prototype.blur = /**\n         * @return {?}\n         */\n        function () {\n            this.searchInput.nativeElement.blur();\n        };\n        /**\n         * @param {?} item\n         * @return {?}\n         */\n        NgSelectComponent.prototype.unselect = /**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) {\n            if (!item) {\n                return;\n            }\n            this.itemsList.unselect(item);\n            this.focus();\n            this._updateNgModel();\n            this.removeEvent.emit(item);\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectComponent.prototype.selectTag = /**\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            var _a;\n            /** @type {?} */\n            var tag;\n            if (isFunction(this.addTag)) {\n                tag = ((/** @type {?} */ (this.addTag)))(this.searchTerm);\n            }\n            else {\n                tag = this._primitive ? this.searchTerm : (_a = {}, _a[this.bindLabel] = this.searchTerm, _a);\n            }\n            /** @type {?} */\n            var handleTag = (/**\n             * @param {?} item\n             * @return {?}\n             */\n            function (item) { return _this._isTypeahead || !_this.isOpen ? _this.itemsList.mapItem(item, null) : _this.itemsList.addItem(item); });\n            if (isPromise(tag)) {\n                tag.then((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) { return _this.select(handleTag(item)); })).catch((/**\n                 * @return {?}\n                 */\n                function () { }));\n            }\n            else if (tag) {\n                this.select(handleTag(tag));\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectComponent.prototype.showClear = /**\n         * @return {?}\n         */\n        function () {\n            return this.clearable && (this.hasValue || this.searchTerm) && !this.disabled;\n        };\n        Object.defineProperty(NgSelectComponent.prototype, \"showAddTag\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                if (!this._validTerm) {\n                    return false;\n                }\n                /** @type {?} */\n                var term = this.searchTerm.toLowerCase().trim();\n                return this.addTag &&\n                    (!this.itemsList.filteredItems.some((/**\n                     * @param {?} x\n                     * @return {?}\n                     */\n                    function (x) { return x.label.toLowerCase() === term; })) &&\n                        (!this.hideSelected && this.isOpen || !this.selectedItems.some((/**\n                         * @param {?} x\n                         * @return {?}\n                         */\n                        function (x) { return x.label.toLowerCase() === term; })))) &&\n                    !this.loading;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        NgSelectComponent.prototype.showNoItemsFound = /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var empty = this.itemsList.filteredItems.length === 0;\n            return ((empty && !this._isTypeahead && !this.loading) ||\n                (empty && this._isTypeahead && this._validTerm && !this.loading)) &&\n                !this.showAddTag;\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectComponent.prototype.showTypeToSearch = /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var empty = this.itemsList.filteredItems.length === 0;\n            return empty && this._isTypeahead && !this._validTerm && !this.loading;\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectComponent.prototype.onCompositionStart = /**\n         * @return {?}\n         */\n        function () {\n            this._isComposing = true;\n        };\n        /**\n         * @param {?} term\n         * @return {?}\n         */\n        NgSelectComponent.prototype.onCompositionEnd = /**\n         * @param {?} term\n         * @return {?}\n         */\n        function (term) {\n            this._isComposing = false;\n            if (this.searchWhileComposing) {\n                return;\n            }\n            this.filter(term);\n        };\n        /**\n         * @param {?} term\n         * @return {?}\n         */\n        NgSelectComponent.prototype.filter = /**\n         * @param {?} term\n         * @return {?}\n         */\n        function (term) {\n            if (this._isComposing && !this.searchWhileComposing) {\n                return;\n            }\n            this.searchTerm = term;\n            if (this._isTypeahead && (this._validTerm || this.minTermLength === 0)) {\n                this.typeahead.next(term);\n            }\n            if (!this._isTypeahead) {\n                this.itemsList.filter(this.searchTerm);\n                if (this.isOpen) {\n                    this.itemsList.markSelectedOrDefault(this.markFirst);\n                }\n            }\n            this.searchEvent.emit({ term: term, items: this.itemsList.filteredItems.map((/**\n                 * @param {?} x\n                 * @return {?}\n                 */\n                function (x) { return x.value; })) });\n            this.open();\n        };\n        /**\n         * @param {?} $event\n         * @return {?}\n         */\n        NgSelectComponent.prototype.onInputFocus = /**\n         * @param {?} $event\n         * @return {?}\n         */\n        function ($event) {\n            if (this.focused) {\n                return;\n            }\n            this.element.classList.add('ng-select-focused');\n            this.focusEvent.emit($event);\n            this.focused = true;\n        };\n        /**\n         * @param {?} $event\n         * @return {?}\n         */\n        NgSelectComponent.prototype.onInputBlur = /**\n         * @param {?} $event\n         * @return {?}\n         */\n        function ($event) {\n            this.element.classList.remove('ng-select-focused');\n            this.blurEvent.emit($event);\n            if (!this.isOpen && !this.disabled) {\n                this._onTouched();\n            }\n            this.focused = false;\n        };\n        /**\n         * @param {?} item\n         * @return {?}\n         */\n        NgSelectComponent.prototype.onItemHover = /**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) {\n            if (item.disabled) {\n                return;\n            }\n            this.itemsList.markItem(item);\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectComponent.prototype.detectChanges = /**\n         * @return {?}\n         */\n        function () {\n            if (!((/** @type {?} */ (this._cd))).destroyed) {\n                this._cd.detectChanges();\n            }\n        };\n        /**\n         * @private\n         * @param {?} items\n         * @return {?}\n         */\n        NgSelectComponent.prototype._setItems = /**\n         * @private\n         * @param {?} items\n         * @return {?}\n         */\n        function (items) {\n            /** @type {?} */\n            var firstItem = items[0];\n            this.bindLabel = this.bindLabel || this._defaultLabel;\n            this._primitive = isDefined(firstItem) ? !isObject(firstItem) : this._primitive || this.bindLabel === this._defaultLabel;\n            this.itemsList.setItems(items);\n            if (items.length > 0 && this.hasValue) {\n                this.itemsList.mapSelectedItems();\n            }\n            if (this.isOpen && isDefined(this.searchTerm) && !this._isTypeahead) {\n                this.itemsList.filter(this.searchTerm);\n            }\n            if (this._isTypeahead || this.isOpen) {\n                this.itemsList.markSelectedOrDefault(this.markFirst);\n            }\n        };\n        /**\n         * @private\n         * @return {?}\n         */\n        NgSelectComponent.prototype._setItemsFromNgOptions = /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            /** @type {?} */\n            var mapNgOptions = (/**\n             * @param {?} options\n             * @return {?}\n             */\n            function (options) {\n                _this.items = options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                function (option) { return ({\n                    $ngOptionValue: option.value,\n                    $ngOptionLabel: option.elementRef.nativeElement.innerHTML,\n                    disabled: option.disabled\n                }); }));\n                _this.itemsList.setItems(_this.items);\n                if (_this.hasValue) {\n                    _this.itemsList.mapSelectedItems();\n                }\n                _this.detectChanges();\n            });\n            /** @type {?} */\n            var handleOptionChange = (/**\n             * @return {?}\n             */\n            function () {\n                /** @type {?} */\n                var changedOrDestroyed = rxjs.merge(_this.ngOptions.changes, _this._destroy$);\n                rxjs.merge.apply(void 0, __spread(_this.ngOptions.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                function (option) { return option.stateChange$; })))).pipe(operators.takeUntil(changedOrDestroyed))\n                    .subscribe((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                function (option) {\n                    /** @type {?} */\n                    var item = _this.itemsList.findItem(option.value);\n                    item.disabled = option.disabled;\n                    item.label = option.label || item.label;\n                    _this._cd.detectChanges();\n                }));\n            });\n            this.ngOptions.changes\n                .pipe(operators.startWith(this.ngOptions), operators.takeUntil(this._destroy$))\n                .subscribe((/**\n             * @param {?} options\n             * @return {?}\n             */\n            function (options) {\n                _this.bindLabel = _this._defaultLabel;\n                mapNgOptions(options);\n                handleOptionChange();\n            }));\n        };\n        /**\n         * @private\n         * @param {?} value\n         * @return {?}\n         */\n        NgSelectComponent.prototype._isValidWriteValue = /**\n         * @private\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var _this = this;\n            if (!isDefined(value) || (this.multiple && value === '') || Array.isArray(value) && value.length === 0) {\n                return false;\n            }\n            /** @type {?} */\n            var validateBinding = (/**\n             * @param {?} item\n             * @return {?}\n             */\n            function (item) {\n                if (!isDefined(_this.compareWith) && isObject(item) && _this.bindValue) {\n                    _this._console.warn(\"Binding object(\" + JSON.stringify(item) + \") with bindValue is not allowed.\");\n                    return false;\n                }\n                return true;\n            });\n            if (this.multiple) {\n                if (!Array.isArray(value)) {\n                    this._console.warn('Multiple select ngModel should be array.');\n                    return false;\n                }\n                return value.every((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) { return validateBinding(item); }));\n            }\n            else {\n                return validateBinding(value);\n            }\n        };\n        /**\n         * @private\n         * @param {?} ngModel\n         * @return {?}\n         */\n        NgSelectComponent.prototype._handleWriteValue = /**\n         * @private\n         * @param {?} ngModel\n         * @return {?}\n         */\n        function (ngModel) {\n            var _this = this;\n            if (!this._isValidWriteValue(ngModel)) {\n                return;\n            }\n            /** @type {?} */\n            var select = (/**\n             * @param {?} val\n             * @return {?}\n             */\n            function (val) {\n                var _a;\n                /** @type {?} */\n                var item = _this.itemsList.findItem(val);\n                if (item) {\n                    _this.itemsList.select(item);\n                }\n                else {\n                    /** @type {?} */\n                    var isValObject = isObject(val);\n                    /** @type {?} */\n                    var isPrimitive = !isValObject && !_this.bindValue;\n                    if ((isValObject || isPrimitive)) {\n                        _this.itemsList.select(_this.itemsList.mapItem(val, null));\n                    }\n                    else if (_this.bindValue) {\n                        item = (_a = {},\n                            _a[_this.bindLabel] = null,\n                            _a[_this.bindValue] = val,\n                            _a);\n                        _this.itemsList.select(_this.itemsList.mapItem(item, null));\n                    }\n                }\n            });\n            if (this.multiple) {\n                ((/** @type {?} */ (ngModel))).forEach((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) { return select(item); }));\n            }\n            else {\n                select(ngModel);\n            }\n        };\n        /**\n         * @private\n         * @return {?}\n         */\n        NgSelectComponent.prototype._handleKeyPresses = /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            if (this.searchable) {\n                return;\n            }\n            this._keyPress$\n                .pipe(operators.takeUntil(this._destroy$), operators.tap((/**\n             * @param {?} letter\n             * @return {?}\n             */\n            function (letter) { return _this._pressedKeys.push(letter); })), operators.debounceTime(200), operators.filter((/**\n             * @return {?}\n             */\n            function () { return _this._pressedKeys.length > 0; })), operators.map((/**\n             * @return {?}\n             */\n            function () { return _this._pressedKeys.join(''); })))\n                .subscribe((/**\n             * @param {?} term\n             * @return {?}\n             */\n            function (term) {\n                /** @type {?} */\n                var item = _this.itemsList.findByLabel(term);\n                if (item) {\n                    if (_this.isOpen) {\n                        _this.itemsList.markItem(item);\n                        _this._cd.markForCheck();\n                    }\n                    else {\n                        _this.select(item);\n                    }\n                }\n                _this._pressedKeys = [];\n            }));\n        };\n        /**\n         * @private\n         * @return {?}\n         */\n        NgSelectComponent.prototype._setInputAttributes = /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            var e_1, _a;\n            /** @type {?} */\n            var input = this.searchInput.nativeElement;\n            /** @type {?} */\n            var attributes = __assign({ type: 'text', autocorrect: 'off', autocapitalize: 'off', autocomplete: this.labelForId ? 'off' : this.dropdownId }, this.inputAttrs);\n            try {\n                for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var key = _c.value;\n                    input.setAttribute(key, attributes[key]);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        };\n        /**\n         * @private\n         * @return {?}\n         */\n        NgSelectComponent.prototype._updateNgModel = /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            var e_2, _a;\n            /** @type {?} */\n            var model = [];\n            try {\n                for (var _b = __values(this.selectedItems), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var item = _c.value;\n                    if (this.bindValue) {\n                        /** @type {?} */\n                        var value = null;\n                        if (item.children) {\n                            /** @type {?} */\n                            var groupKey = this.groupValue ? this.bindValue : (/** @type {?} */ (this.groupBy));\n                            value = item.value[groupKey || (/** @type {?} */ (this.groupBy))];\n                        }\n                        else {\n                            value = this.itemsList.resolveNested(item.value, this.bindValue);\n                        }\n                        model.push(value);\n                    }\n                    else {\n                        model.push(item.value);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            /** @type {?} */\n            var selected = this.selectedItems.map((/**\n             * @param {?} x\n             * @return {?}\n             */\n            function (x) { return x.value; }));\n            if (this.multiple) {\n                this._onChange(model);\n                this.changeEvent.emit(selected);\n            }\n            else {\n                this._onChange(isDefined(model[0]) ? model[0] : null);\n                this.changeEvent.emit(selected[0]);\n            }\n            this._cd.markForCheck();\n        };\n        /**\n         * @private\n         * @return {?}\n         */\n        NgSelectComponent.prototype._clearSearch = /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            if (!this.searchTerm) {\n                return;\n            }\n            this._changeSearch(null);\n            this.itemsList.resetFilteredItems();\n        };\n        /**\n         * @private\n         * @param {?} searchTerm\n         * @return {?}\n         */\n        NgSelectComponent.prototype._changeSearch = /**\n         * @private\n         * @param {?} searchTerm\n         * @return {?}\n         */\n        function (searchTerm) {\n            this.searchTerm = searchTerm;\n            if (this._isTypeahead) {\n                this.typeahead.next(searchTerm);\n            }\n        };\n        /**\n         * @private\n         * @return {?}\n         */\n        NgSelectComponent.prototype._scrollToMarked = /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            if (!this.isOpen || !this.dropdownPanel) {\n                return;\n            }\n            this.dropdownPanel.scrollTo(this.itemsList.markedItem);\n        };\n        /**\n         * @private\n         * @return {?}\n         */\n        NgSelectComponent.prototype._scrollToTag = /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            if (!this.isOpen || !this.dropdownPanel) {\n                return;\n            }\n            this.dropdownPanel.scrollToTag();\n        };\n        /**\n         * @private\n         * @return {?}\n         */\n        NgSelectComponent.prototype._onSelectionChanged = /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            if (this.isOpen && this.multiple && this.appendTo) {\n                // Make sure items are rendered.\n                this._cd.detectChanges();\n                this.dropdownPanel.adjustPosition();\n            }\n        };\n        /**\n         * @private\n         * @param {?} $event\n         * @return {?}\n         */\n        NgSelectComponent.prototype._handleTab = /**\n         * @private\n         * @param {?} $event\n         * @return {?}\n         */\n        function ($event) {\n            if (this.isOpen === false && !this.addTag) {\n                return;\n            }\n            if (this.selectOnTab) {\n                if (this.itemsList.markedItem) {\n                    this.toggleItem(this.itemsList.markedItem);\n                    $event.preventDefault();\n                }\n                else if (this.showAddTag) {\n                    this.selectTag();\n                    $event.preventDefault();\n                }\n                else {\n                    this.close();\n                }\n            }\n            else {\n                this.close();\n            }\n        };\n        /**\n         * @private\n         * @param {?} $event\n         * @return {?}\n         */\n        NgSelectComponent.prototype._handleEnter = /**\n         * @private\n         * @param {?} $event\n         * @return {?}\n         */\n        function ($event) {\n            if (this.isOpen || this._manualOpen) {\n                if (this.itemsList.markedItem) {\n                    this.toggleItem(this.itemsList.markedItem);\n                }\n                else if (this.showAddTag) {\n                    this.selectTag();\n                }\n            }\n            else if (this.openOnEnter) {\n                this.open();\n            }\n            else {\n                return;\n            }\n            $event.preventDefault();\n        };\n        /**\n         * @private\n         * @param {?} $event\n         * @return {?}\n         */\n        NgSelectComponent.prototype._handleSpace = /**\n         * @private\n         * @param {?} $event\n         * @return {?}\n         */\n        function ($event) {\n            if (this.isOpen || this._manualOpen) {\n                return;\n            }\n            this.open();\n            $event.preventDefault();\n        };\n        /**\n         * @private\n         * @param {?} $event\n         * @return {?}\n         */\n        NgSelectComponent.prototype._handleArrowDown = /**\n         * @private\n         * @param {?} $event\n         * @return {?}\n         */\n        function ($event) {\n            if (this._nextItemIsTag(+1)) {\n                this.itemsList.unmarkItem();\n                this._scrollToTag();\n            }\n            else {\n                this.itemsList.markNextItem();\n                this._scrollToMarked();\n            }\n            this.open();\n            $event.preventDefault();\n        };\n        /**\n         * @private\n         * @param {?} $event\n         * @return {?}\n         */\n        NgSelectComponent.prototype._handleArrowUp = /**\n         * @private\n         * @param {?} $event\n         * @return {?}\n         */\n        function ($event) {\n            if (!this.isOpen) {\n                return;\n            }\n            if (this._nextItemIsTag(-1)) {\n                this.itemsList.unmarkItem();\n                this._scrollToTag();\n            }\n            else {\n                this.itemsList.markPreviousItem();\n                this._scrollToMarked();\n            }\n            $event.preventDefault();\n        };\n        /**\n         * @private\n         * @param {?} nextStep\n         * @return {?}\n         */\n        NgSelectComponent.prototype._nextItemIsTag = /**\n         * @private\n         * @param {?} nextStep\n         * @return {?}\n         */\n        function (nextStep) {\n            /** @type {?} */\n            var nextIndex = this.itemsList.markedIndex + nextStep;\n            return this.addTag && this.searchTerm\n                && this.itemsList.markedItem\n                && (nextIndex < 0 || nextIndex === this.itemsList.filteredItems.length);\n        };\n        /**\n         * @private\n         * @return {?}\n         */\n        NgSelectComponent.prototype._handleBackspace = /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            if (this.searchTerm || !this.clearable || !this.clearOnBackspace || !this.hasValue) {\n                return;\n            }\n            if (this.multiple) {\n                this.unselect(this.itemsList.lastSelectedItem);\n            }\n            else {\n                this.clearModel();\n            }\n        };\n        Object.defineProperty(NgSelectComponent.prototype, \"_isTypeahead\", {\n            get: /**\n             * @private\n             * @return {?}\n             */\n            function () {\n                return this.typeahead && this.typeahead.observers.length > 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectComponent.prototype, \"_validTerm\", {\n            get: /**\n             * @private\n             * @return {?}\n             */\n            function () {\n                /** @type {?} */\n                var term = this.searchTerm && this.searchTerm.trim();\n                return term && term.length >= this.minTermLength;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @private\n         * @param {?} config\n         * @return {?}\n         */\n        NgSelectComponent.prototype._mergeGlobalConfig = /**\n         * @private\n         * @param {?} config\n         * @return {?}\n         */\n        function (config) {\n            this.placeholder = this.placeholder || config.placeholder;\n            this.notFoundText = this.notFoundText || config.notFoundText;\n            this.typeToSearchText = this.typeToSearchText || config.typeToSearchText;\n            this.addTagText = this.addTagText || config.addTagText;\n            this.loadingText = this.loadingText || config.loadingText;\n            this.clearAllText = this.clearAllText || config.clearAllText;\n            this.virtualScroll = isDefined(this.virtualScroll)\n                ? this.virtualScroll\n                : isDefined(config.disableVirtualScroll) ? !config.disableVirtualScroll : false;\n            this.openOnEnter = isDefined(this.openOnEnter) ? this.openOnEnter : config.openOnEnter;\n            this.appendTo = this.appendTo || config.appendTo;\n            this.bindValue = this.bindValue || config.bindValue;\n            this.appearance = this.appearance || config.appearance;\n        };\n        NgSelectComponent.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ng-select',\n                        template: \"<div\\n    (mousedown)=\\\"handleMousedown($event)\\\"\\n    [class.ng-appearance-outline]=\\\"appearance === 'outline'\\\"\\n    [class.ng-has-value]=\\\"hasValue\\\"\\n    class=\\\"ng-select-container\\\">\\n\\n    <div class=\\\"ng-value-container\\\">\\n        <div class=\\\"ng-placeholder\\\">{{placeholder}}</div>\\n\\n        <ng-container *ngIf=\\\"!multiLabelTemplate && selectedItems.length > 0\\\">\\n            <div [class.ng-value-disabled]=\\\"item.disabled\\\" class=\\\"ng-value\\\" *ngFor=\\\"let item of selectedItems; trackBy: trackByOption\\\">\\n                <ng-template #defaultLabelTemplate>\\n                    <span class=\\\"ng-value-icon left\\\" (click)=\\\"unselect(item);\\\" aria-hidden=\\\"true\\\">\\u00D7</span>\\n                    <span class=\\\"ng-value-label\\\" [ngItemLabel]=\\\"item.label\\\" [escape]=\\\"escapeHTML\\\"></span>\\n                </ng-template>\\n\\n                <ng-template\\n                    [ngTemplateOutlet]=\\\"labelTemplate || defaultLabelTemplate\\\"\\n                    [ngTemplateOutletContext]=\\\"{ item: item.value, clear: clearItem, label: item.label }\\\">\\n                </ng-template>\\n            </div>\\n        </ng-container>\\n\\n        <ng-template *ngIf=\\\"multiLabelTemplate && selectedValues.length > 0\\\"\\n                [ngTemplateOutlet]=\\\"multiLabelTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ items: selectedValues, clear: clearItem }\\\">\\n        </ng-template>\\n\\n        <div class=\\\"ng-input\\\">\\n            <input #searchInput\\n                   [attr.id]=\\\"labelForId\\\"\\n                   [attr.tabindex]=\\\"tabIndex\\\"\\n                   [readOnly]=\\\"!searchable || itemsList.maxItemsSelected\\\"\\n                   [disabled]=\\\"disabled\\\"\\n                   [value]=\\\"searchTerm ? searchTerm : ''\\\"\\n                   (input)=\\\"filter(searchInput.value)\\\"\\n                   (compositionstart)=\\\"onCompositionStart()\\\"\\n                   (compositionend)=\\\"onCompositionEnd(searchInput.value)\\\"\\n                   (focus)=\\\"onInputFocus($event)\\\"\\n                   (blur)=\\\"onInputBlur($event)\\\"\\n                   (change)=\\\"$event.stopPropagation()\\\"\\n                   role=\\\"combobox\\\"\\n                   [attr.aria-expanded]=\\\"isOpen\\\"\\n                   [attr.aria-owns]=\\\"isOpen ? dropdownId : null\\\"\\n                   [attr.aria-activedescendant]=\\\"isOpen ? itemsList?.markedItem?.htmlId : null\\\">\\n        </div>\\n    </div>\\n\\n    <ng-container *ngIf=\\\"loading\\\">\\n        <ng-template #defaultLoadingSpinnerTemplate>\\n            <div class=\\\"ng-spinner-loader\\\"></div>\\n        </ng-template>\\n\\n        <ng-template\\n            [ngTemplateOutlet]=\\\"loadingSpinnerTemplate || defaultLoadingSpinnerTemplate\\\">\\n        </ng-template>\\n    </ng-container>\\n\\n    <span *ngIf=\\\"showClear()\\\" class=\\\"ng-clear-wrapper\\\" title=\\\"{{clearAllText}}\\\">\\n        <span class=\\\"ng-clear\\\" aria-hidden=\\\"true\\\">\\u00D7</span>\\n    </span>\\n\\n    <span class=\\\"ng-arrow-wrapper\\\">\\n        <span class=\\\"ng-arrow\\\"></span>\\n    </span>\\n</div>\\n\\n<ng-dropdown-panel *ngIf=\\\"isOpen\\\"\\n                   class=\\\"ng-dropdown-panel\\\"\\n                   [virtualScroll]=\\\"virtualScroll\\\"\\n                   [bufferAmount]=\\\"bufferAmount\\\"\\n                   [appendTo]=\\\"appendTo\\\"\\n                   [position]=\\\"dropdownPosition\\\"\\n                   [headerTemplate]=\\\"headerTemplate\\\"\\n                   [footerTemplate]=\\\"footerTemplate\\\"\\n                   [filterValue]=\\\"searchTerm\\\"\\n                   [items]=\\\"itemsList.filteredItems\\\"\\n                   [markedItem]=\\\"itemsList.markedItem\\\"\\n                   (update)=\\\"viewPortItems = $event\\\"\\n                   (scroll)=\\\"scroll.emit($event)\\\"\\n                   (scrollToEnd)=\\\"scrollToEnd.emit($event)\\\"\\n                   (outsideClick)=\\\"close()\\\"\\n                   [class.ng-select-multiple]=\\\"multiple\\\"\\n                   [ngClass]=\\\"appendTo ? classes : null\\\"\\n                   [id]=\\\"dropdownId\\\">\\n\\n    <ng-container>\\n        <div class=\\\"ng-option\\\" [attr.role]=\\\"item.children ? 'group' : 'option'\\\" (click)=\\\"toggleItem(item)\\\" (mouseover)=\\\"onItemHover(item)\\\"\\n                *ngFor=\\\"let item of viewPortItems; trackBy: trackByOption\\\"\\n                [class.ng-option-disabled]=\\\"item.disabled\\\"\\n                [class.ng-option-selected]=\\\"item.selected\\\"\\n                [class.ng-optgroup]=\\\"item.children\\\"\\n                [class.ng-option]=\\\"!item.children\\\"\\n                [class.ng-option-child]=\\\"!!item.parent\\\"\\n                [class.ng-option-marked]=\\\"item === itemsList.markedItem\\\"\\n                [attr.aria-selected]=\\\"item.selected\\\"\\n                [attr.id]=\\\"item?.htmlId\\\">\\n\\n            <ng-template #defaultOptionTemplate>\\n                <span class=\\\"ng-option-label\\\" [ngItemLabel]=\\\"item.label\\\" [escape]=\\\"escapeHTML\\\"></span>\\n            </ng-template>\\n\\n            <ng-template\\n                [ngTemplateOutlet]=\\\"item.children ? (optgroupTemplate || defaultOptionTemplate) : (optionTemplate || defaultOptionTemplate)\\\"\\n                [ngTemplateOutletContext]=\\\"{ item: item.value, item$:item, index: item.index, searchTerm: searchTerm }\\\">\\n            </ng-template>\\n        </div>\\n\\n        <div class=\\\"ng-option\\\" [class.ng-option-marked]=\\\"!itemsList.markedItem\\\" (mouseover)=\\\"itemsList.unmarkItem()\\\" role=\\\"option\\\" (click)=\\\"selectTag()\\\" *ngIf=\\\"showAddTag\\\">\\n            <ng-template #defaultTagTemplate>\\n                <span><span class=\\\"ng-tag-label\\\">{{addTagText}}</span>\\\"{{searchTerm}}\\\"</span>\\n            </ng-template>\\n\\n            <ng-template\\n                [ngTemplateOutlet]=\\\"tagTemplate || defaultTagTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ searchTerm: searchTerm }\\\">\\n            </ng-template>\\n        </div>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"showNoItemsFound()\\\">\\n        <ng-template #defaultNotFoundTemplate>\\n            <div class=\\\"ng-option ng-option-disabled\\\">{{notFoundText}}</div>\\n        </ng-template>\\n\\n        <ng-template\\n            [ngTemplateOutlet]=\\\"notFoundTemplate || defaultNotFoundTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{ searchTerm: searchTerm }\\\">\\n        </ng-template>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"showTypeToSearch()\\\">\\n        <ng-template #defaultTypeToSearchTemplate>\\n            <div class=\\\"ng-option ng-option-disabled\\\">{{typeToSearchText}}</div>\\n        </ng-template>\\n\\n        <ng-template\\n            [ngTemplateOutlet]=\\\"typeToSearchTemplate || defaultTypeToSearchTemplate\\\">\\n        </ng-template>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"loading && itemsList.filteredItems.length === 0\\\">\\n        <ng-template #defaultLoadingTextTemplate>\\n            <div class=\\\"ng-option ng-option-disabled\\\">{{loadingText}}</div>\\n        </ng-template>\\n\\n        <ng-template\\n            [ngTemplateOutlet]=\\\"loadingTextTemplate || defaultLoadingTextTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{ searchTerm: searchTerm }\\\">\\n        </ng-template>\\n    </ng-container>\\n\\n</ng-dropdown-panel>\\n\",\n                        providers: [{\n                                provide: forms.NG_VALUE_ACCESSOR,\n                                useExisting: core.forwardRef((/**\n                                 * @return {?}\n                                 */\n                                function () { return NgSelectComponent; })),\n                                multi: true\n                            }, NgDropdownPanelService],\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        host: {\n                            'role': 'listbox',\n                            'class': 'ng-select',\n                            '[class.ng-select-single]': '!multiple',\n                        },\n                        styles: [\".ng-select{position:relative;display:block;box-sizing:border-box}.ng-select div,.ng-select input,.ng-select span{box-sizing:border-box}.ng-select [hidden]{display:none}.ng-select.ng-select-searchable .ng-select-container .ng-value-container .ng-input{opacity:1}.ng-select.ng-select-opened .ng-select-container{z-index:1001}.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-placeholder,.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-value{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.ng-select.ng-select-disabled .ng-arrow-wrapper{cursor:default}.ng-select.ng-select-filtered .ng-placeholder{display:none}.ng-select .ng-select-container{cursor:default;display:-webkit-box;display:flex;outline:0;overflow:hidden;position:relative;width:100%}.ng-select .ng-select-container .ng-value-container{display:-webkit-box;display:flex;-webkit-box-flex:1;flex:1}.ng-select .ng-select-container .ng-value-container .ng-input{opacity:0}.ng-select .ng-select-container .ng-value-container .ng-input>input{box-sizing:content-box;background:none;border:0;box-shadow:none;outline:0;cursor:default;width:100%}.ng-select .ng-select-container .ng-value-container .ng-input>input::-ms-clear{display:none}.ng-select .ng-select-container .ng-value-container .ng-input>input[readonly]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:0;padding:0}.ng-select.ng-select-single.ng-select-filtered .ng-select-container .ng-value-container .ng-value{visibility:hidden}.ng-select.ng-select-single .ng-select-container .ng-value-container,.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-input{position:absolute;left:0;width:100%}.ng-select.ng-select-multiple.ng-select-disabled>.ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container{flex-wrap:wrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value{white-space:nowrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value.ng-value-disabled .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon{cursor:pointer}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-input{-webkit-box-flex:1;flex:1;z-index:2}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{position:absolute;z-index:1}.ng-select .ng-clear-wrapper{cursor:pointer;position:relative;width:17px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ng-select .ng-clear-wrapper .ng-clear{display:inline-block;font-size:18px;line-height:1;pointer-events:none}.ng-select .ng-spinner-loader{border-radius:50%;width:17px;height:17px;margin-right:5px;font-size:10px;position:relative;text-indent:-9999em;border-top:2px solid rgba(66,66,66,.2);border-right:2px solid rgba(66,66,66,.2);border-bottom:2px solid rgba(66,66,66,.2);border-left:2px solid #424242;-webkit-transform:translateZ(0);transform:translateZ(0);-webkit-animation:.8s linear infinite load8;animation:.8s linear infinite load8}.ng-select .ng-spinner-loader:after{border-radius:50%;width:17px;height:17px}@-webkit-keyframes load8{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes load8{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.ng-select .ng-arrow-wrapper{cursor:pointer;position:relative;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ng-select .ng-arrow-wrapper .ng-arrow{pointer-events:none;display:inline-block;height:0;width:0;position:relative}.ng-dropdown-panel{box-sizing:border-box;position:absolute;opacity:0;width:100%;z-index:1050;-webkit-overflow-scrolling:touch}.ng-dropdown-panel .ng-dropdown-panel-items{display:block;height:auto;box-sizing:border-box;max-height:240px;overflow-y:auto}.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{box-sizing:border-box;cursor:pointer;display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .highlighted{font-weight:700;text-decoration:underline}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.disabled{cursor:default}.ng-dropdown-panel .scroll-host{overflow:hidden;overflow-y:auto;position:relative;display:block;-webkit-overflow-scrolling:touch}.ng-dropdown-panel .scrollable-content{top:0;left:0;width:100%;height:100%;position:absolute}.ng-dropdown-panel .total-padding{width:1px;opacity:0}\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        NgSelectComponent.ctorParameters = function () { return [\n            { type: String, decorators: [{ type: core.Attribute, args: ['class',] }] },\n            { type: undefined, decorators: [{ type: core.Attribute, args: ['autofocus',] }] },\n            { type: NgSelectConfig },\n            { type: undefined, decorators: [{ type: core.Inject, args: [SELECTION_MODEL_FACTORY,] }] },\n            { type: core.ElementRef },\n            { type: core.ChangeDetectorRef },\n            { type: ConsoleService }\n        ]; };\n        NgSelectComponent.propDecorators = {\n            bindLabel: [{ type: core.Input }],\n            bindValue: [{ type: core.Input }],\n            markFirst: [{ type: core.Input }],\n            placeholder: [{ type: core.Input }],\n            notFoundText: [{ type: core.Input }],\n            typeToSearchText: [{ type: core.Input }],\n            addTagText: [{ type: core.Input }],\n            loadingText: [{ type: core.Input }],\n            clearAllText: [{ type: core.Input }],\n            appearance: [{ type: core.Input }],\n            dropdownPosition: [{ type: core.Input }],\n            appendTo: [{ type: core.Input }],\n            loading: [{ type: core.Input }],\n            closeOnSelect: [{ type: core.Input }],\n            hideSelected: [{ type: core.Input }],\n            selectOnTab: [{ type: core.Input }],\n            openOnEnter: [{ type: core.Input }],\n            maxSelectedItems: [{ type: core.Input }],\n            groupBy: [{ type: core.Input }],\n            groupValue: [{ type: core.Input }],\n            bufferAmount: [{ type: core.Input }],\n            virtualScroll: [{ type: core.Input }],\n            selectableGroup: [{ type: core.Input }],\n            selectableGroupAsModel: [{ type: core.Input }],\n            searchFn: [{ type: core.Input }],\n            trackByFn: [{ type: core.Input }],\n            clearOnBackspace: [{ type: core.Input }],\n            labelForId: [{ type: core.Input }],\n            inputAttrs: [{ type: core.Input }],\n            tabIndex: [{ type: core.Input }],\n            readonly: [{ type: core.Input }],\n            searchWhileComposing: [{ type: core.Input }],\n            minTermLength: [{ type: core.Input }],\n            keyDownFn: [{ type: core.Input }],\n            typeahead: [{ type: core.Input }, { type: core.HostBinding, args: ['class.ng-select-typeahead',] }],\n            multiple: [{ type: core.Input }, { type: core.HostBinding, args: ['class.ng-select-multiple',] }],\n            addTag: [{ type: core.Input }, { type: core.HostBinding, args: ['class.ng-select-taggable',] }],\n            searchable: [{ type: core.Input }, { type: core.HostBinding, args: ['class.ng-select-searchable',] }],\n            clearable: [{ type: core.Input }, { type: core.HostBinding, args: ['class.ng-select-clearable',] }],\n            isOpen: [{ type: core.Input }, { type: core.HostBinding, args: ['class.ng-select-opened',] }],\n            items: [{ type: core.Input }],\n            compareWith: [{ type: core.Input }],\n            clearSearchOnAdd: [{ type: core.Input }],\n            blurEvent: [{ type: core.Output, args: ['blur',] }],\n            focusEvent: [{ type: core.Output, args: ['focus',] }],\n            changeEvent: [{ type: core.Output, args: ['change',] }],\n            openEvent: [{ type: core.Output, args: ['open',] }],\n            closeEvent: [{ type: core.Output, args: ['close',] }],\n            searchEvent: [{ type: core.Output, args: ['search',] }],\n            clearEvent: [{ type: core.Output, args: ['clear',] }],\n            addEvent: [{ type: core.Output, args: ['add',] }],\n            removeEvent: [{ type: core.Output, args: ['remove',] }],\n            scroll: [{ type: core.Output, args: ['scroll',] }],\n            scrollToEnd: [{ type: core.Output, args: ['scrollToEnd',] }],\n            optionTemplate: [{ type: core.ContentChild, args: [NgOptionTemplateDirective, { read: core.TemplateRef, static: false },] }],\n            optgroupTemplate: [{ type: core.ContentChild, args: [NgOptgroupTemplateDirective, { read: core.TemplateRef, static: false },] }],\n            labelTemplate: [{ type: core.ContentChild, args: [NgLabelTemplateDirective, { read: core.TemplateRef, static: false },] }],\n            multiLabelTemplate: [{ type: core.ContentChild, args: [NgMultiLabelTemplateDirective, { read: core.TemplateRef, static: false },] }],\n            headerTemplate: [{ type: core.ContentChild, args: [NgHeaderTemplateDirective, { read: core.TemplateRef, static: false },] }],\n            footerTemplate: [{ type: core.ContentChild, args: [NgFooterTemplateDirective, { read: core.TemplateRef, static: false },] }],\n            notFoundTemplate: [{ type: core.ContentChild, args: [NgNotFoundTemplateDirective, { read: core.TemplateRef, static: false },] }],\n            typeToSearchTemplate: [{ type: core.ContentChild, args: [NgTypeToSearchTemplateDirective, { read: core.TemplateRef, static: false },] }],\n            loadingTextTemplate: [{ type: core.ContentChild, args: [NgLoadingTextTemplateDirective, { read: core.TemplateRef, static: false },] }],\n            tagTemplate: [{ type: core.ContentChild, args: [NgTagTemplateDirective, { read: core.TemplateRef, static: false },] }],\n            loadingSpinnerTemplate: [{ type: core.ContentChild, args: [NgLoadingSpinnerTemplateDirective, { read: core.TemplateRef, static: false },] }],\n            dropdownPanel: [{ type: core.ViewChild, args: [core.forwardRef((/**\n                         * @return {?}\n                         */\n                        function () { return NgDropdownPanelComponent; })), { static: false },] }],\n            searchInput: [{ type: core.ViewChild, args: ['searchInput', { static: true },] }],\n            ngOptions: [{ type: core.ContentChildren, args: [NgOptionComponent, { descendants: true },] }],\n            disabled: [{ type: core.HostBinding, args: ['class.ng-select-disabled',] }],\n            filtered: [{ type: core.HostBinding, args: ['class.ng-select-filtered',] }],\n            handleKeyDown: [{ type: core.HostListener, args: ['keydown', ['$event'],] }]\n        };\n        return NgSelectComponent;\n    }());\n    if (false) {\n        /** @type {?} */\n        NgSelectComponent.prototype.bindLabel;\n        /** @type {?} */\n        NgSelectComponent.prototype.bindValue;\n        /** @type {?} */\n        NgSelectComponent.prototype.markFirst;\n        /** @type {?} */\n        NgSelectComponent.prototype.placeholder;\n        /** @type {?} */\n        NgSelectComponent.prototype.notFoundText;\n        /** @type {?} */\n        NgSelectComponent.prototype.typeToSearchText;\n        /** @type {?} */\n        NgSelectComponent.prototype.addTagText;\n        /** @type {?} */\n        NgSelectComponent.prototype.loadingText;\n        /** @type {?} */\n        NgSelectComponent.prototype.clearAllText;\n        /** @type {?} */\n        NgSelectComponent.prototype.appearance;\n        /** @type {?} */\n        NgSelectComponent.prototype.dropdownPosition;\n        /** @type {?} */\n        NgSelectComponent.prototype.appendTo;\n        /** @type {?} */\n        NgSelectComponent.prototype.loading;\n        /** @type {?} */\n        NgSelectComponent.prototype.closeOnSelect;\n        /** @type {?} */\n        NgSelectComponent.prototype.hideSelected;\n        /** @type {?} */\n        NgSelectComponent.prototype.selectOnTab;\n        /** @type {?} */\n        NgSelectComponent.prototype.openOnEnter;\n        /** @type {?} */\n        NgSelectComponent.prototype.maxSelectedItems;\n        /** @type {?} */\n        NgSelectComponent.prototype.groupBy;\n        /** @type {?} */\n        NgSelectComponent.prototype.groupValue;\n        /** @type {?} */\n        NgSelectComponent.prototype.bufferAmount;\n        /** @type {?} */\n        NgSelectComponent.prototype.virtualScroll;\n        /** @type {?} */\n        NgSelectComponent.prototype.selectableGroup;\n        /** @type {?} */\n        NgSelectComponent.prototype.selectableGroupAsModel;\n        /** @type {?} */\n        NgSelectComponent.prototype.searchFn;\n        /** @type {?} */\n        NgSelectComponent.prototype.trackByFn;\n        /** @type {?} */\n        NgSelectComponent.prototype.clearOnBackspace;\n        /** @type {?} */\n        NgSelectComponent.prototype.labelForId;\n        /** @type {?} */\n        NgSelectComponent.prototype.inputAttrs;\n        /** @type {?} */\n        NgSelectComponent.prototype.tabIndex;\n        /** @type {?} */\n        NgSelectComponent.prototype.readonly;\n        /** @type {?} */\n        NgSelectComponent.prototype.searchWhileComposing;\n        /** @type {?} */\n        NgSelectComponent.prototype.minTermLength;\n        /** @type {?} */\n        NgSelectComponent.prototype.keyDownFn;\n        /** @type {?} */\n        NgSelectComponent.prototype.typeahead;\n        /** @type {?} */\n        NgSelectComponent.prototype.multiple;\n        /** @type {?} */\n        NgSelectComponent.prototype.addTag;\n        /** @type {?} */\n        NgSelectComponent.prototype.searchable;\n        /** @type {?} */\n        NgSelectComponent.prototype.clearable;\n        /** @type {?} */\n        NgSelectComponent.prototype.isOpen;\n        /** @type {?} */\n        NgSelectComponent.prototype.blurEvent;\n        /** @type {?} */\n        NgSelectComponent.prototype.focusEvent;\n        /** @type {?} */\n        NgSelectComponent.prototype.changeEvent;\n        /** @type {?} */\n        NgSelectComponent.prototype.openEvent;\n        /** @type {?} */\n        NgSelectComponent.prototype.closeEvent;\n        /** @type {?} */\n        NgSelectComponent.prototype.searchEvent;\n        /** @type {?} */\n        NgSelectComponent.prototype.clearEvent;\n        /** @type {?} */\n        NgSelectComponent.prototype.addEvent;\n        /** @type {?} */\n        NgSelectComponent.prototype.removeEvent;\n        /** @type {?} */\n        NgSelectComponent.prototype.scroll;\n        /** @type {?} */\n        NgSelectComponent.prototype.scrollToEnd;\n        /** @type {?} */\n        NgSelectComponent.prototype.optionTemplate;\n        /** @type {?} */\n        NgSelectComponent.prototype.optgroupTemplate;\n        /** @type {?} */\n        NgSelectComponent.prototype.labelTemplate;\n        /** @type {?} */\n        NgSelectComponent.prototype.multiLabelTemplate;\n        /** @type {?} */\n        NgSelectComponent.prototype.headerTemplate;\n        /** @type {?} */\n        NgSelectComponent.prototype.footerTemplate;\n        /** @type {?} */\n        NgSelectComponent.prototype.notFoundTemplate;\n        /** @type {?} */\n        NgSelectComponent.prototype.typeToSearchTemplate;\n        /** @type {?} */\n        NgSelectComponent.prototype.loadingTextTemplate;\n        /** @type {?} */\n        NgSelectComponent.prototype.tagTemplate;\n        /** @type {?} */\n        NgSelectComponent.prototype.loadingSpinnerTemplate;\n        /** @type {?} */\n        NgSelectComponent.prototype.dropdownPanel;\n        /** @type {?} */\n        NgSelectComponent.prototype.searchInput;\n        /** @type {?} */\n        NgSelectComponent.prototype.ngOptions;\n        /** @type {?} */\n        NgSelectComponent.prototype.itemsList;\n        /** @type {?} */\n        NgSelectComponent.prototype.viewPortItems;\n        /** @type {?} */\n        NgSelectComponent.prototype.searchTerm;\n        /** @type {?} */\n        NgSelectComponent.prototype.dropdownId;\n        /** @type {?} */\n        NgSelectComponent.prototype.element;\n        /** @type {?} */\n        NgSelectComponent.prototype.focused;\n        /** @type {?} */\n        NgSelectComponent.prototype.escapeHTML;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgSelectComponent.prototype._items;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgSelectComponent.prototype._itemsAreUsed;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgSelectComponent.prototype._defaultLabel;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgSelectComponent.prototype._primitive;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgSelectComponent.prototype._manualOpen;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgSelectComponent.prototype._disabled;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgSelectComponent.prototype._pressedKeys;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgSelectComponent.prototype._compareWith;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgSelectComponent.prototype._clearSearchOnAdd;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgSelectComponent.prototype._isComposing;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgSelectComponent.prototype._destroy$;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgSelectComponent.prototype._keyPress$;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgSelectComponent.prototype._onChange;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgSelectComponent.prototype._onTouched;\n        /** @type {?} */\n        NgSelectComponent.prototype.clearItem;\n        /** @type {?} */\n        NgSelectComponent.prototype.trackByOption;\n        /** @type {?} */\n        NgSelectComponent.prototype.classes;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgSelectComponent.prototype.autoFocus;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgSelectComponent.prototype._cd;\n        /**\n         * @type {?}\n         * @private\n         */\n        NgSelectComponent.prototype._console;\n        /* Skipping unhandled member: ;*/\n        /* Skipping unhandled member: ;*/\n        /* Skipping unhandled member: ;*/\n        /* Skipping unhandled member: ;*/\n        /* Skipping unhandled member: ;*/\n        /* Skipping unhandled member: ;*/\n    }\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n     */\n    /**\n     * @return {?}\n     */\n    function DefaultSelectionModelFactory() {\n        return new DefaultSelectionModel();\n    }\n    /**\n     * @record\n     */\n    function SelectionModel() { }\n    if (false) {\n        /** @type {?} */\n        SelectionModel.prototype.value;\n        /**\n         * @param {?} item\n         * @param {?} multiple\n         * @param {?} selectableGroupAsModel\n         * @return {?}\n         */\n        SelectionModel.prototype.select = function (item, multiple, selectableGroupAsModel) { };\n        /**\n         * @param {?} item\n         * @param {?} multiple\n         * @return {?}\n         */\n        SelectionModel.prototype.unselect = function (item, multiple) { };\n        /**\n         * @param {?} keepDisabled\n         * @return {?}\n         */\n        SelectionModel.prototype.clear = function (keepDisabled) { };\n    }\n    var DefaultSelectionModel = /** @class */ (function () {\n        function DefaultSelectionModel() {\n            this._selected = [];\n        }\n        Object.defineProperty(DefaultSelectionModel.prototype, \"value\", {\n            get: /**\n             * @return {?}\n             */\n            function () {\n                return this._selected;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} item\n         * @param {?} multiple\n         * @param {?} groupAsModel\n         * @return {?}\n         */\n        DefaultSelectionModel.prototype.select = /**\n         * @param {?} item\n         * @param {?} multiple\n         * @param {?} groupAsModel\n         * @return {?}\n         */\n        function (item, multiple, groupAsModel) {\n            item.selected = true;\n            if (!item.children || (!multiple && groupAsModel)) {\n                this._selected.push(item);\n            }\n            if (multiple) {\n                if (item.parent) {\n                    /** @type {?} */\n                    var childrenCount = item.parent.children.length;\n                    /** @type {?} */\n                    var selectedCount = item.parent.children.filter((/**\n                     * @param {?} x\n                     * @return {?}\n                     */\n                    function (x) { return x.selected; })).length;\n                    item.parent.selected = childrenCount === selectedCount;\n                }\n                else if (item.children) {\n                    this._setChildrenSelectedState(item.children, true);\n                    this._removeChildren(item);\n                    if (groupAsModel && this._activeChildren(item)) {\n                        this._selected = __spread(this._selected.filter((/**\n                         * @param {?} x\n                         * @return {?}\n                         */\n                        function (x) { return x.parent !== item; })), [item]);\n                    }\n                    else {\n                        this._selected = __spread(this._selected, item.children.filter((/**\n                         * @param {?} x\n                         * @return {?}\n                         */\n                        function (x) { return !x.disabled; })));\n                    }\n                }\n            }\n        };\n        /**\n         * @param {?} item\n         * @param {?} multiple\n         * @return {?}\n         */\n        DefaultSelectionModel.prototype.unselect = /**\n         * @param {?} item\n         * @param {?} multiple\n         * @return {?}\n         */\n        function (item, multiple) {\n            var _a;\n            this._selected = this._selected.filter((/**\n             * @param {?} x\n             * @return {?}\n             */\n            function (x) { return x !== item; }));\n            item.selected = false;\n            if (multiple) {\n                if (item.parent && item.parent.selected) {\n                    /** @type {?} */\n                    var children = item.parent.children;\n                    this._removeParent(item.parent);\n                    this._removeChildren(item.parent);\n                    (_a = this._selected).push.apply(_a, __spread(children.filter((/**\n                     * @param {?} x\n                     * @return {?}\n                     */\n                    function (x) { return x !== item && !x.disabled; }))));\n                    item.parent.selected = false;\n                }\n                else if (item.children) {\n                    this._setChildrenSelectedState(item.children, false);\n                    this._removeChildren(item);\n                }\n            }\n        };\n        /**\n         * @param {?} keepDisabled\n         * @return {?}\n         */\n        DefaultSelectionModel.prototype.clear = /**\n         * @param {?} keepDisabled\n         * @return {?}\n         */\n        function (keepDisabled) {\n            this._selected = keepDisabled ? this._selected.filter((/**\n             * @param {?} x\n             * @return {?}\n             */\n            function (x) { return x.disabled; })) : [];\n        };\n        /**\n         * @private\n         * @param {?} children\n         * @param {?} selected\n         * @return {?}\n         */\n        DefaultSelectionModel.prototype._setChildrenSelectedState = /**\n         * @private\n         * @param {?} children\n         * @param {?} selected\n         * @return {?}\n         */\n        function (children, selected) {\n            var e_1, _a;\n            try {\n                for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                    var child = children_1_1.value;\n                    if (child.disabled) {\n                        continue;\n                    }\n                    child.selected = selected;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            ;\n        };\n        /**\n         * @private\n         * @param {?} parent\n         * @return {?}\n         */\n        DefaultSelectionModel.prototype._removeChildren = /**\n         * @private\n         * @param {?} parent\n         * @return {?}\n         */\n        function (parent) {\n            this._selected = __spread(this._selected.filter((/**\n             * @param {?} x\n             * @return {?}\n             */\n            function (x) { return x.parent !== parent; })), parent.children.filter((/**\n             * @param {?} x\n             * @return {?}\n             */\n            function (x) { return x.parent === parent && x.disabled && x.selected; })));\n        };\n        /**\n         * @private\n         * @param {?} parent\n         * @return {?}\n         */\n        DefaultSelectionModel.prototype._removeParent = /**\n         * @private\n         * @param {?} parent\n         * @return {?}\n         */\n        function (parent) {\n            this._selected = this._selected.filter((/**\n             * @param {?} x\n             * @return {?}\n             */\n            function (x) { return x !== parent; }));\n        };\n        /**\n         * @private\n         * @param {?} item\n         * @return {?}\n         */\n        DefaultSelectionModel.prototype._activeChildren = /**\n         * @private\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) {\n            return item.children.every((/**\n             * @param {?} x\n             * @return {?}\n             */\n            function (x) { return !x.disabled || x.selected; }));\n        };\n        return DefaultSelectionModel;\n    }());\n    if (false) {\n        /**\n         * @type {?}\n         * @private\n         */\n        DefaultSelectionModel.prototype._selected;\n    }\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n     */\n    var ɵ0 = DefaultSelectionModelFactory;\n    var NgSelectModule = /** @class */ (function () {\n        function NgSelectModule() {\n        }\n        NgSelectModule.decorators = [\n            { type: core.NgModule, args: [{\n                        declarations: [\n                            NgDropdownPanelComponent,\n                            NgOptionComponent,\n                            NgSelectComponent,\n                            NgOptgroupTemplateDirective,\n                            NgOptionTemplateDirective,\n                            NgLabelTemplateDirective,\n                            NgMultiLabelTemplateDirective,\n                            NgHeaderTemplateDirective,\n                            NgFooterTemplateDirective,\n                            NgNotFoundTemplateDirective,\n                            NgTypeToSearchTemplateDirective,\n                            NgLoadingTextTemplateDirective,\n                            NgTagTemplateDirective,\n                            NgLoadingSpinnerTemplateDirective,\n                            NgItemLabelDirective\n                        ],\n                        imports: [\n                            common.CommonModule\n                        ],\n                        exports: [\n                            NgSelectComponent,\n                            NgOptionComponent,\n                            NgOptgroupTemplateDirective,\n                            NgOptionTemplateDirective,\n                            NgLabelTemplateDirective,\n                            NgMultiLabelTemplateDirective,\n                            NgHeaderTemplateDirective,\n                            NgFooterTemplateDirective,\n                            NgNotFoundTemplateDirective,\n                            NgTypeToSearchTemplateDirective,\n                            NgLoadingTextTemplateDirective,\n                            NgTagTemplateDirective,\n                            NgLoadingSpinnerTemplateDirective\n                        ],\n                        providers: [\n                            { provide: SELECTION_MODEL_FACTORY, useValue: ɵ0 }\n                        ]\n                    },] }\n        ];\n        return NgSelectModule;\n    }());\n\n    exports.NgSelectComponent = NgSelectComponent;\n    exports.NgSelectConfig = NgSelectConfig;\n    exports.NgSelectModule = NgSelectModule;\n    exports.SELECTION_MODEL_FACTORY = SELECTION_MODEL_FACTORY;\n    exports.ɵb = DefaultSelectionModelFactory;\n    exports.ɵc = DefaultSelectionModel;\n    exports.ɵd = NgDropdownPanelService;\n    exports.ɵe = NgItemLabelDirective;\n    exports.ɵf = NgOptionTemplateDirective;\n    exports.ɵg = NgOptgroupTemplateDirective;\n    exports.ɵh = NgLabelTemplateDirective;\n    exports.ɵi = NgMultiLabelTemplateDirective;\n    exports.ɵj = NgHeaderTemplateDirective;\n    exports.ɵk = NgFooterTemplateDirective;\n    exports.ɵl = NgNotFoundTemplateDirective;\n    exports.ɵm = NgTypeToSearchTemplateDirective;\n    exports.ɵn = NgLoadingTextTemplateDirective;\n    exports.ɵo = NgTagTemplateDirective;\n    exports.ɵp = NgLoadingSpinnerTemplateDirective;\n    exports.ɵq = NgDropdownPanelComponent;\n    exports.ɵr = NgOptionComponent;\n    exports.ɵs = ConsoleService;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]}