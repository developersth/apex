/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Subject } from 'rxjs';
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * @record
 */
import * as ɵngcc0 from '@angular/core';
export function CurrentDragData() { }
if (false) {
    /** @type {?} */
    CurrentDragData.prototype.clientX;
    /** @type {?} */
    CurrentDragData.prototype.clientY;
    /** @type {?} */
    CurrentDragData.prototype.dropData;
    /** @type {?} */
    CurrentDragData.prototype.target;
}
var DraggableHelper = /** @class */ (function () {
    function DraggableHelper() {
        this.currentDrag = new Subject();
    }
    /** @nocollapse */ DraggableHelper.ngInjectableDef = i0.defineInjectable({ factory: function DraggableHelper_Factory() { return new DraggableHelper(); }, token: DraggableHelper, providedIn: "root" });
DraggableHelper.ɵfac = function DraggableHelper_Factory(t) { return new (t || DraggableHelper)(); };
DraggableHelper.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DraggableHelper, factory: function (t) { return DraggableHelper.ɵfac(t); }, providedIn: 'root' });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DraggableHelper, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return DraggableHelper;
}());
export { DraggableHelper };
if (false) {
    /** @type {?} */
    DraggableHelper.prototype.currentDrag;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvYW5ndWxhci1kcmFnZ2FibGUtZHJvcHBhYmxlL2VzbTUvbGliL2RyYWdnYWJsZS1oZWxwZXIucHJvdmlkZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0FBVUE7Ozs7Ozs7Ozs7Ozs7O0tBY0ssQUFLQzs7Ozs7Ozs7O2dEQUNzTSIsImZpbGUiOiJkcmFnZ2FibGUtaGVscGVyLnByb3ZpZGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxleHRyYVJlcXVpcmUsbWlzc2luZ092ZXJyaWRlLG1pc3NpbmdSZXR1cm4sdW51c2VkUHJpdmF0ZU1lbWJlcnMsdXNlbGVzc0NvZGV9IGNoZWNrZWQgYnkgdHNjXG4gKi9cbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAqIGFzIGkwIGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG4vKipcbiAqIEByZWNvcmRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIEN1cnJlbnREcmFnRGF0YSgpIHsgfVxuaWYgKGZhbHNlKSB7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIEN1cnJlbnREcmFnRGF0YS5wcm90b3R5cGUuY2xpZW50WDtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgQ3VycmVudERyYWdEYXRhLnByb3RvdHlwZS5jbGllbnRZO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBDdXJyZW50RHJhZ0RhdGEucHJvdG90eXBlLmRyb3BEYXRhO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBDdXJyZW50RHJhZ0RhdGEucHJvdG90eXBlLnRhcmdldDtcbn1cbnZhciBEcmFnZ2FibGVIZWxwZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRHJhZ2dhYmxlSGVscGVyKCkge1xuICAgICAgICB0aGlzLmN1cnJlbnREcmFnID0gbmV3IFN1YmplY3QoKTtcbiAgICB9XG4gICAgRHJhZ2dhYmxlSGVscGVyLmRlY29yYXRvcnMgPSBbXG4gICAgICAgIHsgdHlwZTogSW5qZWN0YWJsZSwgYXJnczogW3tcbiAgICAgICAgICAgICAgICAgICAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxuICAgICAgICAgICAgICAgIH0sXSB9XG4gICAgXTtcbiAgICAvKiogQG5vY29sbGFwc2UgKi8gRHJhZ2dhYmxlSGVscGVyLm5nSW5qZWN0YWJsZURlZiA9IGkwLmRlZmluZUluamVjdGFibGUoeyBmYWN0b3J5OiBmdW5jdGlvbiBEcmFnZ2FibGVIZWxwZXJfRmFjdG9yeSgpIHsgcmV0dXJuIG5ldyBEcmFnZ2FibGVIZWxwZXIoKTsgfSwgdG9rZW46IERyYWdnYWJsZUhlbHBlciwgcHJvdmlkZWRJbjogXCJyb290XCIgfSk7XG4gICAgcmV0dXJuIERyYWdnYWJsZUhlbHBlcjtcbn0oKSk7XG5leHBvcnQgeyBEcmFnZ2FibGVIZWxwZXIgfTtcbmlmIChmYWxzZSkge1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBEcmFnZ2FibGVIZWxwZXIucHJvdG90eXBlLmN1cnJlbnREcmFnO1xufVxuIl19