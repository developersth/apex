/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.
 *
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the tooltips used in the application.
 */
import * as ɵngcc0 from '@angular/core';
var NgbTooltipConfig = /** @class */ (function () {
    function NgbTooltipConfig() {
        this.autoClose = true;
        this.placement = 'auto';
        this.triggers = 'hover focus';
        this.disableTooltip = false;
        this.openDelay = 0;
        this.closeDelay = 0;
    }
    /** @nocollapse */ NgbTooltipConfig.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function NgbTooltipConfig_Factory() { return new NgbTooltipConfig(); }, token: NgbTooltipConfig, providedIn: "root" });
NgbTooltipConfig.ɵfac = function NgbTooltipConfig_Factory(t) { return new (t || NgbTooltipConfig)(); };
NgbTooltipConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbTooltipConfig, factory: function (t) { return NgbTooltipConfig.ɵfac(t); }, providedIn: 'root' });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTooltipConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, null); })();
    return NgbTooltipConfig;
}());
export { NgbTooltipConfig };
if (false) {
    /** @type {?} */
    NgbTooltipConfig.prototype.autoClose;
    /** @type {?} */
    NgbTooltipConfig.prototype.placement;
    /** @type {?} */
    NgbTooltipConfig.prototype.triggers;
    /** @type {?} */
    NgbTooltipConfig.prototype.container;
    /** @type {?} */
    NgbTooltipConfig.prototype.disableTooltip;
    /** @type {?} */
    NgbTooltipConfig.prototype.tooltipClass;
    /** @type {?} */
    NgbTooltipConfig.prototype.openDelay;
    /** @type {?} */
    NgbTooltipConfig.prototype.closeDelay;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtNS90b29sdGlwL3Rvb2x0aXAtY29uZmlnLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7O0tBUUssQUFHQzs7Ozs7OztnREFDNE0iLCJmaWxlIjoidG9vbHRpcC1jb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGNvbnN0YW50UHJvcGVydHksZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xuICovXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgKiBhcyBpMCBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuLyoqXG4gKiBBIGNvbmZpZ3VyYXRpb24gc2VydmljZSBmb3IgdGhlIFtgTmdiVG9vbHRpcGBdKCMvY29tcG9uZW50cy90b29sdGlwL2FwaSNOZ2JUb29sdGlwKSBjb21wb25lbnQuXG4gKlxuICogWW91IGNhbiBpbmplY3QgdGhpcyBzZXJ2aWNlLCB0eXBpY2FsbHkgaW4geW91ciByb290IGNvbXBvbmVudCwgYW5kIGN1c3RvbWl6ZSB0aGUgdmFsdWVzIG9mIGl0cyBwcm9wZXJ0aWVzIGluXG4gKiBvcmRlciB0byBwcm92aWRlIGRlZmF1bHQgdmFsdWVzIGZvciBhbGwgdGhlIHRvb2x0aXBzIHVzZWQgaW4gdGhlIGFwcGxpY2F0aW9uLlxuICovXG52YXIgTmdiVG9vbHRpcENvbmZpZyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOZ2JUb29sdGlwQ29uZmlnKCkge1xuICAgICAgICB0aGlzLmF1dG9DbG9zZSA9IHRydWU7XG4gICAgICAgIHRoaXMucGxhY2VtZW50ID0gJ2F1dG8nO1xuICAgICAgICB0aGlzLnRyaWdnZXJzID0gJ2hvdmVyIGZvY3VzJztcbiAgICAgICAgdGhpcy5kaXNhYmxlVG9vbHRpcCA9IGZhbHNlO1xuICAgICAgICB0aGlzLm9wZW5EZWxheSA9IDA7XG4gICAgICAgIHRoaXMuY2xvc2VEZWxheSA9IDA7XG4gICAgfVxuICAgIE5nYlRvb2x0aXBDb25maWcuZGVjb3JhdG9ycyA9IFtcbiAgICAgICAgeyB0eXBlOiBJbmplY3RhYmxlLCBhcmdzOiBbeyBwcm92aWRlZEluOiAncm9vdCcgfSxdIH1cbiAgICBdO1xuICAgIC8qKiBAbm9jb2xsYXBzZSAqLyBOZ2JUb29sdGlwQ29uZmlnLm5nSW5qZWN0YWJsZURlZiA9IGkwLsm1ybVkZWZpbmVJbmplY3RhYmxlKHsgZmFjdG9yeTogZnVuY3Rpb24gTmdiVG9vbHRpcENvbmZpZ19GYWN0b3J5KCkgeyByZXR1cm4gbmV3IE5nYlRvb2x0aXBDb25maWcoKTsgfSwgdG9rZW46IE5nYlRvb2x0aXBDb25maWcsIHByb3ZpZGVkSW46IFwicm9vdFwiIH0pO1xuICAgIHJldHVybiBOZ2JUb29sdGlwQ29uZmlnO1xufSgpKTtcbmV4cG9ydCB7IE5nYlRvb2x0aXBDb25maWcgfTtcbmlmIChmYWxzZSkge1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JUb29sdGlwQ29uZmlnLnByb3RvdHlwZS5hdXRvQ2xvc2U7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYlRvb2x0aXBDb25maWcucHJvdG90eXBlLnBsYWNlbWVudDtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiVG9vbHRpcENvbmZpZy5wcm90b3R5cGUudHJpZ2dlcnM7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYlRvb2x0aXBDb25maWcucHJvdG90eXBlLmNvbnRhaW5lcjtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiVG9vbHRpcENvbmZpZy5wcm90b3R5cGUuZGlzYWJsZVRvb2x0aXA7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYlRvb2x0aXBDb25maWcucHJvdG90eXBlLnRvb2x0aXBDbGFzcztcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiVG9vbHRpcENvbmZpZy5wcm90b3R5cGUub3BlbkRlbGF5O1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JUb29sdGlwQ29uZmlnLnByb3RvdHlwZS5jbG9zZURlbGF5O1xufVxuIl19