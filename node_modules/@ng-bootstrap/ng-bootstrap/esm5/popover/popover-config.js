/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.
 *
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the popovers used in the application.
 */
import * as ɵngcc0 from '@angular/core';
var NgbPopoverConfig = /** @class */ (function () {
    function NgbPopoverConfig() {
        this.autoClose = true;
        this.placement = 'auto';
        this.triggers = 'click';
        this.disablePopover = false;
        this.openDelay = 0;
        this.closeDelay = 0;
    }
    /** @nocollapse */ NgbPopoverConfig.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function NgbPopoverConfig_Factory() { return new NgbPopoverConfig(); }, token: NgbPopoverConfig, providedIn: "root" });
NgbPopoverConfig.ɵfac = function NgbPopoverConfig_Factory(t) { return new (t || NgbPopoverConfig)(); };
NgbPopoverConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbPopoverConfig, factory: function (t) { return NgbPopoverConfig.ɵfac(t); }, providedIn: 'root' });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPopoverConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, null); })();
    return NgbPopoverConfig;
}());
export { NgbPopoverConfig };
if (false) {
    /** @type {?} */
    NgbPopoverConfig.prototype.autoClose;
    /** @type {?} */
    NgbPopoverConfig.prototype.placement;
    /** @type {?} */
    NgbPopoverConfig.prototype.triggers;
    /** @type {?} */
    NgbPopoverConfig.prototype.container;
    /** @type {?} */
    NgbPopoverConfig.prototype.disablePopover;
    /** @type {?} */
    NgbPopoverConfig.prototype.popoverClass;
    /** @type {?} */
    NgbPopoverConfig.prototype.openDelay;
    /** @type {?} */
    NgbPopoverConfig.prototype.closeDelay;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtNS9wb3BvdmVyL3BvcG92ZXItY29uZmlnLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7O0tBUUssQUFHQzs7Ozs7OztnREFDNE0iLCJmaWxlIjoicG9wb3Zlci1jb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGNvbnN0YW50UHJvcGVydHksZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xuICovXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgKiBhcyBpMCBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuLyoqXG4gKiBBIGNvbmZpZ3VyYXRpb24gc2VydmljZSBmb3IgdGhlIFtgTmdiUG9wb3ZlcmBdKCMvY29tcG9uZW50cy9wb3BvdmVyL2FwaSNOZ2JQb3BvdmVyKSBjb21wb25lbnQuXG4gKlxuICogWW91IGNhbiBpbmplY3QgdGhpcyBzZXJ2aWNlLCB0eXBpY2FsbHkgaW4geW91ciByb290IGNvbXBvbmVudCwgYW5kIGN1c3RvbWl6ZSB0aGUgdmFsdWVzIG9mIGl0cyBwcm9wZXJ0aWVzIGluXG4gKiBvcmRlciB0byBwcm92aWRlIGRlZmF1bHQgdmFsdWVzIGZvciBhbGwgdGhlIHBvcG92ZXJzIHVzZWQgaW4gdGhlIGFwcGxpY2F0aW9uLlxuICovXG52YXIgTmdiUG9wb3ZlckNvbmZpZyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOZ2JQb3BvdmVyQ29uZmlnKCkge1xuICAgICAgICB0aGlzLmF1dG9DbG9zZSA9IHRydWU7XG4gICAgICAgIHRoaXMucGxhY2VtZW50ID0gJ2F1dG8nO1xuICAgICAgICB0aGlzLnRyaWdnZXJzID0gJ2NsaWNrJztcbiAgICAgICAgdGhpcy5kaXNhYmxlUG9wb3ZlciA9IGZhbHNlO1xuICAgICAgICB0aGlzLm9wZW5EZWxheSA9IDA7XG4gICAgICAgIHRoaXMuY2xvc2VEZWxheSA9IDA7XG4gICAgfVxuICAgIE5nYlBvcG92ZXJDb25maWcuZGVjb3JhdG9ycyA9IFtcbiAgICAgICAgeyB0eXBlOiBJbmplY3RhYmxlLCBhcmdzOiBbeyBwcm92aWRlZEluOiAncm9vdCcgfSxdIH1cbiAgICBdO1xuICAgIC8qKiBAbm9jb2xsYXBzZSAqLyBOZ2JQb3BvdmVyQ29uZmlnLm5nSW5qZWN0YWJsZURlZiA9IGkwLsm1ybVkZWZpbmVJbmplY3RhYmxlKHsgZmFjdG9yeTogZnVuY3Rpb24gTmdiUG9wb3ZlckNvbmZpZ19GYWN0b3J5KCkgeyByZXR1cm4gbmV3IE5nYlBvcG92ZXJDb25maWcoKTsgfSwgdG9rZW46IE5nYlBvcG92ZXJDb25maWcsIHByb3ZpZGVkSW46IFwicm9vdFwiIH0pO1xuICAgIHJldHVybiBOZ2JQb3BvdmVyQ29uZmlnO1xufSgpKTtcbmV4cG9ydCB7IE5nYlBvcG92ZXJDb25maWcgfTtcbmlmIChmYWxzZSkge1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JQb3BvdmVyQ29uZmlnLnByb3RvdHlwZS5hdXRvQ2xvc2U7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYlBvcG92ZXJDb25maWcucHJvdG90eXBlLnBsYWNlbWVudDtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiUG9wb3ZlckNvbmZpZy5wcm90b3R5cGUudHJpZ2dlcnM7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYlBvcG92ZXJDb25maWcucHJvdG90eXBlLmNvbnRhaW5lcjtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiUG9wb3ZlckNvbmZpZy5wcm90b3R5cGUuZGlzYWJsZVBvcG92ZXI7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYlBvcG92ZXJDb25maWcucHJvdG90eXBlLnBvcG92ZXJDbGFzcztcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiUG9wb3ZlckNvbmZpZy5wcm90b3R5cGUub3BlbkRlbGF5O1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JQb3BvdmVyQ29uZmlnLnByb3RvdHlwZS5jbG9zZURlbGF5O1xufVxuIl19