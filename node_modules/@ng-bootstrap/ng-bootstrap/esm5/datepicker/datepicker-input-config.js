/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { NgbDatepickerConfig } from './datepicker-config';
import * as i0 from "@angular/core";
/**
 * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.
 *
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the datepicker inputs used in the application.
 *
 * \@since 5.2.0
 */
import * as ɵngcc0 from '@angular/core';
var NgbInputDatepickerConfig = /** @class */ (function (_super) {
    tslib_1.__extends(NgbInputDatepickerConfig, _super);
    function NgbInputDatepickerConfig() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.autoClose = true;
        _this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];
        _this.restoreFocus = true;
        return _this;
    }
    /** @nocollapse */ NgbInputDatepickerConfig.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function NgbInputDatepickerConfig_Factory() { return new NgbInputDatepickerConfig(); }, token: NgbInputDatepickerConfig, providedIn: "root" });
NgbInputDatepickerConfig.ɵfac = function NgbInputDatepickerConfig_Factory(t) { return ɵNgbInputDatepickerConfig_BaseFactory(t || NgbInputDatepickerConfig); };
NgbInputDatepickerConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbInputDatepickerConfig, factory: function (t) { return NgbInputDatepickerConfig.ɵfac(t); }, providedIn: 'root' });
var ɵNgbInputDatepickerConfig_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NgbInputDatepickerConfig);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbInputDatepickerConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], null, null); })();
    return NgbInputDatepickerConfig;
}(NgbDatepickerConfig));
export { NgbInputDatepickerConfig };
if (false) {
    /** @type {?} */
    NgbInputDatepickerConfig.prototype.autoClose;
    /** @type {?} */
    NgbInputDatepickerConfig.prototype.container;
    /** @type {?} */
    NgbInputDatepickerConfig.prototype.positionTarget;
    /** @type {?} */
    NgbInputDatepickerConfig.prototype.placement;
    /** @type {?} */
    NgbInputDatepickerConfig.prototype.restoreFocus;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtNS9kYXRlcGlja2VyL2RhdGVwaWNrZXItaW5wdXQtY29uZmlnLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7OztBQWdCQTs7Ozs7Ozs7S0FRSyxBQUdDOzs7Ozs7OzswQkFDNE8iLCJmaWxlIjoiZGF0ZXBpY2tlci1pbnB1dC1jb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGNvbnN0YW50UHJvcGVydHksZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xuICovXG5pbXBvcnQgKiBhcyB0c2xpYl8xIGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdiRGF0ZXBpY2tlckNvbmZpZyB9IGZyb20gJy4vZGF0ZXBpY2tlci1jb25maWcnO1xuaW1wb3J0ICogYXMgaTAgZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbi8qKlxuICogQSBjb25maWd1cmF0aW9uIHNlcnZpY2UgZm9yIHRoZSBbYE5nYkRhdGVwaWNrZXJJbnB1dGBdKCMvY29tcG9uZW50cy9kYXRlcGlja2VyL2FwaSNOZ2JEYXRlcGlja2VyKSBjb21wb25lbnQuXG4gKlxuICogWW91IGNhbiBpbmplY3QgdGhpcyBzZXJ2aWNlLCB0eXBpY2FsbHkgaW4geW91ciByb290IGNvbXBvbmVudCwgYW5kIGN1c3RvbWl6ZSB0aGUgdmFsdWVzIG9mIGl0cyBwcm9wZXJ0aWVzIGluXG4gKiBvcmRlciB0byBwcm92aWRlIGRlZmF1bHQgdmFsdWVzIGZvciBhbGwgdGhlIGRhdGVwaWNrZXIgaW5wdXRzIHVzZWQgaW4gdGhlIGFwcGxpY2F0aW9uLlxuICpcbiAqIFxcQHNpbmNlIDUuMi4wXG4gKi9cbnZhciBOZ2JJbnB1dERhdGVwaWNrZXJDb25maWcgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgdHNsaWJfMS5fX2V4dGVuZHMoTmdiSW5wdXREYXRlcGlja2VyQ29uZmlnLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIE5nYklucHV0RGF0ZXBpY2tlckNvbmZpZygpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmF1dG9DbG9zZSA9IHRydWU7XG4gICAgICAgIF90aGlzLnBsYWNlbWVudCA9IFsnYm90dG9tLWxlZnQnLCAnYm90dG9tLXJpZ2h0JywgJ3RvcC1sZWZ0JywgJ3RvcC1yaWdodCddO1xuICAgICAgICBfdGhpcy5yZXN0b3JlRm9jdXMgPSB0cnVlO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIE5nYklucHV0RGF0ZXBpY2tlckNvbmZpZy5kZWNvcmF0b3JzID0gW1xuICAgICAgICB7IHR5cGU6IEluamVjdGFibGUsIGFyZ3M6IFt7IHByb3ZpZGVkSW46ICdyb290JyB9LF0gfVxuICAgIF07XG4gICAgLyoqIEBub2NvbGxhcHNlICovIE5nYklucHV0RGF0ZXBpY2tlckNvbmZpZy5uZ0luamVjdGFibGVEZWYgPSBpMC7Jtcm1ZGVmaW5lSW5qZWN0YWJsZSh7IGZhY3Rvcnk6IGZ1bmN0aW9uIE5nYklucHV0RGF0ZXBpY2tlckNvbmZpZ19GYWN0b3J5KCkgeyByZXR1cm4gbmV3IE5nYklucHV0RGF0ZXBpY2tlckNvbmZpZygpOyB9LCB0b2tlbjogTmdiSW5wdXREYXRlcGlja2VyQ29uZmlnLCBwcm92aWRlZEluOiBcInJvb3RcIiB9KTtcbiAgICByZXR1cm4gTmdiSW5wdXREYXRlcGlja2VyQ29uZmlnO1xufShOZ2JEYXRlcGlja2VyQ29uZmlnKSk7XG5leHBvcnQgeyBOZ2JJbnB1dERhdGVwaWNrZXJDb25maWcgfTtcbmlmIChmYWxzZSkge1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JJbnB1dERhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmF1dG9DbG9zZTtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiSW5wdXREYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5jb250YWluZXI7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYklucHV0RGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUucG9zaXRpb25UYXJnZXQ7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYklucHV0RGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUucGxhY2VtZW50O1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JJbnB1dERhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLnJlc3RvcmVGb2N1cztcbn1cbiJdfQ==