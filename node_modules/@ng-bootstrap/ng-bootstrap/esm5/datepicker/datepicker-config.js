/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.
 *
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the datepickers used in the application.
 */
import * as ɵngcc0 from '@angular/core';
var NgbDatepickerConfig = /** @class */ (function () {
    function NgbDatepickerConfig() {
        this.displayMonths = 1;
        this.firstDayOfWeek = 1;
        this.navigation = 'select';
        this.outsideDays = 'visible';
        this.showWeekdays = true;
        this.showWeekNumbers = false;
    }
    /** @nocollapse */ NgbDatepickerConfig.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function NgbDatepickerConfig_Factory() { return new NgbDatepickerConfig(); }, token: NgbDatepickerConfig, providedIn: "root" });
NgbDatepickerConfig.ɵfac = function NgbDatepickerConfig_Factory(t) { return new (t || NgbDatepickerConfig)(); };
NgbDatepickerConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbDatepickerConfig, factory: function (t) { return NgbDatepickerConfig.ɵfac(t); }, providedIn: 'root' });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDatepickerConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, null); })();
    return NgbDatepickerConfig;
}());
export { NgbDatepickerConfig };
if (false) {
    /** @type {?} */
    NgbDatepickerConfig.prototype.dayTemplate;
    /** @type {?} */
    NgbDatepickerConfig.prototype.dayTemplateData;
    /** @type {?} */
    NgbDatepickerConfig.prototype.footerTemplate;
    /** @type {?} */
    NgbDatepickerConfig.prototype.displayMonths;
    /** @type {?} */
    NgbDatepickerConfig.prototype.firstDayOfWeek;
    /** @type {?} */
    NgbDatepickerConfig.prototype.markDisabled;
    /** @type {?} */
    NgbDatepickerConfig.prototype.minDate;
    /** @type {?} */
    NgbDatepickerConfig.prototype.maxDate;
    /** @type {?} */
    NgbDatepickerConfig.prototype.navigation;
    /** @type {?} */
    NgbDatepickerConfig.prototype.outsideDays;
    /** @type {?} */
    NgbDatepickerConfig.prototype.showWeekdays;
    /** @type {?} */
    NgbDatepickerConfig.prototype.showWeekNumbers;
    /** @type {?} */
    NgbDatepickerConfig.prototype.startDate;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtNS9kYXRlcGlja2VyL2RhdGVwaWNrZXItY29uZmlnLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7O0tBUUssQUFHQzs7Ozs7OztnREFDd04iLCJmaWxlIjoiZGF0ZXBpY2tlci1jb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGNvbnN0YW50UHJvcGVydHksZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xuICovXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgKiBhcyBpMCBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuLyoqXG4gKiBBIGNvbmZpZ3VyYXRpb24gc2VydmljZSBmb3IgdGhlIFtgTmdiRGF0ZXBpY2tlcmBdKCMvY29tcG9uZW50cy9kYXRlcGlja2VyL2FwaSNOZ2JEYXRlcGlja2VyKSBjb21wb25lbnQuXG4gKlxuICogWW91IGNhbiBpbmplY3QgdGhpcyBzZXJ2aWNlLCB0eXBpY2FsbHkgaW4geW91ciByb290IGNvbXBvbmVudCwgYW5kIGN1c3RvbWl6ZSB0aGUgdmFsdWVzIG9mIGl0cyBwcm9wZXJ0aWVzIGluXG4gKiBvcmRlciB0byBwcm92aWRlIGRlZmF1bHQgdmFsdWVzIGZvciBhbGwgdGhlIGRhdGVwaWNrZXJzIHVzZWQgaW4gdGhlIGFwcGxpY2F0aW9uLlxuICovXG52YXIgTmdiRGF0ZXBpY2tlckNvbmZpZyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOZ2JEYXRlcGlja2VyQ29uZmlnKCkge1xuICAgICAgICB0aGlzLmRpc3BsYXlNb250aHMgPSAxO1xuICAgICAgICB0aGlzLmZpcnN0RGF5T2ZXZWVrID0gMTtcbiAgICAgICAgdGhpcy5uYXZpZ2F0aW9uID0gJ3NlbGVjdCc7XG4gICAgICAgIHRoaXMub3V0c2lkZURheXMgPSAndmlzaWJsZSc7XG4gICAgICAgIHRoaXMuc2hvd1dlZWtkYXlzID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5zaG93V2Vla051bWJlcnMgPSBmYWxzZTtcbiAgICB9XG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5kZWNvcmF0b3JzID0gW1xuICAgICAgICB7IHR5cGU6IEluamVjdGFibGUsIGFyZ3M6IFt7IHByb3ZpZGVkSW46ICdyb290JyB9LF0gfVxuICAgIF07XG4gICAgLyoqIEBub2NvbGxhcHNlICovIE5nYkRhdGVwaWNrZXJDb25maWcubmdJbmplY3RhYmxlRGVmID0gaTAuybXJtWRlZmluZUluamVjdGFibGUoeyBmYWN0b3J5OiBmdW5jdGlvbiBOZ2JEYXRlcGlja2VyQ29uZmlnX0ZhY3RvcnkoKSB7IHJldHVybiBuZXcgTmdiRGF0ZXBpY2tlckNvbmZpZygpOyB9LCB0b2tlbjogTmdiRGF0ZXBpY2tlckNvbmZpZywgcHJvdmlkZWRJbjogXCJyb290XCIgfSk7XG4gICAgcmV0dXJuIE5nYkRhdGVwaWNrZXJDb25maWc7XG59KCkpO1xuZXhwb3J0IHsgTmdiRGF0ZXBpY2tlckNvbmZpZyB9O1xuaWYgKGZhbHNlKSB7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYkRhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmRheVRlbXBsYXRlO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5kYXlUZW1wbGF0ZURhdGE7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYkRhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmZvb3RlclRlbXBsYXRlO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5kaXNwbGF5TW9udGhzO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5maXJzdERheU9mV2VlaztcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUubWFya0Rpc2FibGVkO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5taW5EYXRlO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5tYXhEYXRlO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5uYXZpZ2F0aW9uO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5vdXRzaWRlRGF5cztcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuc2hvd1dlZWtkYXlzO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5zaG93V2Vla051bWJlcnM7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYkRhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLnN0YXJ0RGF0ZTtcbn1cbiJdfQ==