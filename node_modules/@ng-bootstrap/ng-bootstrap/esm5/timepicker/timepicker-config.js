/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.
 *
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the timepickers used in the application.
 */
import * as ɵngcc0 from '@angular/core';
var NgbTimepickerConfig = /** @class */ (function () {
    function NgbTimepickerConfig() {
        this.meridian = false;
        this.spinners = true;
        this.seconds = false;
        this.hourStep = 1;
        this.minuteStep = 1;
        this.secondStep = 1;
        this.disabled = false;
        this.readonlyInputs = false;
        this.size = 'medium';
    }
    /** @nocollapse */ NgbTimepickerConfig.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function NgbTimepickerConfig_Factory() { return new NgbTimepickerConfig(); }, token: NgbTimepickerConfig, providedIn: "root" });
NgbTimepickerConfig.ɵfac = function NgbTimepickerConfig_Factory(t) { return new (t || NgbTimepickerConfig)(); };
NgbTimepickerConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbTimepickerConfig, factory: function (t) { return NgbTimepickerConfig.ɵfac(t); }, providedIn: 'root' });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTimepickerConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, null); })();
    return NgbTimepickerConfig;
}());
export { NgbTimepickerConfig };
if (false) {
    /** @type {?} */
    NgbTimepickerConfig.prototype.meridian;
    /** @type {?} */
    NgbTimepickerConfig.prototype.spinners;
    /** @type {?} */
    NgbTimepickerConfig.prototype.seconds;
    /** @type {?} */
    NgbTimepickerConfig.prototype.hourStep;
    /** @type {?} */
    NgbTimepickerConfig.prototype.minuteStep;
    /** @type {?} */
    NgbTimepickerConfig.prototype.secondStep;
    /** @type {?} */
    NgbTimepickerConfig.prototype.disabled;
    /** @type {?} */
    NgbTimepickerConfig.prototype.readonlyInputs;
    /** @type {?} */
    NgbTimepickerConfig.prototype.size;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtNS90aW1lcGlja2VyL3RpbWVwaWNrZXItY29uZmlnLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7Ozs7O0tBV0ssQUFHQzs7Ozs7OztnREFDd04iLCJmaWxlIjoidGltZXBpY2tlci1jb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGNvbnN0YW50UHJvcGVydHksZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xuICovXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgKiBhcyBpMCBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuLyoqXG4gKiBBIGNvbmZpZ3VyYXRpb24gc2VydmljZSBmb3IgdGhlIFtgTmdiVGltZXBpY2tlcmBdKCMvY29tcG9uZW50cy90aW1lcGlja2VyL2FwaSNOZ2JUaW1lcGlja2VyKSBjb21wb25lbnQuXG4gKlxuICogWW91IGNhbiBpbmplY3QgdGhpcyBzZXJ2aWNlLCB0eXBpY2FsbHkgaW4geW91ciByb290IGNvbXBvbmVudCwgYW5kIGN1c3RvbWl6ZSB0aGUgdmFsdWVzIG9mIGl0cyBwcm9wZXJ0aWVzIGluXG4gKiBvcmRlciB0byBwcm92aWRlIGRlZmF1bHQgdmFsdWVzIGZvciBhbGwgdGhlIHRpbWVwaWNrZXJzIHVzZWQgaW4gdGhlIGFwcGxpY2F0aW9uLlxuICovXG52YXIgTmdiVGltZXBpY2tlckNvbmZpZyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOZ2JUaW1lcGlja2VyQ29uZmlnKCkge1xuICAgICAgICB0aGlzLm1lcmlkaWFuID0gZmFsc2U7XG4gICAgICAgIHRoaXMuc3Bpbm5lcnMgPSB0cnVlO1xuICAgICAgICB0aGlzLnNlY29uZHMgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5ob3VyU3RlcCA9IDE7XG4gICAgICAgIHRoaXMubWludXRlU3RlcCA9IDE7XG4gICAgICAgIHRoaXMuc2Vjb25kU3RlcCA9IDE7XG4gICAgICAgIHRoaXMuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5yZWFkb25seUlucHV0cyA9IGZhbHNlO1xuICAgICAgICB0aGlzLnNpemUgPSAnbWVkaXVtJztcbiAgICB9XG4gICAgTmdiVGltZXBpY2tlckNvbmZpZy5kZWNvcmF0b3JzID0gW1xuICAgICAgICB7IHR5cGU6IEluamVjdGFibGUsIGFyZ3M6IFt7IHByb3ZpZGVkSW46ICdyb290JyB9LF0gfVxuICAgIF07XG4gICAgLyoqIEBub2NvbGxhcHNlICovIE5nYlRpbWVwaWNrZXJDb25maWcubmdJbmplY3RhYmxlRGVmID0gaTAuybXJtWRlZmluZUluamVjdGFibGUoeyBmYWN0b3J5OiBmdW5jdGlvbiBOZ2JUaW1lcGlja2VyQ29uZmlnX0ZhY3RvcnkoKSB7IHJldHVybiBuZXcgTmdiVGltZXBpY2tlckNvbmZpZygpOyB9LCB0b2tlbjogTmdiVGltZXBpY2tlckNvbmZpZywgcHJvdmlkZWRJbjogXCJyb290XCIgfSk7XG4gICAgcmV0dXJuIE5nYlRpbWVwaWNrZXJDb25maWc7XG59KCkpO1xuZXhwb3J0IHsgTmdiVGltZXBpY2tlckNvbmZpZyB9O1xuaWYgKGZhbHNlKSB7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYlRpbWVwaWNrZXJDb25maWcucHJvdG90eXBlLm1lcmlkaWFuO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JUaW1lcGlja2VyQ29uZmlnLnByb3RvdHlwZS5zcGlubmVycztcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiVGltZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuc2Vjb25kcztcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiVGltZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuaG91clN0ZXA7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYlRpbWVwaWNrZXJDb25maWcucHJvdG90eXBlLm1pbnV0ZVN0ZXA7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYlRpbWVwaWNrZXJDb25maWcucHJvdG90eXBlLnNlY29uZFN0ZXA7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYlRpbWVwaWNrZXJDb25maWcucHJvdG90eXBlLmRpc2FibGVkO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JUaW1lcGlja2VyQ29uZmlnLnByb3RvdHlwZS5yZWFkb25seUlucHV0cztcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiVGltZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuc2l6ZTtcbn1cbiJdfQ==