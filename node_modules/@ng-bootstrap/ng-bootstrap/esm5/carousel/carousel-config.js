/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.
 *
 * You can inject this service, typically in your root component, and customize its properties
 * to provide default values for all carousels used in the application.
 */
import * as ɵngcc0 from '@angular/core';
var NgbCarouselConfig = /** @class */ (function () {
    function NgbCarouselConfig() {
        this.interval = 5000;
        this.wrap = true;
        this.keyboard = true;
        this.pauseOnHover = true;
        this.showNavigationArrows = true;
        this.showNavigationIndicators = true;
    }
    /** @nocollapse */ NgbCarouselConfig.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function NgbCarouselConfig_Factory() { return new NgbCarouselConfig(); }, token: NgbCarouselConfig, providedIn: "root" });
NgbCarouselConfig.ɵfac = function NgbCarouselConfig_Factory(t) { return new (t || NgbCarouselConfig)(); };
NgbCarouselConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbCarouselConfig, factory: function (t) { return NgbCarouselConfig.ɵfac(t); }, providedIn: 'root' });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbCarouselConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, null); })();
    return NgbCarouselConfig;
}());
export { NgbCarouselConfig };
if (false) {
    /** @type {?} */
    NgbCarouselConfig.prototype.interval;
    /** @type {?} */
    NgbCarouselConfig.prototype.wrap;
    /** @type {?} */
    NgbCarouselConfig.prototype.keyboard;
    /** @type {?} */
    NgbCarouselConfig.prototype.pauseOnHover;
    /** @type {?} */
    NgbCarouselConfig.prototype.showNavigationArrows;
    /** @type {?} */
    NgbCarouselConfig.prototype.showNavigationIndicators;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtNS9jYXJvdXNlbC9jYXJvdXNlbC1jb25maWcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7QUFZQTs7Ozs7Ozs7S0FRSyxBQUdDOzs7Ozs7O2dEQUNnTiIsImZpbGUiOiJjYXJvdXNlbC1jb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGNvbnN0YW50UHJvcGVydHksZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xuICovXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgKiBhcyBpMCBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuLyoqXG4gKiBBIGNvbmZpZ3VyYXRpb24gc2VydmljZSBmb3IgdGhlIFtOZ2JDYXJvdXNlbF0oIy9jb21wb25lbnRzL2Nhcm91c2VsL2FwaSNOZ2JDYXJvdXNlbCkgY29tcG9uZW50LlxuICpcbiAqIFlvdSBjYW4gaW5qZWN0IHRoaXMgc2VydmljZSwgdHlwaWNhbGx5IGluIHlvdXIgcm9vdCBjb21wb25lbnQsIGFuZCBjdXN0b21pemUgaXRzIHByb3BlcnRpZXNcbiAqIHRvIHByb3ZpZGUgZGVmYXVsdCB2YWx1ZXMgZm9yIGFsbCBjYXJvdXNlbHMgdXNlZCBpbiB0aGUgYXBwbGljYXRpb24uXG4gKi9cbnZhciBOZ2JDYXJvdXNlbENvbmZpZyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOZ2JDYXJvdXNlbENvbmZpZygpIHtcbiAgICAgICAgdGhpcy5pbnRlcnZhbCA9IDUwMDA7XG4gICAgICAgIHRoaXMud3JhcCA9IHRydWU7XG4gICAgICAgIHRoaXMua2V5Ym9hcmQgPSB0cnVlO1xuICAgICAgICB0aGlzLnBhdXNlT25Ib3ZlciA9IHRydWU7XG4gICAgICAgIHRoaXMuc2hvd05hdmlnYXRpb25BcnJvd3MgPSB0cnVlO1xuICAgICAgICB0aGlzLnNob3dOYXZpZ2F0aW9uSW5kaWNhdG9ycyA9IHRydWU7XG4gICAgfVxuICAgIE5nYkNhcm91c2VsQ29uZmlnLmRlY29yYXRvcnMgPSBbXG4gICAgICAgIHsgdHlwZTogSW5qZWN0YWJsZSwgYXJnczogW3sgcHJvdmlkZWRJbjogJ3Jvb3QnIH0sXSB9XG4gICAgXTtcbiAgICAvKiogQG5vY29sbGFwc2UgKi8gTmdiQ2Fyb3VzZWxDb25maWcubmdJbmplY3RhYmxlRGVmID0gaTAuybXJtWRlZmluZUluamVjdGFibGUoeyBmYWN0b3J5OiBmdW5jdGlvbiBOZ2JDYXJvdXNlbENvbmZpZ19GYWN0b3J5KCkgeyByZXR1cm4gbmV3IE5nYkNhcm91c2VsQ29uZmlnKCk7IH0sIHRva2VuOiBOZ2JDYXJvdXNlbENvbmZpZywgcHJvdmlkZWRJbjogXCJyb290XCIgfSk7XG4gICAgcmV0dXJuIE5nYkNhcm91c2VsQ29uZmlnO1xufSgpKTtcbmV4cG9ydCB7IE5nYkNhcm91c2VsQ29uZmlnIH07XG5pZiAoZmFsc2UpIHtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiQ2Fyb3VzZWxDb25maWcucHJvdG90eXBlLmludGVydmFsO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JDYXJvdXNlbENvbmZpZy5wcm90b3R5cGUud3JhcDtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiQ2Fyb3VzZWxDb25maWcucHJvdG90eXBlLmtleWJvYXJkO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JDYXJvdXNlbENvbmZpZy5wcm90b3R5cGUucGF1c2VPbkhvdmVyO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JDYXJvdXNlbENvbmZpZy5wcm90b3R5cGUuc2hvd05hdmlnYXRpb25BcnJvd3M7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYkNhcm91c2VsQ29uZmlnLnByb3RvdHlwZS5zaG93TmF2aWdhdGlvbkluZGljYXRvcnM7XG59XG4iXX0=