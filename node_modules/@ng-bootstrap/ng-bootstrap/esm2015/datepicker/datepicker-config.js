/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.
 *
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the datepickers used in the application.
 */
import * as ɵngcc0 from '@angular/core';
export class NgbDatepickerConfig {
    constructor() {
        this.displayMonths = 1;
        this.firstDayOfWeek = 1;
        this.navigation = 'select';
        this.outsideDays = 'visible';
        this.showWeekdays = true;
        this.showWeekNumbers = false;
    }
}
NgbDatepickerConfig.ɵfac = function NgbDatepickerConfig_Factory(t) { return new (t || NgbDatepickerConfig)(); };
NgbDatepickerConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbDatepickerConfig, factory: NgbDatepickerConfig.ɵfac, providedIn: 'root' });
/** @nocollapse */ NgbDatepickerConfig.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function NgbDatepickerConfig_Factory() { return new NgbDatepickerConfig(); }, token: NgbDatepickerConfig, providedIn: "root" });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDatepickerConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, null); })();
if (false) {
    /** @type {?} */
    NgbDatepickerConfig.prototype.dayTemplate;
    /** @type {?} */
    NgbDatepickerConfig.prototype.dayTemplateData;
    /** @type {?} */
    NgbDatepickerConfig.prototype.footerTemplate;
    /** @type {?} */
    NgbDatepickerConfig.prototype.displayMonths;
    /** @type {?} */
    NgbDatepickerConfig.prototype.firstDayOfWeek;
    /** @type {?} */
    NgbDatepickerConfig.prototype.markDisabled;
    /** @type {?} */
    NgbDatepickerConfig.prototype.minDate;
    /** @type {?} */
    NgbDatepickerConfig.prototype.maxDate;
    /** @type {?} */
    NgbDatepickerConfig.prototype.navigation;
    /** @type {?} */
    NgbDatepickerConfig.prototype.outsideDays;
    /** @type {?} */
    NgbDatepickerConfig.prototype.showWeekdays;
    /** @type {?} */
    NgbDatepickerConfig.prototype.showWeekNumbers;
    /** @type {?} */
    NgbDatepickerConfig.prototype.startDate;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNwcm8va3JpdHNhZGVlL1NWTi9DeWJlcnNvZnQvYXBleC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtMjAxNS9kYXRlcGlja2VyL2RhdGVwaWNrZXItY29uZmlnLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7Ozs7O0NBU0MsNElBR0M7Ozs7O2dEQUN3TiIsImZpbGUiOiJkYXRlcGlja2VyLWNvbmZpZy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXMsY29uc3RhbnRQcm9wZXJ0eSxleHRyYVJlcXVpcmUsbWlzc2luZ092ZXJyaWRlLG1pc3NpbmdSZXR1cm4sdW51c2VkUHJpdmF0ZU1lbWJlcnMsdXNlbGVzc0NvZGV9IGNoZWNrZWQgYnkgdHNjXG4gKi9cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAqIGFzIGkwIGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG4vKipcbiAqIEEgY29uZmlndXJhdGlvbiBzZXJ2aWNlIGZvciB0aGUgW2BOZ2JEYXRlcGlja2VyYF0oIy9jb21wb25lbnRzL2RhdGVwaWNrZXIvYXBpI05nYkRhdGVwaWNrZXIpIGNvbXBvbmVudC5cbiAqXG4gKiBZb3UgY2FuIGluamVjdCB0aGlzIHNlcnZpY2UsIHR5cGljYWxseSBpbiB5b3VyIHJvb3QgY29tcG9uZW50LCBhbmQgY3VzdG9taXplIHRoZSB2YWx1ZXMgb2YgaXRzIHByb3BlcnRpZXMgaW5cbiAqIG9yZGVyIHRvIHByb3ZpZGUgZGVmYXVsdCB2YWx1ZXMgZm9yIGFsbCB0aGUgZGF0ZXBpY2tlcnMgdXNlZCBpbiB0aGUgYXBwbGljYXRpb24uXG4gKi9cbmV4cG9ydCBjbGFzcyBOZ2JEYXRlcGlja2VyQ29uZmlnIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5kaXNwbGF5TW9udGhzID0gMTtcbiAgICAgICAgdGhpcy5maXJzdERheU9mV2VlayA9IDE7XG4gICAgICAgIHRoaXMubmF2aWdhdGlvbiA9ICdzZWxlY3QnO1xuICAgICAgICB0aGlzLm91dHNpZGVEYXlzID0gJ3Zpc2libGUnO1xuICAgICAgICB0aGlzLnNob3dXZWVrZGF5cyA9IHRydWU7XG4gICAgICAgIHRoaXMuc2hvd1dlZWtOdW1iZXJzID0gZmFsc2U7XG4gICAgfVxufVxuTmdiRGF0ZXBpY2tlckNvbmZpZy5kZWNvcmF0b3JzID0gW1xuICAgIHsgdHlwZTogSW5qZWN0YWJsZSwgYXJnczogW3sgcHJvdmlkZWRJbjogJ3Jvb3QnIH0sXSB9XG5dO1xuLyoqIEBub2NvbGxhcHNlICovIE5nYkRhdGVwaWNrZXJDb25maWcubmdJbmplY3RhYmxlRGVmID0gaTAuybXJtWRlZmluZUluamVjdGFibGUoeyBmYWN0b3J5OiBmdW5jdGlvbiBOZ2JEYXRlcGlja2VyQ29uZmlnX0ZhY3RvcnkoKSB7IHJldHVybiBuZXcgTmdiRGF0ZXBpY2tlckNvbmZpZygpOyB9LCB0b2tlbjogTmdiRGF0ZXBpY2tlckNvbmZpZywgcHJvdmlkZWRJbjogXCJyb290XCIgfSk7XG5pZiAoZmFsc2UpIHtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuZGF5VGVtcGxhdGU7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYkRhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmRheVRlbXBsYXRlRGF0YTtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuZm9vdGVyVGVtcGxhdGU7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYkRhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmRpc3BsYXlNb250aHM7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYkRhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmZpcnN0RGF5T2ZXZWVrO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5tYXJrRGlzYWJsZWQ7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYkRhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLm1pbkRhdGU7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYkRhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLm1heERhdGU7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYkRhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLm5hdmlnYXRpb247XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYkRhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLm91dHNpZGVEYXlzO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5zaG93V2Vla2RheXM7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYkRhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLnNob3dXZWVrTnVtYmVycztcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuc3RhcnREYXRlO1xufVxuIl19